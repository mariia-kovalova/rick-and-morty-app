{"version":3,"file":"static/js/358.3ab94123.chunk.js","mappings":"qLAAaA,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAnB,EAE3BC,EAA0B,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAC/BC,EAAsB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,oBCQlCC,GAA0BC,EAAAA,EAAAA,IAC9B,CDXiC,SAAAR,GAAK,OAAIA,EAAMC,SAASQ,KAAnB,ECWhBC,EAAAA,IACtBC,EAAAA,GAGWC,EAAc,WAMzB,MAAO,CACLV,MANWW,EAAAA,EAAAA,IAAYd,GAOvBE,UANeY,EAAAA,EAAAA,IAAYN,GAO3BH,WANgBS,EAAAA,EAAAA,IAAYV,GAO5BG,OANYO,EAAAA,EAAAA,IAAYR,GAQ3B,C,oJCrBYS,GAAa,OAAOC,EAAAA,GAAP,qBAAH,sEAIS,qBAAGC,MAAkBC,KAArB,GAJT,4CAYVC,GAAO,OAAOC,EAAAA,GAAP,qBAAH,oDAIK,qBAAGH,MAAkBI,SAArB,GAJL,sBAKK,qBAAGJ,MAAkBK,gBAArB,GALL,kCAOiBC,EAAAA,GAPjB,6EAYmBA,EAAAA,GAZnB,4LA4BmBA,EAAAA,GA5BnB,oHA0CO,qBAAGN,MAAkBO,qBAArB,GA1CP,kCA4CmBD,EAAAA,GA5CnB,qBAkDJE,GAAG,sGAKkBF,EAAAA,GALlB,iCAUHG,GAAe,OAAOC,EAAAA,EAAP,qBAAH,kFAMG,qBAAGV,MAAkBC,KAArB,GANH,IAQrBH,EARqB,mBASZ,qBAAGE,MAAkBW,uBAArB,GATY,mCAYSL,EAAAA,GAZT,sBAiBZM,GAAS,+GASRC,EAAAA,EATQ,SAUVA,EAAAA,EAVU,M,4DChFTC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,GAAeC,EAAAA,EAAAA,OAArB,GAAqC,IACxDC,EAAQD,EAAAA,EAAOH,GAEbK,EAA0BR,EAA1BQ,GAAIC,EAAsBT,EAAtBS,KAAMC,EAAgBV,EAAhBU,YAElB,OACE,SAAC3B,EAAD,CAAY4B,GAAE,WAAMzC,EAAAA,GAAN,YAAkBsC,GAAMvC,MAAO,CAAE2C,KAAMX,GAArD,UACE,UAACd,EAAD,YACE,SAACM,EAAD,CACEoB,IAAKN,EACLO,IAAG,kBAAaL,GAChBM,MAAM,MACNC,OAAO,MACPC,QAAQ,UAEV,SAACC,EAAA,EAAD,CAAiBlB,QAASA,KAC1B,UAACN,EAAD,eAAgBc,MAChB,SAACX,EAAD,CAAWa,YAAaA,EAAxB,UACE,SAACS,EAAA,EAAD,CACEX,GAAIA,EACJE,YAAaA,EACbU,gBAAiBC,EAAAA,WAM5B,C","sources":["redux/episodes/selectors.js","hooks/useEpisodes.js","modules/Episodes/components/EpisodeCard/EpisodeCard.styled.jsx","modules/Episodes/components/EpisodeCard/EpisodeCard.jsx"],"sourcesContent":["export const selectEpisodessInfo = state => state.episodes.info;\nexport const selectEpisodesItems = state => state.episodes.items;\nexport const selectEpisodesIsLoading = state => state.episodes.isLoading;\nexport const selectEpisodesError = state => state.episodes.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectEpisodesError,\n  selectEpisodesIsLoading,\n  selectEpisodesItems,\n  selectEpisodessInfo,\n} from 'redux/episodes/selectors';\nimport { selectFavEpisodesIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectEpisodesWithIsFav = createSelector(\n  [selectEpisodesItems, selectFavEpisodesIds],\n  addIsFavouriteToList\n);\n\nexport const useEpisodes = () => {\n  const info = useSelector(selectEpisodessInfo);\n  const episodes = useSelector(selectEpisodesWithIsFav);\n  const isLoading = useSelector(selectEpisodesIsLoading);\n  const error = useSelector(selectEpisodesError);\n\n  return {\n    info,\n    episodes,\n    isLoading,\n    error,\n  };\n};\n","import styled from '@emotion/styled/macro';\nimport { BasicWrapper } from 'modules/Episodes/Episodes.styled';\nimport { Link } from 'react-router-dom';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport { Number } from 'shared/styles/components/Number.styled';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  width: 100%;\n  color: inherit;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Wrap = styled(BasicWrapper)`\n  position: relative;\n  height: 159px;\n\n  background-color: ${({ theme }) => theme.bgPrimary};\n  border: 3px solid ${({ theme }) => theme.paginationAccent};\n\n  @media screen and (min-width: ${tablet}) {\n    height: 247px;\n  }\n\n  & ul > li:not(:first-of-type) {\n    @media screen and (max-width: ${tablet}) {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      border: 0;\n      padding: 0;\n\n      white-space: nowrap;\n      clip-path: inset(100%);\n      clip: rect(0 0 0 0);\n      overflow: hidden;\n    }\n  }\n\n  & ul {\n    @media screen and (max-width: ${tablet}) {\n      top: 107px;\n      left: 41px;\n    }\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n\n    width: 100%;\n    height: 50px;\n\n    background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n\n    @media screen and (max-width: ${tablet}) {\n      display: none;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  margin-left: auto;\n\n  border-radius: 4px;\n\n  @media screen and (min-width: ${tablet}) {\n    border-radius: 0 4px 4px 0;\n  }\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  bottom: 5px;\n  right: 20px;\n\n  font-size: 24px;\n  transition: color 250ms ${({ theme }) => theme.cubic};\n\n  ${StyledLink}:hover & {\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 30px;\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { images } from 'modules/Episodes/api.img/api.img';\nimport { getRandomIndex } from 'shared/utils/getRandomIndex';\nimport { EpisodeCardInfo } from '../EpisodCardInfo/EpisodeCardInfo';\nimport {\n  HeartWrap,\n  Img,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './EpisodeCard.styled';\nimport { Heart } from 'shared/components/Heart';\nimport { favepisodes } from 'shared/constants/libaryListName';\nimport { useMemo } from 'react';\nimport { episodes } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\n\nexport const EpisodeCard = ({ episode }) => {\n  const location = useLocation();\n  const randomId = useMemo(() => getRandomIndex(images.length), []);\n  const image = images[randomId];\n\n  const { id, name, isFavourite } = episode;\n\n  return (\n    <StyledLink to={`/${episodes}/${id}`} state={{ from: location }}>\n      <Wrap>\n        <Img\n          src={image}\n          alt={`episode ${name}`}\n          width=\"430\"\n          height=\"242\"\n          loading=\"lazy\"\n        />\n        <EpisodeCardInfo episode={episode} />\n        <StyledNumber>#{id}</StyledNumber>\n        <HeartWrap isFavourite={isFavourite}>\n          <Heart\n            id={id}\n            isFavourite={isFavourite}\n            libraryListName={favepisodes}\n          />\n        </HeartWrap>\n      </Wrap>\n    </StyledLink>\n  );\n};\n"],"names":["selectEpisodessInfo","state","episodes","info","selectEpisodesIsLoading","isLoading","selectEpisodesError","error","selectEpisodesWithIsFav","createSelector","items","selectFavEpisodesIds","addIsFavouriteToList","useEpisodes","useSelector","StyledLink","Link","theme","cubic","Wrap","BasicWrapper","bgPrimary","paginationAccent","tablet","bgEpisodesTransparent","Img","StyledNumber","Number","characterCardTextAccent","HeartWrap","getHeartColor","EpisodeCard","episode","location","useLocation","randomId","useMemo","getRandomIndex","images","image","id","name","isFavourite","to","from","src","alt","width","height","loading","EpisodeCardInfo","Heart","libraryListName","favepisodes"],"sourceRoot":""}