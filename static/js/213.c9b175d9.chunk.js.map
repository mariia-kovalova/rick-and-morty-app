{"version":3,"file":"static/js/213.c9b175d9.chunk.js","mappings":"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","sources":["redux/characters/selectors.js","hooks/useCharacters.js","redux/episode/selectors.js","hooks/useOneEpisode.js","shared/utils/spiecesNormalize.js","modules/Characters/components/CharacterCard/CharacterCard.styled.jsx","modules/Characters/components/CharacterCard/CharacterCard.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.styled.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.jsx","modules/Episodes/components/Episode/Episode.style.jsx","modules/Episodes/components/Episode/Episode.jsx","pages/EpisodePage/EpisodePage.styled.jsx","pages/EpisodePage/EpisodePage.jsx","redux/library/selectors.js","shared/components/CardLoader/CardLoader.styled.jsx","shared/components/CardLoader/CardLoader.jsx","shared/components/CardsList/CardsList.styled.jsx","shared/components/CardsList/CardsList.jsx","shared/components/GoBackLink/GoBackLink.styled.jsx","shared/components/GoBackLink/GoBackLink.jsx","shared/constants/characterStatus.js","shared/styles/components/Section.styled.jsx","shared/utils/addIsFavourite.js","shared/utils/getStatus.js","shared/utils/nameNormalize.js","shared/utils/scrollUp.js"],"sourcesContent":["export const selectCharactersInfo = state => state.characters.info;\nexport const selectCharactersItems = state => state.characters.items;\nexport const selectCharactersIsLoading = state => state.characters.isLoading;\nexport const selectCharactersError = state => state.characters.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCharactersError,\n  selectCharactersInfo,\n  selectCharactersIsLoading,\n  selectCharactersItems,\n} from 'redux/characters/selectors';\nimport { selectFavCharactersIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectCharactersWithIsFav = createSelector(\n  [selectCharactersItems, selectFavCharactersIds],\n  addIsFavouriteToList\n);\n\nexport const useCharacters = () => {\n  const info = useSelector(selectCharactersInfo);\n  const characters = useSelector(selectCharactersWithIsFav);\n  const isLoading = useSelector(selectCharactersIsLoading);\n  const error = useSelector(selectCharactersError);\n\n  return {\n    info,\n    characters,\n    isLoading,\n    error,\n  };\n};\n","export const selectEpisode = state => state.episode.item;\nexport const selectEpisodeIsLoading = state => state.episode.isLoading;\nexport const selectEpisodeError = state => state.episode.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectEpisode,\n  selectEpisodeError,\n  selectEpisodeIsLoading,\n} from 'redux/episode/selectors';\nimport { selectFavEpisodesIds } from 'redux/library/selectors';\nimport { addIsFavouriteToItem } from 'shared/utils/addIsFavourite';\n\nconst selectEpisodeWithIsFav = createSelector(\n  [selectEpisode, selectFavEpisodesIds],\n  addIsFavouriteToItem\n);\n\nexport const useOneEpisode = () => {\n  const episode = useSelector(selectEpisodeWithIsFav);\n  const isLoading = useSelector(selectEpisodeIsLoading);\n  const error = useSelector(selectEpisodeError);\n\n  return {\n    episode,\n    isLoading,\n    error,\n  };\n};\n","export const spiecesNormalize = spieces => {\n  if (spieces.length <= 10) return spieces;\n  const start = spieces.slice(0, 5);\n  return `${start}...`;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Number } from 'shared/styles/components/Number.styled';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const Description = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-size: 35px;\n`;\n","import { characters } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { spiecesNormalize } from 'shared/utils/spiecesNormalize';\nimport { CharacterStatus } from '../CharacterStatus/CharacterStatus';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  MainInfo,\n  Name,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './CharacterCard.styled';\nimport { favcharacters } from 'shared/constants/libaryListName';\n\nexport const CharacterCard = props => {\n  const location = useLocation();\n  const { id, name, species, gender, status, image, isFavourite } = props;\n\n  return (\n    <StyledLink to={`/${characters}/${id}`} state={{ from: location }}>\n      <HeartWrap>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favcharacters}\n        />\n      </HeartWrap>\n      <Img src={image} width=\"289\" height=\"289\" alt={name} loading=\"lazy\" />\n      <Wrap>\n        <MainInfo>\n          <CharacterStatus status={status} />\n          <Name>{nameNormalize(name)}</Name>\n        </MainInfo>\n        <Description>\n          {spiecesNormalize(species)} | {gender}\n        </Description>\n        <StyledNumber>#{id}</StyledNumber>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { getStatus } from 'shared/utils/getStatus';\n\nconst beam = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Status = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n\n    animation: ${({ animate }) => (animate ? beam : 'none')} 1.5s ease-in-out\n      infinite;\n  }\n`;\n","import { Tooltip } from 'shared/components/ToolTip';\nimport { Status } from './CharacterStatus.styled';\n\nexport const CharacterStatus = ({ status, animate }) => {\n  return (\n    <Tooltip text={status}>\n      <Status marker={status} animate={animate} />\n    </Tooltip>\n  );\n};\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\nimport { Number } from 'shared/styles/components/Number.styled';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nconst shine = keyframes`\n   0% {\n    background-position: -5px;\n  }\n  40%, 100% {\n    background-position: 208px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  z-index: 1;\n\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${tablet}) {\n    height: 253px;\n  }\n\n  & ul {\n    bottom: -175%;\n    left: 0;\n\n    @media screen and (min-width: ${tablet}) {\n      bottom: -8%;\n      left: -30%;\n    }\n  }\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.1);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n\n    @media screen and (min-width: ${tablet}) {\n      left: -30%;\n      width: 585px;\n      height: 55px;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    z-index: -1;\n\n    width: 237px;\n    height: 133px;\n\n    background-color: rgba(81, 107, 107, 0.801);\n    border: 1px solid ${({ theme }) => theme.paginationAccent};\n    border-radius: 4px;\n    background: linear-gradient(\n        90deg,\n        rgba(255, 255, 255, 0) 20%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0) 70%\n      )\n      rgba(255, 255, 255, 0.384);\n    background-size: 200% 100%;\n    background-position-x: 180%;\n    animation: ${shine} 2s ${({ theme }) => theme.cubic} infinite;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 450px;\n      height: 253px;\n    }\n  }\n`;\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n\n  top: 53px;\n  left: 40px;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 75px;\n    left: 258px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    top: 0;\n    left: 123px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  top: 5px;\n  left: 10px;\n\n  font-size: 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  transition: color 250ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${tablet}) {\n    top: 5px;\n    left: -126px;\n    font-size: 30px;\n  }\n\n  a:hover & {\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 0;\n  right: 3%;\n  z-index: 1;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 3%;\n    right: 3%;\n  }\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { useOneEpisode } from 'hooks/useOneEpisode';\nimport { EpisodeCardInfo } from '../EpisodCardInfo/EpisodeCardInfo';\nimport {\n  HeartWrap,\n  Img,\n  LoaderWrap,\n  StyledNumber,\n  Wrap,\n} from './Episode.style';\nimport { Heart } from 'shared/components/Heart';\nimport { favepisodes } from 'shared/constants/libaryListName';\nimport { CardLoader } from 'shared/components/CardLoader';\n\nexport const Episode = ({ image }) => {\n  const { episode, isLoading } = useOneEpisode();\n  const { id, isFavourite, name } = episode;\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderWrap>\n          <CardLoader />\n        </LoaderWrap>\n      ) : (\n        <Wrap>\n          <StyledNumber>\n            <span>Episode </span>#{id}\n          </StyledNumber>\n          <HeartWrap isFavourite={isFavourite}>\n            <Heart\n              id={id}\n              isFavourite={isFavourite}\n              libraryListName={favepisodes}\n            />\n          </HeartWrap>\n          <EpisodeCardInfo episode={episode} />\n          <Img src={image} alt={name} width=\"450\" height=\"200\" />\n        </Wrap>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\nimport {\n  CardDecoration,\n  CardWrap,\n} from 'shared/styles/components/CardDecoration.styled';\n\nexport const EpisodeDecor = styled(CardDecoration)`\n  margin: 0 auto;\n\n  @media screen and (min-width: ${desktop}) {\n    width: 704px;\n  }\n\n  &::before {\n    z-index: -1;\n  }\n`;\n\nexport const EpisodeWrap = styled(CardWrap)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: end;\n  gap: 30px;\n\n  padding-bottom: 220px;\n\n  @media screen and (min-width: ${desktop}) {\n    flex-direction: row;\n    justify-content: end;\n    align-items: center;\n    gap: 100px;\n  }\n\n  &::before {\n    top: -18px;\n    left: -18.6px;\n  }\n\n  &::after {\n    bottom: -18px;\n    right: -18.6px;\n  }\n\n  & + div::before {\n    @media screen and (min-width: ${tablet}) {\n      left: -11%;\n      width: 585px;\n      height: 55px;\n    }\n  }\n\n  & ul:first-of-type {\n    bottom: -191%;\n    left: 0;\n\n    @media screen and (min-width: ${tablet}) {\n      bottom: -8%;\n      left: -30%;\n    }\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.characterCardTextAccent};\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 30px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    font-size: 40px;\n  }\n`;\n","import { Helmet } from 'react-helmet-async';\nimport { useOneEpisode } from 'hooks/useOneEpisode';\nimport { useLocation, useParams } from 'react-router';\nimport { home } from 'shared/constants/routes';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\nimport { scrollUp } from 'shared/utils/scrollUp';\nimport { getEpisodeById } from 'redux/episode/thunks';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { GoBackLink } from 'shared/components/GoBackLink';\nimport { CardsList } from 'shared/components/CardsList';\nimport { CharacterCard } from 'modules/Characters/components/CharacterCard';\nimport { Episode } from 'modules/Episodes/components/Episode/Episode';\nimport { images } from 'modules/Episodes/api.img/api.img';\nimport { getRandomIndex } from 'shared/utils/getRandomIndex';\nimport { EpisodeDecor, EpisodeWrap, StyledH2 } from './EpisodePage.styled';\nimport { getCharactersByIds } from 'redux/characters/thunks';\nimport { useCharacters } from 'hooks/useCharacters';\n\nconst NUMBER_OF_CHARS_TO_SKIP = 42;\n\nconst EpisodePage = () => {\n  const randomId = useMemo(() => getRandomIndex(images.length), []);\n  const image = images[randomId];\n  const { episode, isLoading, error } = useOneEpisode();\n  const { characters } = useCharacters();\n  const { episodeId } = useParams();\n  const location = useLocation();\n  const path = location.state?.from ?? home;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    scrollUp(0);\n    dispatch(getEpisodeById(episodeId));\n  }, [dispatch, episodeId]);\n\n  useEffect(() => {\n    const charactersID = episode.characters.map(character =>\n      character.slice(NUMBER_OF_CHARS_TO_SKIP)\n    );\n    dispatch(getCharactersByIds(charactersID));\n  }, [dispatch, episode.characters]);\n\n  const shouldShowEpisode = episode !== null && !error;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {isLoading\n            ? error && 'Character'\n            : !error && nameNormalize(episode?.name)}\n        </title>\n      </Helmet>\n      <Section>\n        <Container>\n          <GoBackLink to={path} />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          {shouldShowEpisode && (\n            <EpisodeDecor>\n              <EpisodeWrap>\n                <Episode image={image} />\n              </EpisodeWrap>\n            </EpisodeDecor>\n          )}\n        </Container>\n        {shouldShowError && <div>Oops, something went wrong...</div>}\n      </Section>\n      <Section>\n        <Container>\n          <StyledH2>Characters from the episode</StyledH2>\n          <CardsList items={characters} element={CharacterCard} />\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default EpisodePage;\n","import {\n  favcharacters,\n  favepisodes,\n  favlocations,\n  randomcharacters,\n  randomepisodes,\n  randomlocations,\n} from 'shared/constants/libaryListName';\n\nexport const selectFavCharactersIds = state => state.library.lib[favcharacters];\nexport const selectFavEpisodesIds = state => state.library.lib[favepisodes];\nexport const selectFavLocationsIds = state => state[favlocations];\nexport const selectRandomCharactersIds = state =>\n  state.library.lib[randomcharacters];\nexport const selectRandomEpisodesIds = state =>\n  state.library.lib[randomepisodes];\nexport const selectRandomLocationsIds = state =>\n  state.library.lib[randomlocations];\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { desktop } from 'shared/constants/deviceSizes';\n\nconst teleportDust = keyframes`\n  0% {\n      box-shadow: rgba(0, 0, 0, 0) 30px 30px, rgba(0, 0, 0, 0) 40px 40px,\n        #000 50px 75px, #000 55px 50px, #000 70px 100px, #000 80px 95px,\n        #000 110px 45px, #000 90px 35px;\n    }\n    25% {\n      box-shadow: #000 30px 45px, #000 40px 60px, #000 50px 90px, #000 55px 65px,\n        rgba(0, 0, 0, 0) 70px 120px, rgba(0, 0, 0, 0) 80px 120px,\n        #000 110px 70px, #000 90px 60px;\n    }\n    26% {\n      box-shadow: #000 30px 45px, #000 40px 60px, #000 50px 90px, #000 55px 65px,\n        rgba(0, 0, 0, 0) 70px 40px, rgba(0, 0, 0, 0) 80px 20px, #000 110px 70px,\n        #000 90px 60px;\n    }\n    50% {\n      box-shadow: #000 30px 70px, #000 40px 80px, rgba(0, 0, 0, 0) 50px 100px,\n        #000 55px 80px, #000 70px 60px, #000 80px 45px, #000 110px 95px,\n        #000 90px 85px;\n    }\n    51% {\n      box-shadow: #000 30px 70px, #000 40px 80px, rgba(0, 0, 0, 0) 50px 45px,\n        #000 55px 80px, #000 70px 60px, #000 80px 45px, #000 110px 95px,\n        #000 90px 85px;\n    }\n    75% {\n      box-shadow: #000 30px 95px, #000 40px 100px, #000 50px 60px,\n        rgba(0, 0, 0, 0) 55px 95px, #000 70px 80px, #000 80px 70px,\n        rgba(0, 0, 0, 0) 110px 120px, rgba(0, 0, 0, 0) 90px 110px;\n    }\n    76% {\n      box-shadow: #000 30px 95px, #000 40px 100px, #000 50px 60px,\n        rgba(0, 0, 0, 0) 55px 35px, #000 70px 80px, #000 80px 70px,\n        rgba(0, 0, 0, 0) 110px 25px, rgba(0, 0, 0, 0) 90px 15px;\n    }\n    100% {\n      box-shadow: rgba(0, 0, 0, 0) 30px 120px, rgba(0, 0, 0, 0) 40px 120px,\n        #000 50px 75px, #000 55px 50px, #000 70px 100px, #000 80px 95px,\n        #000 110px 45px, #000 90px 35px;\n    }\n`;\n\nexport const TeleportDust = styled.div`\n  position: absolute;\n  top: 28%;\n  left: 10%;\n  animation: ${teleportDust} 0.5s infinite linear;\n  background: transparent;\n  border-radius: 25%;\n  display: block;\n  height: 10px;\n  width: 2px;\n  opacity: 0.5;\n  transform: scale(1.4);\n\n  @media screen and (min-width: ${desktop}) {\n    top: 0%;\n    left: 15%;\n    transform: scale(2.5);\n  }\n`;\n","import { TeleportDust } from './CardLoader.styled';\n\nexport const CardLoader = () => {\n  return <TeleportDust />;\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${tablet}) {\n    flex-basis: 289px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 3 * 20px) / 4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, List } from './CardsList.styled';\nimport { memo } from 'react';\n\nexport const CardsList = ({ items, element: Element }) => {\n  const Component = props => {\n    return <Element {...props} />;\n  };\n\n  const MemoizedComponent = memo(Component);\n\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MemoizedComponent {...item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  element: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  padding-left: 20px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textPrimary};\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.accent};\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n\n  padding: 1px;\n\n  fill: transparent;\n  stroke: ${({ theme }) => theme.textPrimary};\n  transition: stroke 100ms ${({ theme }) => theme.cubic};\n\n  ${StyledLink}:hover & {\n    stroke: ${({ theme }) => theme.accent};\n  }\n`;\n","import { StyledLink, Svg } from './GoBackLink.styled';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const GoBackLink = props => {\n  return (\n    <StyledLink {...props}>\n      <Svg width=\"20\" height=\"20\">\n        <use href={`${sprite}#icon-arrow-left-small`} />\n      </Svg>\n      Go back\n    </StyledLink>\n  );\n};\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","import styled from '@emotion/styled';\nimport locationPageBackground from '../../images/locationPageBackground.png';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  /* &.location-page {\n    background: url(${locationPageBackground});\n  } */\n`;\n","export const addIsFavouriteToItem = (item, ids) => {\n  if (!item) return null;\n  return {\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  };\n};\n\nexport const addIsFavouriteToList = (data, ids) => {\n  if (!Array.isArray(data)) {\n    return [\n      {\n        ...data,\n        isFavourite: ids ? ids.includes(data?.id) : false,\n      },\n    ];\n  }\n  return data.map(item => ({\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  }));\n};\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n","export const nameNormalize = name => {\n  if (name.length <= 13) return name;\n  const start = name.slice(0, 11);\n  return `${start}...`;\n};\n\nexport const characterNameNormalize = name => {\n  if (name.length <= 24) return name;\n  const start = name.slice(0, 22);\n  return `${start}...`;\n};\n","export const scrollUp = top =>\n  window.scrollTo({\n    top: top,\n    behavior: 'smooth',\n  });\n"],"names":["selectCharactersInfo","state","characters","info","selectCharactersIsLoading","isLoading","selectCharactersError","error","selectCharactersWithIsFav","createSelector","items","selectFavCharactersIds","addIsFavouriteToList","useCharacters","useSelector","selectEpisodeIsLoading","episode","selectEpisodeError","selectEpisodeWithIsFav","item","selectFavEpisodesIds","addIsFavouriteToItem","useOneEpisode","spiecesNormalize","spieces","length","start","slice","StyledLink","styled","Link","theme","cubic","secondary","HeartWrap","Img","MainInfo","Name","Wrap","accentTransparent","Description","StyledNumber","Number","CharacterCard","props","location","useLocation","id","name","species","gender","status","image","isFavourite","to","from","Heart","libraryListName","favcharacters","src","width","height","alt","loading","CharacterStatus","nameNormalize","beam","keyframes","Status","getStatus","animate","text","marker","shine","tablet","bgEpisodesTransparent","paginationAccent","LoaderWrap","desktop","textPrimary","characterCardTextAccent","getHeartColor","Episode","CardLoader","favepisodes","EpisodeCardInfo","EpisodeDecor","CardDecoration","EpisodeWrap","CardWrap","StyledH2","randomId","useMemo","getRandomIndex","images","episodeId","useParams","path","home","dispatch","useDispatch","useEffect","scrollUp","getEpisodeById","charactersID","map","character","getCharactersByIds","shouldShowEpisode","shouldShowError","GoBackLink","CardsList","element","library","lib","selectFavLocationsIds","favlocations","teleportDust","TeleportDust","List","Item","Element","Component","MemoizedComponent","memo","accent","Svg","href","sprite","alive","dead","unknown","Section","locationPageBackground","ids","includes","data","Array","isArray","characterNameNormalize","top","window","scrollTo","behavior"],"sourceRoot":""}