{"version":3,"file":"static/js/206.dc9edd13.chunk.js","mappings":"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","sources":["redux/characters/selectors.js","hooks/useCharacters.js","redux/episode/selectors.js","hooks/useOneEpisode.js","shared/utils/spiecesNormalize.js","modules/Characters/components/CharacterCard/CharacterCard.styled.jsx","modules/Characters/components/CharacterCard/CharacterCard.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.styled.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.jsx","modules/Characters/components/CharactersList/CharactersList.jsx","modules/Episodes/Episodes.styled.jsx","modules/Episodes/api.img/api.img.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.styled.jsx","shared/utils/episodeNameNormalize.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.jsx","modules/Episodes/components/Episode/Episode.style.jsx","modules/Episodes/components/Episode/Episode.jsx","pages/EpisodePage/EpisodePage.styled.jsx","pages/EpisodePage/EpisodePage.jsx","shared/components/CardsList/CardsList.styled.jsx","shared/components/CardsList/CardsList.jsx","shared/components/GoBackLink/GoBackLink.styled.jsx","shared/components/GoBackLink/GoBackLink.jsx","shared/constants/charFilterTypes.js","shared/constants/characterStatus.js","shared/styles/components/Number.styled.jsx","shared/utils/getRandomIndex.js","shared/utils/getStatus.js","shared/utils/nameNormalize.js"],"sourcesContent":["export const selectCharactersInfo = state => state.characters.info;\nexport const selectCharactersItems = state => state.characters.items;\nexport const selectCharactersIsLoading = state => state.characters.isLoading;\nexport const selectCharactersError = state => state.characters.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCharactersError,\n  selectCharactersInfo,\n  selectCharactersIsLoading,\n  selectCharactersItems,\n} from 'redux/characters/selectors';\nimport { selectFavCharactersIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectCharactersWithIsFav = createSelector(\n  [selectCharactersItems, selectFavCharactersIds],\n  addIsFavouriteToList\n);\n\nexport const useCharacters = () => {\n  const info = useSelector(selectCharactersInfo);\n  const characters = useSelector(selectCharactersWithIsFav);\n  const isLoading = useSelector(selectCharactersIsLoading);\n  const error = useSelector(selectCharactersError);\n\n  return {\n    info,\n    characters,\n    isLoading,\n    error,\n  };\n};\n","export const selectEpisode = state => state.episode.item;\nexport const selectEpisodeIsLoading = state => state.episode.isLoading;\nexport const selectEpisodeError = state => state.episode.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectEpisode,\n  selectEpisodeError,\n  selectEpisodeIsLoading,\n} from 'redux/episode/selectors';\nimport { selectFavEpisodesIds } from 'redux/library/selectors';\nimport { addIsFavouriteToItem } from 'shared/utils/addIsFavourite';\n\nconst selectEpisodeWithIsFav = createSelector(\n  [selectEpisode, selectFavEpisodesIds],\n  addIsFavouriteToItem\n);\n\nexport const useOneEpisode = () => {\n  const episode = useSelector(selectEpisodeWithIsFav);\n  const isLoading = useSelector(selectEpisodeIsLoading);\n  const error = useSelector(selectEpisodeError);\n\n  return {\n    episode,\n    isLoading,\n    error,\n  };\n};\n","export const spiecesNormalize = spieces => {\n  if (spieces.length <= 10) return spieces;\n  const start = spieces.slice(0, 5);\n  return `${start}...`;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Number } from 'shared/styles/components/Number.styled';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 0;\n\n  width: fit-content;\n  height: fit-content;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const Description = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-size: 35px;\n`;\n","import { characters } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { spiecesNormalize } from 'shared/utils/spiecesNormalize';\nimport { CharacterStatus } from '../CharacterStatus/CharacterStatus';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  MainInfo,\n  Name,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './CharacterCard.styled';\nimport { favcharacters } from 'shared/constants/libaryListName';\n\nexport const CharacterCard = props => {\n  const location = useLocation();\n  const { id, name, species, gender, status, image, isFavourite } = props;\n\n  return (\n    <StyledLink to={`/${characters}/${id}`} state={{ from: location }}>\n      <HeartWrap>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favcharacters}\n        />\n      </HeartWrap>\n      <Img src={image} width=\"289\" height=\"289\" alt={name} loading=\"lazy\" />\n      <Wrap>\n        <MainInfo>\n          <CharacterStatus status={status} />\n          <Name>{nameNormalize(name)}</Name>\n        </MainInfo>\n        <Description>\n          {spiecesNormalize(species)} | {gender}\n        </Description>\n        <StyledNumber>#{id}</StyledNumber>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { getStatus } from 'shared/utils/getStatus';\n\nconst beam = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Status = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n\n    animation: ${({ animate }) => (animate ? beam : 'none')} 1.5s ease-in-out\n      infinite;\n  }\n`;\n","import { Tooltip } from 'shared/components/ToolTip';\nimport { Status } from './CharacterStatus.styled';\n\nexport const CharacterStatus = ({ status, animate }) => {\n  return (\n    <Tooltip text={status}>\n      <Status marker={status} animate={animate} />\n    </Tooltip>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCharacters } from 'hooks/useCharacters';\nimport { useDispatch } from 'react-redux';\nimport { getCharactersByFilter } from 'redux/characters/thunks';\nimport { getSearchValues } from 'shared/utils/getSearchValues';\nimport { Pagination } from 'shared/components/Pagination';\nimport { Loader } from 'shared/components/Loader';\nimport { CardsList } from 'shared/components/CardsList';\nimport { Error } from 'shared/components/Error';\nimport { CharacterCard } from '../CharacterCard';\nimport { gender, name, status } from 'shared/constants/charFilterTypes';\nimport { notfound, oops } from 'shared/constants/errorText';\n\nexport const PARAMS_ARR = [name, status, gender];\n\nexport const CharactersList = () => {\n  const [showList, setShowList] = useState(false);\n  const [searchParams] = useSearchParams();\n  const { info, characters, isLoading, error } = useCharacters();\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setPage(1);\n  }, [searchParams]);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      await dispatch(\n        getCharactersByFilter({\n          page,\n          ...getSearchValues(PARAMS_ARR, searchParams),\n        })\n      ).unwrap();\n      setShowList(true);\n    };\n\n    getInfo();\n  }, [dispatch, page, searchParams]);\n\n  const shouldRenderList = characters.length > 0 && !error && showList;\n  const shouldShowError = !isLoading && error && error.status !== 404;\n  const shouldShowNotFoundError = !isLoading && error && error.status === 404;\n  const shouldRenderPagination =\n    !error && characters.length > 0 && info?.pages > 1;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {shouldRenderList && (\n        <CardsList items={characters} element={CharacterCard} />\n      )}\n      {shouldRenderPagination && (\n        <Pagination\n          totalPages={info.pages}\n          onPageChange={setPage}\n          page={page}\n        />\n      )}\n      {shouldShowError && <Error text={oops} />}\n      {shouldShowNotFoundError && <Error text={notfound} />}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const FlexUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextInfo = styled.div`\n  padding: 8px 10px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const BasicWrapper = styled.div`\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  width: 100%;\n`;\n","import epImg1 from '../../../shared/images/episode1.jpeg';\nimport epImg2 from '../../../shared/images/episode2.jpeg';\nimport epImg3 from '../../../shared/images/episode3.jpeg';\nimport epImg4 from '../../../shared/images/episode4.jpeg';\nimport epImg5 from '../../../shared/images/episode5.jpg';\nimport epImg6 from '../../../shared/images/episode6.jpeg';\nimport epImg7 from '../../../shared/images/episode7.jpeg';\nimport epImg8 from '../../../shared/images/episode8.jpeg';\nimport epImg9 from '../../../shared/images/episode9.jpeg';\nimport epImg10 from '../../../shared/images/episode10.jpg';\nimport epImg11 from '../../../shared/images/episode11.jpg';\nimport epImg12 from '../../../shared/images/episode12.jpg';\nimport epImg13 from '../../../shared/images/episode13.jpg';\nimport epImg14 from '../../../shared/images/episode14.jpg';\nimport epImg15 from '../../../shared/images/episode15.jpg';\nimport epImg16 from '../../../shared/images/episode16.jpg';\nimport epImg17 from '../../../shared/images/episode17.jpg';\n\nexport const images = [epImg1, epImg2, epImg3, epImg4, epImg5, epImg6, epImg7, epImg8, epImg9, epImg10, epImg11, epImg12, epImg13, epImg14, epImg15, epImg16, epImg17];\n","import styled from '@emotion/styled/macro';\nimport { FlexUl, TextInfo } from 'modules/Episodes/Episodes.styled';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const CradInfoText = styled(TextInfo)`\n  width: 230px;\n\n  color: ${({ theme }) => theme.characterCardTextAccent};\n  background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n  border: 2px solid ${({ theme }) => theme.characterCardTextAccent};\n  border-radius: 4px;\n\n  clip-path: polygon(\n    10% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    90% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.05);\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n  }\n`;\n\nexport const FlexInfo = styled(FlexUl)`\n  align-items: start;\n  gap: 10px;\n\n  & > li:first-of-type ${CradInfoText} {\n    width: 230px;\n    font-size: 18px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 270px;\n      font-size: 22px;\n    }\n  }\n\n  & > li:nth-of-type(2) ${CradInfoText} {\n    width: 200px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 230px;\n    }\n  }\n\n  & > li:last-of-type ${CradInfoText} {\n    width: 160px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 180px;\n    }\n  }\n`;\n","export const episodeNameNoramlize = episodeName => {\n  if (episodeName.length <= 15) return episodeName;\n  const start = episodeName.slice(0, 13);\n  return `${start}...`;\n};\n","import { useLocation } from 'react-router';\nimport { CradInfoText, FlexInfo } from './EpisodeCardInfo.styled';\nimport { episodeNameNoramlize } from 'shared/utils/episodeNameNormalize';\nimport { episodes } from 'shared/constants/routes';\n\nexport const EpisodeCardInfo = ({ episode }) => {\n  const location = useLocation();\n  const { id, name, episode: episodeCode, air_date } = episode;\n\n  const info = [\n    location.pathname === `/${episodes}/${id}`\n      ? name\n      : episodeNameNoramlize(name),\n    air_date,\n    episodeCode,\n  ];\n  return (\n    <FlexInfo className=\"random-episode episode-card episodes-page\">\n      {info.map(data => (\n        <li key={data}>\n          <CradInfoText>{data}</CradInfoText>\n        </li>\n      ))}\n    </FlexInfo>\n  );\n};\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\nimport { Number } from 'shared/styles/components/Number.styled';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nconst shine = keyframes`\n   0% {\n    background-position: -5px;\n  }\n  40%, 100% {\n    background-position: 208px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  z-index: 1;\n\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.1);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n\n    @media screen and (min-width: ${tablet}) {\n      left: -30%;\n      width: 585px;\n      height: 55px;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    z-index: -1;\n\n    width: 237px;\n    height: 133px;\n\n    background-color: rgba(81, 107, 107, 0.801);\n    border: 1px solid ${({ theme }) => theme.crossThemeAccent};\n    border-radius: 4px;\n    background: linear-gradient(\n        90deg,\n        rgba(255, 255, 255, 0) 20%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0) 70%\n      )\n      rgba(255, 255, 255, 0.384);\n    background-size: 200% 100%;\n    background-position-x: 180%;\n    animation: ${shine} 2s ${({ theme }) => theme.cubic} infinite;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 450px;\n      height: 253px;\n    }\n  }\n`;\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n\n  top: 53px;\n  left: 40px;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 75px;\n    left: 258px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    top: 0;\n    left: 123px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  top: 5px;\n  left: 10px;\n\n  font-size: 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  transition: color 250ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${tablet}) {\n    top: 5px;\n    left: -126px;\n    font-size: 30px;\n  }\n\n  a:hover & {\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 0;\n  right: 3%;\n  z-index: 1;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 3%;\n    right: 3%;\n  }\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { useOneEpisode } from 'hooks/useOneEpisode';\nimport { EpisodeCardInfo } from '../EpisodCardInfo/EpisodeCardInfo';\nimport {\n  HeartWrap,\n  Img,\n  LoaderWrap,\n  StyledNumber,\n  Wrap,\n} from './Episode.style';\nimport { Heart } from 'shared/components/Heart';\nimport { favepisodes } from 'shared/constants/libaryListName';\nimport { CardLoader } from 'shared/components/CardLoader';\n\nexport const Episode = ({ image }) => {\n  const { episode, isLoading } = useOneEpisode();\n  const { id, isFavourite, name } = episode;\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderWrap>\n          <CardLoader />\n        </LoaderWrap>\n      ) : (\n        <Wrap>\n          <StyledNumber>\n            <span>Episode </span>#{id}\n          </StyledNumber>\n          <HeartWrap isFavourite={isFavourite}>\n            <Heart\n              id={id}\n              isFavourite={isFavourite}\n              libraryListName={favepisodes}\n            />\n          </HeartWrap>\n          <EpisodeCardInfo episode={episode} />\n          <Img src={image} alt={name} width=\"450\" height=\"200\" />\n        </Wrap>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport {\n  CardDecoration,\n  CardWrap,\n} from 'shared/styles/components/CardDecoration.styled';\n\nexport const EpisodeDecor = styled(CardDecoration)`\n  margin: 0 auto;\n`;\n\nexport const EpisodeWrap = styled(CardWrap)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: end;\n\n  @media screen and (min-width: ${tablet}) {\n    justify-content: center;\n  }\n\n  &::before {\n    top: -5px;\n    left: 13px;\n  }\n\n  &::after {\n    bottom: -5px;\n    right: 13px;\n  }\n\n  & + div::before {\n    @media screen and (min-width: ${tablet}) {\n      left: -11%;\n      width: 585px;\n      height: 55px;\n    }\n  }\n\n  & ul.episodes-page {\n    position: absolute;\n    top: 107%;\n    left: 0;\n\n    @media screen and (min-width: ${tablet}) {\n      top: 27%;\n      left: -30%;\n    }\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.characterCardTextAccent};\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 30px;\n  }\n`;\n","import { Helmet } from 'react-helmet-async';\nimport { useOneEpisode } from 'hooks/useOneEpisode';\nimport { useLocation, useParams } from 'react-router';\nimport { home } from 'shared/constants/routes';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\nimport { scrollUp } from 'shared/utils/scrollUp';\nimport { getEpisodeById } from 'redux/episode/thunks';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { GoBackLink } from 'shared/components/GoBackLink';\nimport { Episode } from 'modules/Episodes/components/Episode/Episode';\nimport { images } from 'modules/Episodes/api.img/api.img';\nimport { getRandomIndex } from 'shared/utils/getRandomIndex';\nimport { EpisodeDecor, EpisodeWrap, StyledH2 } from './EpisodePage.styled';\nimport { getCharactersByIds } from 'redux/characters/thunks';\nimport { notfound, oops } from 'shared/constants/errorText';\nimport { Error } from 'shared/components/Error';\nimport { CharactersList } from 'modules/Characters/components/CharactersList/CharactersList';\n\nconst NUMBER_OF_CHARS_TO_SKIP = 42;\n\nconst EpisodePage = () => {\n  const randomId = useMemo(() => getRandomIndex(images.length), []);\n  const image = images[randomId];\n  const { episode, isLoading, error } = useOneEpisode();\n  const { episodeId } = useParams();\n  const location = useLocation();\n  const path = location.state?.from ?? home;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    scrollUp(0);\n    dispatch(getEpisodeById(episodeId));\n  }, [dispatch, episodeId]);\n\n  useEffect(() => {\n    const charactersID = episode.characters.map(character =>\n      character.slice(NUMBER_OF_CHARS_TO_SKIP)\n    );\n    dispatch(getCharactersByIds(charactersID));\n  }, [dispatch, episode.characters]);\n\n  const shouldShowCard = episode !== null && !error;\n  const shouldShowError = !isLoading && error && error.status !== 404;\n  const shouldShowNotFoundError = !isLoading && error && error.status === 404;\n  const shouldShowCharacters = !error && !isLoading;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {isLoading\n            ? error && 'Character'\n            : !error && nameNormalize(episode?.name)}\n        </title>\n      </Helmet>\n      <Section>\n        <Container>\n          <GoBackLink to={path} />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          {shouldShowCard && (\n            <EpisodeDecor>\n              <EpisodeWrap>\n                <Episode image={image} />\n              </EpisodeWrap>\n            </EpisodeDecor>\n          )}\n          {shouldShowError && <Error text={oops} />}\n          {shouldShowNotFoundError && <Error text={notfound} />}\n        </Container>\n      </Section>\n\n      {shouldShowCharacters && (\n        <Section>\n          <Container>\n            <StyledH2>Characters from the episode</StyledH2>\n            <CharactersList />\n          </Container>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default EpisodePage;\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${tablet}) {\n    flex-basis: 289px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 3 * 20px) / 4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, List } from './CardsList.styled';\nimport { memo } from 'react';\n\nexport const CardsList = ({ items, element: Element }) => {\n  const Component = props => {\n    return <Element {...props} />;\n  };\n\n  const MemoizedComponent = memo(Component);\n\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MemoizedComponent {...item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  element: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  padding-left: 20px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textPrimary};\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.accent};\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n\n  padding: 1px;\n\n  fill: transparent;\n  stroke: ${({ theme }) => theme.textPrimary};\n  transition: stroke 100ms ${({ theme }) => theme.cubic};\n\n  ${StyledLink}:hover & {\n    stroke: ${({ theme }) => theme.accent};\n  }\n`;\n","import { StyledLink, Svg } from './GoBackLink.styled';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const GoBackLink = props => {\n  return (\n    <StyledLink {...props}>\n      <Svg width=\"20\" height=\"20\">\n        <use href={`${sprite}#icon-arrow-left-small`} />\n      </Svg>\n      Go back\n    </StyledLink>\n  );\n};\n","const CHAR_FILTER_TYPES = {\n  name: 'name',\n  status: 'status',\n  gender: 'gender',\n};\n\nexport const { name, status, gender } = CHAR_FILTER_TYPES;\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","import styled from '@emotion/styled';\n\nexport const Number = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n","export const getRandomIndex = max => Math.floor(Math.random() * max);\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n","export const nameNormalize = name => {\n  if (name.length <= 13) return name;\n  const start = name.slice(0, 11);\n  return `${start}...`;\n};\n\nexport const characterNameNormalize = name => {\n  if (name.length <= 24) return name;\n  const start = name.slice(0, 22);\n  return `${start}...`;\n};\n"],"names":["selectCharactersInfo","state","characters","info","selectCharactersIsLoading","isLoading","selectCharactersError","error","selectCharactersWithIsFav","createSelector","items","selectFavCharactersIds","addIsFavouriteToList","useCharacters","useSelector","selectEpisodeIsLoading","episode","selectEpisodeError","selectEpisodeWithIsFav","item","selectFavEpisodesIds","addIsFavouriteToItem","useOneEpisode","spiecesNormalize","spieces","length","start","slice","StyledLink","styled","Link","theme","cubic","secondary","HeartWrap","Img","MainInfo","Name","Wrap","accentTransparent","Description","StyledNumber","Number","CharacterCard","props","location","useLocation","id","name","species","gender","status","image","isFavourite","to","from","Heart","libraryListName","favcharacters","src","width","height","alt","loading","CharacterStatus","nameNormalize","beam","keyframes","Status","getStatus","animate","text","marker","PARAMS_ARR","CharactersList","useState","showList","setShowList","useSearchParams","searchParams","page","setPage","dispatch","useDispatch","useEffect","getInfo","getCharactersByFilter","getSearchValues","unwrap","shouldRenderList","shouldShowError","shouldShowNotFoundError","shouldRenderPagination","pages","element","totalPages","onPageChange","oops","notfound","StyledH1","FlexUl","TextInfo","BasicWrapper","images","CradInfoText","characterCardTextAccent","bgEpisodesTransparent","FlexInfo","tablet","episodeNameNoramlize","episodeName","EpisodeCardInfo","episodeCode","air_date","pathname","episodes","className","map","data","shine","crossThemeAccent","LoaderWrap","desktop","textPrimary","getHeartColor","Episode","CardLoader","favepisodes","EpisodeDecor","CardDecoration","EpisodeWrap","CardWrap","StyledH2","randomId","useMemo","getRandomIndex","episodeId","useParams","path","home","scrollUp","getEpisodeById","charactersID","character","getCharactersByIds","shouldShowCard","shouldShowCharacters","GoBackLink","Error","List","Item","CardsList","Element","Component","MemoizedComponent","memo","accent","Svg","href","sprite","alive","dead","unknown","max","Math","floor","random","characterNameNormalize"],"sourceRoot":""}