{"version":3,"file":"static/js/338.a2c390b8.chunk.js","mappings":"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","sources":["redux/characters/selectors.js","hooks/useCharacters.js","redux/locations/selectors.js","hooks/useLocations.js","shared/utils/spiecesNormalize.js","modules/Characters/components/CharacterCard/CharacterCard.styled.jsx","modules/Characters/components/CharacterCard/CharacterCard.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.styled.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.jsx","modules/Locations/components/LocationCard/LocationCard.styled.jsx","modules/Locations/components/LocationCard/LocationCard.jsx","modules/Library/Library.styled.jsx","modules/Library/components/CharactersList/CharactersList.jsx","modules/Library/components/EpisodeCardList/EpisodeCardList.styled.jsx","modules/Library/components/EpisodeCardList/EpisodeCardList.jsx","modules/Library/components/LocationsList/LocationsList.styled.jsx","modules/Library/components/LocationsList/LocationsList.jsx","pages/FavouritePage/FavouritePage.jsx","shared/components/CardsList/CardsList.styled.jsx","shared/components/CardsList/CardsList.jsx","shared/components/Error/Error.styled.jsx","shared/components/Error/Error.jsx","shared/components/Heart/Heart.styled.jsx","shared/components/Heart/Heart.jsx","shared/components/Loader/Loader.styled.jsx","shared/components/Loader/Loader.jsx","shared/constants/characterStatus.js","shared/constants/errorText.js","shared/styles/components/Section.styled.jsx","shared/utils/addIsFavourite.js","shared/utils/getHeartColor.js","shared/utils/getStatus.js","shared/utils/nameNormalize.js"],"sourcesContent":["export const selectCharactersInfo = state => state.characters.info;\nexport const selectCharactersItems = state => state.characters.items;\nexport const selectCharactersIsLoading = state => state.characters.isLoading;\nexport const selectCharactersError = state => state.characters.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCharactersError,\n  selectCharactersInfo,\n  selectCharactersIsLoading,\n  selectCharactersItems,\n} from 'redux/characters/selectors';\nimport { selectFavCharactersIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectCharactersWithIsFav = createSelector(\n  [selectCharactersItems, selectFavCharactersIds],\n  addIsFavouriteToList\n);\n\nexport const useCharacters = () => {\n  const info = useSelector(selectCharactersInfo);\n  const characters = useSelector(selectCharactersWithIsFav);\n  const isLoading = useSelector(selectCharactersIsLoading);\n  const error = useSelector(selectCharactersError);\n\n  return {\n    info,\n    characters,\n    isLoading,\n    error,\n  };\n};\n","export const selectLocationsInfo = state => state.locations.info;\nexport const selectLocationsItems = state => state.locations.items;\nexport const selectLocationsIsLoading = state => state.locations.isLoading;\nexport const selectLocationsError = state => state.locations.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavLocationsIds } from 'redux/library/selectors';\nimport {\n  selectLocationsError,\n  selectLocationsInfo,\n  selectLocationsIsLoading,\n  selectLocationsItems,\n} from 'redux/locations/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectLocationsWithIsFav = createSelector(\n  [selectLocationsItems, selectFavLocationsIds],\n  addIsFavouriteToList\n);\n\nexport const useLocations = () => {\n  const info = useSelector(selectLocationsInfo);\n  const locations = useSelector(selectLocationsWithIsFav);\n  const isLoading = useSelector(selectLocationsIsLoading);\n  const error = useSelector(selectLocationsError);\n\n  return {\n    info,\n    locations,\n    isLoading,\n    error,\n  };\n};\n","export const spiecesNormalize = spieces => {\n  if (spieces.length <= 10) return spieces;\n  const start = spieces.slice(0, 5);\n  return `${start}...`;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Number } from 'shared/styles/components/Number.styled';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 0;\n\n  width: fit-content;\n  height: fit-content;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const Description = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-size: 35px;\n`;\n","import { characters } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { spiecesNormalize } from 'shared/utils/spiecesNormalize';\nimport { CharacterStatus } from '../CharacterStatus/CharacterStatus';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  MainInfo,\n  Name,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './CharacterCard.styled';\nimport { favcharacters } from 'shared/constants/libaryListName';\n\nexport const CharacterCard = props => {\n  const location = useLocation();\n  const { id, name, species, gender, status, image, isFavourite } = props;\n\n  return (\n    <StyledLink to={`/${characters}/${id}`} state={{ from: location }}>\n      <HeartWrap>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favcharacters}\n        />\n      </HeartWrap>\n      <Img src={image} width=\"289\" height=\"289\" alt={name} loading=\"lazy\" />\n      <Wrap>\n        <MainInfo>\n          <CharacterStatus status={status} />\n          <Name>{nameNormalize(name)}</Name>\n        </MainInfo>\n        <Description>\n          {spiecesNormalize(species)} | {gender}\n        </Description>\n        <StyledNumber>#{id}</StyledNumber>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { getStatus } from 'shared/utils/getStatus';\n\nconst beam = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Status = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n\n    animation: ${({ animate }) => (animate ? beam : 'none')} 1.5s ease-in-out\n      infinite;\n  }\n`;\n","import { Tooltip } from 'shared/components/ToolTip';\nimport { Status } from './CharacterStatus.styled';\n\nexport const CharacterStatus = ({ status, animate }) => {\n  return (\n    <Tooltip text={status}>\n      <Status marker={status} animate={animate} />\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\nimport { getStatus } from 'shared/utils/getStatus';\n\nexport const StyledDiv = styled.div`\n  position: relative;\n\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 26%;\n  left: 6%;\n\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  border-radius: 5px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 278px;\n    height: 278px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    width: 289px;\n    height: 289px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n\n  transition: ${({ theme }) => theme.cubic} 250ms;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media screen and (min-width: ${mobile}) {\n    position: relative;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    position: absolute;\n  }\n\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n  height: 60px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.secondaryTransparent};\n`;\n\nexport const Name = styled.p`\n  padding-left: 22px;\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n\n  @media screen and (min-width: ${mobile}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 20px;\n  }\n\n  & span {\n    display: inline;\n    margin-left: 7px;\n\n    font-weight: 900;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n\n    @media screen and (min-width: ${mobile}) {\n      font-size: 18px;\n    }\n\n    @media screen and (min-width: ${tablet}) {\n      font-size: 24px;\n    }\n  }\n\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.25px;\n\n  &.location-card__name {\n    font-size: 26px;\n    margin-bottom: 30px;\n    margin-top: 20px;\n    margin-right: 5px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: flex;\n\n  @media screen and (min-width: ${mobile}) {\n    flex-direction: column;\n    height: 530px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    height: 289px;\n  }\n`;\n\nexport const Infobox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Number = styled.div`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const ResidentsButton = styled.button`\n  position: absolute;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.bgPrimary};\n\n  background-color: ${({ theme }) => theme.crossThemeAccent};\n\n  border-radius: 5px;\n  transition: clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  clip-path: polygon(\n    12% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    88% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:hover {\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n    color: ${({ theme }) => theme.secondary};\n  }\n\n  @media screen and (min-width: ${mobile}) {\n    z-index: 1;\n    bottom: -15%;\n    left: 31%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 160px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    z-index: 1;\n    bottom: -7%;\n    left: 20%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 200px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    bottom: 35%;\n    left: 85%;\n    transform: translate(-50%, -50%);\n    height: 70px;\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport image from 'shared/images/locationCard.jpg';\nimport { useDispatch } from 'react-redux';\nimport { favlocations } from 'shared/constants/libaryListName';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  ImgWrap,\n  Infobox,\n  Name,\n  Number,\n  ResidentsButton,\n  StyledDiv,\n  Wrap,\n} from './LocationCard.styled';\n\nexport const LocationCard = ({ location, resident, showResidentsBtn }) => {\n  const [residentImage, setResidentImage] = useState(image);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (resident) {\n      const residentID = resident.slice(42);\n      const img = `https://rickandmortyapi.com/api/character/avatar/${residentID}.jpeg`;\n      setResidentImage(img);\n    }\n  }, [dispatch, resident]);\n\n  return (\n    <StyledDiv>\n      <Description>\n        <ImgWrap>\n          <Img\n            src={residentImage}\n            width=\"289\"\n            height=\"289\"\n            alt=\"location\"\n            loading=\"lazy\"\n          />\n        </ImgWrap>\n        <Infobox>\n          <Name className=\"location-card__name\">{location.name}</Name>\n          <Name>\n            Type: <span>{location.type}</span>\n          </Name>\n          <Name>\n            Dimension: <span>{location.dimension}</span>\n          </Name>\n          <Name>\n            Number of residents: <span>{location.residents.length}</span>\n          </Name>\n        </Infobox>\n        {showResidentsBtn && (\n          <ResidentsButton type=\"button\">Residents</ResidentsButton>\n        )}\n      </Description>\n      <Wrap>\n        <Number>#{location.id}</Number>\n      </Wrap>\n      <HeartWrap isFavourite={location.isFavourite}>\n        <Heart\n          id={location.id}\n          isFavourite={location.isFavourite}\n          libraryListName={favlocations}\n        />\n      </HeartWrap>\n    </StyledDiv>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH2 = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { useCharacters } from 'hooks/useCharacters';\nimport { useLibrary } from 'hooks/useLibrary';\nimport { CharacterCard } from 'modules/Characters/components/CharacterCard';\nimport { StyledH2 } from 'modules/Library/Library.styled';\nimport { CardsList } from 'shared/components/CardsList';\nimport { Error } from 'shared/components/Error';\nimport { Loader } from 'shared/components/Loader';\nimport { nothingonlist, oops } from 'shared/constants/errorText';\n\nexport const CharactersList = () => {\n  const { favCharactersIds } = useLibrary();\n  const { characters, isLoading, error } = useCharacters();\n\n  const shouldRenderList = favCharactersIds.length > 0 && !error && !isLoading;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <StyledH2>Favourite characters</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList ? (\n        <CardsList items={characters} element={CharacterCard} />\n      ) : (\n        <Error text={nothingonlist} />\n      )}\n      {shouldShowError && <Error text={oops} />}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n`;\n","import { useEpisodes } from 'hooks/useEpisodes';\nimport { Loader } from 'shared/components/Loader';\nimport { Item, List } from './EpisodeCardList.styled';\nimport { EpisodeCard } from 'modules/Episodes/components/EpisodeCard/EpisodeCard';\nimport { StyledH2 } from 'modules/Library/Library.styled';\nimport { useLibrary } from 'hooks/useLibrary';\nimport { Error } from 'shared/components/Error';\nimport { nothingonlist, oops } from 'shared/constants/errorText';\n\nexport const EpisodeCardList = () => {\n  const { favEpisodesIds } = useLibrary();\n  const { episodes, error, isLoading } = useEpisodes();\n\n  const shouldRenderList = favEpisodesIds.length > 0 && !error && !isLoading;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <StyledH2>Favourite episodes</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList ? (\n        <List>\n          {episodes.map(episode => (\n            <Item key={episode.id}>\n              <EpisodeCard episode={episode} />\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Error text={nothingonlist} />\n      )}\n      {shouldShowError && <Error text={oops} />}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  margin-bottom: 30px;\n  margin-top: 40px;\n`;\n","import { useLocations } from 'hooks/useLocations';\nimport { StyledH2 } from 'modules/Library/Library.styled';\nimport { Loader } from 'shared/components/Loader';\nimport { StyledUl } from './LocationsList.styled';\nimport { LocationCard } from 'modules/Locations/components/LocationCard/LocationCard';\nimport { useLibrary } from 'hooks/useLibrary';\nimport { nothingonlist, oops } from 'shared/constants/errorText';\nimport { Error } from 'shared/components/Error';\n\nexport const LocationsList = () => {\n  const { favLocationsIds } = useLibrary();\n  const { locations, error, isLoading } = useLocations();\n\n  const showResidentsBtn = true;\n  const shouldRenderList = favLocationsIds.length > 0 && !error && !isLoading;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <StyledH2>Favourite locations</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList ? (\n        <StyledUl>\n          {locations.map(location => (\n            <li key={location.id}>\n              <LocationCard\n                location={location}\n                resident={location.residents[0]}\n                showResidentsBtn={showResidentsBtn}\n              />\n            </li>\n          ))}\n        </StyledUl>\n      ) : (\n        <Error text={nothingonlist} />\n      )}\n      {shouldShowError && <Error text={oops} />}\n    </>\n  );\n};\n","import { useLibrary } from 'hooks/useLibrary';\nimport { CharactersList } from 'modules/Library/components/CharactersList/CharactersList';\nimport { EpisodeCardList } from 'modules/Library/components/EpisodeCardList/EpisodeCardList';\nimport { LocationsList } from 'modules/Library/components/LocationsList/LocationsList';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getCharactersByIds } from 'redux/characters/thunks';\nimport { getEpisodesByIds } from 'redux/episodes/thunks';\nimport { getLocationsByIds } from 'redux/locations/thunks';\nimport {\n  favcharacters,\n  favepisodes,\n  favlocations,\n} from 'shared/constants/libaryListName';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { Section } from 'shared/styles/components/Section.styled';\n\nconst FavouritePage = () => {\n  const [showList, setShowList] = useState(false);\n  const { listName } = useParams();\n  const { favCharactersIds, favEpisodesIds, favLocationsIds } = useLibrary();\n  const dispatch = useDispatch();\n\n  const isCharacters = listName === favcharacters;\n  const isEpisodes = listName === favepisodes;\n  const isLocations = listName === favlocations;\n\n  useEffect(() => {\n    const getInfo = async () => {\n      if (favCharactersIds.length > 0)\n        await dispatch(getCharactersByIds(favCharactersIds)).unwrap();\n      if (favEpisodesIds.length > 0)\n        await dispatch(getEpisodesByIds(favEpisodesIds)).unwrap();\n      if (favLocationsIds.length > 0)\n        await dispatch(getLocationsByIds(favLocationsIds)).unwrap();\n\n      setShowList(true);\n    };\n    getInfo();\n  }, [dispatch, favCharactersIds, favEpisodesIds, favLocationsIds]);\n\n  return (\n    <Section>\n      <Container>\n        {showList && (\n          <>\n            {isCharacters && <CharactersList />}\n            {isEpisodes && <EpisodeCardList />}\n            {isLocations && <LocationsList />}\n          </>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default FavouritePage;\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${tablet}) {\n    flex-basis: 289px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 3 * 20px) / 4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, List } from './CardsList.styled';\nimport { memo } from 'react';\n\nexport const CardsList = ({ items, element: Element }) => {\n  const Component = props => {\n    return <Element {...props} />;\n  };\n\n  const MemoizedComponent = memo(Component);\n\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MemoizedComponent {...item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  element: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport imgErrorC1 from 'shared/images/404-c1.png';\n\nexport const Text = styled.p`\n  margin-top: 30px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-align: center;\n  color: ${({ theme }) => theme.textPrimary};\n`;\n\nexport const BgImg = styled.div`\n  height: 200px;\n  margin: 0 auto;\n  background-image: url(${imgErrorC1});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-width: ${tablet}) {\n    width: 400px;\n    height: 300px;\n  }\n`;\n","import { BgImg, Text } from './Error.styled';\n\nexport const Error = ({ text }) => {\n  return (\n    <>\n      <Text>{text}</Text>\n      <BgImg />\n    </>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const IconBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  height: 40px;\n\n  background-color: transparent;\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${getHeartColor};\n  fill: ${getHeartColor};\n  transition: trasform 250ms ${({ theme }) => theme.cubic};\n\n  ${IconBtn}:hover & {\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tooltip } from '../ToolTip';\nimport { IconBtn, Svg } from './Heart.styled';\nimport { addToLibrary, removeFromLibrary } from 'redux/library/slice';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const Heart = ({ id, isFavourite, libraryListName }) => {\n  const [isFav, setIsFav] = useState(isFavourite);\n  const dispatch = useDispatch();\n\n  const hendleHeartClick = e => {\n    e.preventDefault();\n    if (!isFavourite) dispatch(addToLibrary({ id, libraryListName }));\n    if (isFavourite) dispatch(removeFromLibrary({ id, libraryListName }));\n    setIsFav(!isFav);\n  };\n\n  return (\n    <Tooltip text={isFav ? 'remove from my favourite' : 'add to my favourite'}>\n      <IconBtn onClick={hendleHeartClick}>\n        <Svg width=\"30\" height=\"30\" isFavourite={isFav}>\n          <use href={`${sprite}#icon-heart-icon`} />\n        </Svg>\n      </IconBtn>\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1200;\n`;\n","import { Dna } from 'react-loader-spinner';\nimport { Overlay } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Overlay>\n      <Dna visible={true} height=\"40%\" width=\"40%\" ariaLabel=\"dna-loading\" />\n    </Overlay>\n  );\n};\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","const ERROR_TEXT = {\n  oops: 'Oops, something went wrong',\n  notfound: \"Sorry, we couldn't find any results\",\n  nothingonlist: 'There is nothing on this list',\n};\n\nexport const { oops, notfound, nothingonlist } = ERROR_TEXT;\n","import styled from '@emotion/styled';\nimport locationPageBackground from '../../images/locationPageBackground.png';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  /* &.location-page {\n    background: url(${locationPageBackground});\n  } */\n`;\n","export const addIsFavouriteToItem = (item, ids) => {\n  if (!item) return null;\n  return {\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  };\n};\n\nexport const addIsFavouriteToList = (data, ids) => {\n  if (!Array.isArray(data)) {\n    return [\n      {\n        ...data,\n        isFavourite: ids ? ids.includes(data?.id) : false,\n      },\n    ];\n  }\n  return data.map(item => ({\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  }));\n};\n","export const getHeartColor = ({\n  isFavourite,\n  theme: { hightlight, bgcHeartTransparent },\n}) => (isFavourite ? hightlight : bgcHeartTransparent);\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n","export const nameNormalize = name => {\n  if (name.length <= 13) return name;\n  const start = name.slice(0, 11);\n  return `${start}...`;\n};\n\nexport const characterNameNormalize = name => {\n  if (name.length <= 24) return name;\n  const start = name.slice(0, 22);\n  return `${start}...`;\n};\n"],"names":["selectCharactersInfo","state","characters","info","selectCharactersIsLoading","isLoading","selectCharactersError","error","selectCharactersWithIsFav","createSelector","items","selectFavCharactersIds","addIsFavouriteToList","useCharacters","useSelector","selectLocationsInfo","locations","selectLocationsIsLoading","selectLocationsError","selectLocationsWithIsFav","selectFavLocationsIds","useLocations","spiecesNormalize","spieces","length","start","slice","StyledLink","styled","Link","theme","cubic","secondary","HeartWrap","Img","MainInfo","Name","Wrap","accentTransparent","Description","StyledNumber","Number","CharacterCard","props","location","useLocation","id","name","species","gender","status","image","isFavourite","to","from","Heart","libraryListName","favcharacters","src","width","height","alt","loading","CharacterStatus","nameNormalize","beam","keyframes","Status","getStatus","animate","text","marker","StyledDiv","ImgWrap","mobile","tablet","secondaryTransparent","characterCardTextAccent","Infobox","ResidentsButton","bgPrimary","crossThemeAccent","disabled","desktop","getHeartColor","LocationCard","resident","showResidentsBtn","useState","residentImage","setResidentImage","dispatch","useDispatch","useEffect","residentID","img","className","type","dimension","residents","favlocations","StyledH2","CharactersList","favCharactersIds","useLibrary","shouldRenderList","shouldShowError","Loader","CardsList","element","Error","nothingonlist","oops","List","Item","EpisodeCardList","favEpisodesIds","useEpisodes","episodes","map","episode","EpisodeCard","StyledUl","LocationsList","favLocationsIds","showList","setShowList","listName","useParams","isCharacters","isEpisodes","favepisodes","isLocations","getInfo","getCharactersByIds","unwrap","getEpisodesByIds","getLocationsByIds","Element","Component","MemoizedComponent","memo","item","Text","textPrimary","BgImg","imgErrorC1","IconBtn","Svg","isFav","setIsFav","onClick","e","preventDefault","addToLibrary","removeFromLibrary","href","sprite","Overlay","visible","ariaLabel","alive","dead","unknown","notfound","Section","locationPageBackground","addIsFavouriteToItem","ids","includes","data","Array","isArray","hightlight","bgcHeartTransparent","characterNameNormalize"],"sourceRoot":""}