{"version":3,"file":"static/js/316.2d42d062.chunk.js","mappings":"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","sources":["modules/Episodes/Episodes.styled.jsx","modules/Episodes/api.img/api.img.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.styled.jsx","shared/utils/episodeNameNormalize.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.jsx","shared/components/Heart/Heart.styled.jsx","shared/components/Heart/Heart.jsx","shared/components/ToolTip/ToolTip.styled.jsx","shared/components/ToolTip/ToolTip.jsx","shared/styles/components/CardDecoration.styled.jsx","shared/styles/components/Number.styled.jsx","shared/utils/getHeartColor.js","shared/utils/getRandomIndex.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const FlexUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextInfo = styled.div`\n  padding: 8px 10px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const BasicWrapper = styled.div`\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  width: 100%;\n`;\n","import epImg1 from '../../../shared/images/episode1.jpeg';\nimport epImg2 from '../../../shared/images/episode2.jpeg';\nimport epImg3 from '../../../shared/images/episode3.jpeg';\nimport epImg4 from '../../../shared/images/episode4.jpeg';\nimport epImg5 from '../../../shared/images/episode5.jpg';\n\nexport const images = [epImg1, epImg2, epImg3, epImg4, epImg5];\n","import styled from '@emotion/styled/macro';\nimport { FlexUl, TextInfo } from 'modules/Episodes/Episodes.styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const CradInfoText = styled(TextInfo)`\n  width: 230px;\n\n  color: ${({ theme }) => theme.characterCardTextAccent};\n  background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n  border: 2px solid ${({ theme }) => theme.characterCardTextAccent};\n  border-radius: 4px;\n\n  clip-path: polygon(\n    10% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    90% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.05);\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n  }\n`;\n\nexport const FlexInfo = styled(FlexUl)`\n  position: absolute;\n  top: 83px;\n  left: 9px;\n\n  align-items: start;\n  gap: 10px;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 36px;\n    left: 79px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    top: 20px;\n    left: 46px;\n  }\n\n  & > li:first-of-type ${CradInfoText} {\n    width: 230px;\n    font-size: 18px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 270px;\n      font-size: 22px;\n    }\n  }\n\n  & > li:nth-of-type(2) ${CradInfoText} {\n    width: 200px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 230px;\n    }\n  }\n\n  & > li:last-of-type ${CradInfoText} {\n    width: 160px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 180px;\n    }\n  }\n`;\n","export const episodeNameNoramlize = episodeName => {\n  if (episodeName.length <= 15) return episodeName;\n  const start = episodeName.slice(0, 13);\n  return `${start}...`;\n};\n","import { useLocation } from 'react-router';\nimport { CradInfoText, FlexInfo } from './EpisodeCardInfo.styled';\nimport { episodeNameNoramlize } from 'shared/utils/episodeNameNormalize';\nimport { episodes } from 'shared/constants/routes';\n\nexport const EpisodeCardInfo = ({ episode }) => {\n  const location = useLocation();\n  const { id, name, episode: episodeCode, air_date } = episode;\n\n  const info = [\n    location.pathname === `/${episodes}/${id}`\n      ? name\n      : episodeNameNoramlize(name),\n    air_date,\n    episodeCode,\n  ];\n  return (\n    <FlexInfo>\n      {info.map(data => (\n        <li key={data}>\n          <CradInfoText>{data}</CradInfoText>\n        </li>\n      ))}\n    </FlexInfo>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const IconBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  height: 40px;\n\n  background-color: transparent;\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${getHeartColor};\n  fill: ${getHeartColor};\n  transition: trasform 250ms ${({ theme }) => theme.cubic};\n\n  ${IconBtn}:hover & {\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tooltip } from '../ToolTip';\nimport { IconBtn, Svg } from './Heart.styled';\nimport { addToLibrary, removeFromLibrary } from 'redux/library/slice';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const Heart = ({ id, isFavourite, libraryListName }) => {\n  const [isFav, setIsFav] = useState(isFavourite);\n  const dispatch = useDispatch();\n\n  const hendleHeartClick = e => {\n    e.preventDefault();\n    if (!isFavourite) dispatch(addToLibrary({ id, libraryListName }));\n    if (isFavourite) dispatch(removeFromLibrary({ id, libraryListName }));\n    setIsFav(!isFav);\n  };\n\n  return (\n    <Tooltip text={isFav ? 'remove from my favourite' : 'add to my favourite'}>\n      <IconBtn onClick={hendleHeartClick}>\n        <Svg width=\"30\" height=\"30\" isFavourite={isFav}>\n          <use href={`${sprite}#icon-heart-icon`} />\n        </Svg>\n      </IconBtn>\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Text = styled.div`\n  position: absolute;\n  top: -45px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1000;\n\n  height: fit-content;\n  width: fit-content;\n\n  background-color: #333;\n  color: #fff;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 14px;\n  line-height: 1.4;\n  white-space: nowrap;\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n  ${({ castomCss }) => castomCss}\n\n  &::before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 6px 6px 0 6px;\n    border-color: #333 transparent transparent transparent;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const Trigger = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover ${Text} {\n    opacity: 1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Text, Trigger } from './ToolTip.styled';\n\nexport const Tooltip = ({ text, ariaLabel = 'tooltip', children }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleTooltip = () => {\n    setIsVisible(!isVisible);\n  };\n\n  return (\n    <>\n      <Trigger onMouseEnter={toggleTooltip} onMouseLeave={toggleTooltip}>\n        {children}\n        {isVisible && <Text aria-label={ariaLabel}>{text}</Text>}\n      </Trigger>\n    </>\n  );\n};\n\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  text: PropTypes.string.isRequired,\n  ariaLabel: PropTypes.string,\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const CardDecoration = styled.div`\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  min-height: fit-content;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${desktop}) {\n    width: 704px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -1%;\n    right: -1.5%;\n    transform: rotate(-90deg);\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.paginationAccent};\n    border-width: 0 20px 20px 0;\n    background-color: transparent;\n\n    @media screen and (min-width: ${tablet}) {\n      right: -0.5%;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -1%;\n    left: -1.5%;\n    transform: rotate(90deg);\n    z-index: -1;\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.paginationAccent};\n    border-width: 0 20px 20px 0;\n    background-color: transparent;\n\n    @media screen and (min-width: ${tablet}) {\n      left: -0.5%;\n    }\n  }\n`;\n\nexport const CardWrap = styled.div`\n  padding: 60px 20px 20px 20px;\n\n  background: ${({ theme }) => theme.bgCharacterCard};\n  border: 3px solid ${({ theme }) => theme.paginationAccent};\n  border-radius: 4px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding: 60px 50px 30px 50px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -21px;\n    left: -20.6px;\n    transform: rotate(45deg);\n\n    width: 40px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.paginationAccent};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -21px;\n    right: -20.6px;\n    transform: rotate(-135deg);\n\n    width: 40px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.paginationAccent};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Number = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n","export const getHeartColor = ({\n  isFavourite,\n  theme: { hightlight, bgcHeartTransparent },\n}) => (isFavourite ? hightlight : bgcHeartTransparent);\n","export const getRandomIndex = max => Math.floor(Math.random() * max);\n"],"names":["StyledH1","styled","FlexUl","TextInfo","BasicWrapper","images","CradInfoText","theme","characterCardTextAccent","bgEpisodesTransparent","cubic","FlexInfo","tablet","desktop","episodeNameNoramlize","episodeName","length","start","slice","EpisodeCardInfo","episode","location","useLocation","id","name","episodeCode","air_date","info","pathname","episodes","map","data","IconBtn","Svg","getHeartColor","Heart","isFavourite","libraryListName","useState","isFav","setIsFav","dispatch","useDispatch","text","onClick","e","preventDefault","addToLibrary","removeFromLibrary","width","height","href","sprite","Text","castomCss","Trigger","Tooltip","ariaLabel","children","isVisible","setIsVisible","toggleTooltip","onMouseEnter","onMouseLeave","CardDecoration","paginationAccent","CardWrap","bgCharacterCard","bgPrimary","Number","hightlight","bgcHeartTransparent","getRandomIndex","max","Math","floor","random"],"sourceRoot":""}