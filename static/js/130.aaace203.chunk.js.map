{"version":3,"file":"static/js/130.aaace203.chunk.js","mappings":"2OAKMA,GAASC,EAAAA,EAAAA,IAAH,kHASCC,GAAS,OAAOC,EAAAA,EAAP,qBAAH,gGAOIC,EAAAA,GAPJ,kFAcIC,EAAAA,GAdJ,sBAmBNC,GAAG,2CACN,qBAAGC,MAAkBC,SAArB,GADM,2BAEW,qBAAGD,MAAkBE,KAArB,GAFX,IAIZP,EAJY,sBAKCF,EALD,UAKgB,qBAAGO,MAAkBE,KAArB,GALhB,eAMJ,qBAAGF,MAAkBG,SAArB,GANI,M,SC9BVC,G,QAAW,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OAAeN,EAAAA,EAAAA,IAAd,OAAD,8HAEOM,EAAMK,iBAFb,GASJC,E,QAAYC,EAAAA,IAAH,smBAKA,qBAAGP,MAAkBK,gBAArB,IACX,qBAAGL,MAAkBK,gBAArB,GACID,GAaS,qBAAGJ,MAAkBK,gBAArB,IACX,qBAAGL,MAAkBK,gBAArB,GAEID,G,UChCJI,EAAa,WACxB,OAAO,SAACF,EAAD,GACR,E,2BCAYG,EAAe,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcC,GAAW,YAChE,OACE,SAACjB,GAAD,gBAAQkB,KAAK,SAASC,SAAUH,GAAeC,GAA/C,aACGD,GACC,SAACH,EAAD,KAEA,gCACGE,GACD,SAACX,EAAD,CAAKgB,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,+BAMpB,C,4GCjBM,IAAMC,GAAK,+GAII,qBAAGnB,MAAkBK,gBAArB,GAJJ,8GAUgBR,EAAAA,GAVhB,yBAeLE,GAAG,iIAON,qBAAGC,MAAkBK,gBAArB,GAPM,gCAQgB,qBAAGL,MAAkBE,KAArB,GARhB,sDAgBHkB,GAAI,6EAILrB,EAJK,sCASJsB,GAAK,6FAGI,qBAAGrB,MAAkBK,gBAArB,GAHJ,kIAUgBR,EAAAA,GAVhB,yIAwBLyB,GAAK,wK,uEC/DLC,EAAc,SAAC,GAAD,IACzBC,EADyB,EACzBA,GACAC,EAFyB,EAEzBA,UACAC,EAHyB,EAGzBA,OACAC,EAJyB,EAIzBA,SACAC,EALyB,EAKzBA,SACGhB,GANsB,mBAQzB,UAACQ,EAAD,YACE,SAACD,EAAD,CAAOU,QAASL,EAAhB,UACE,SAACzB,EAAD,CAAKgB,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,4BAGb,SAACG,GAAD,gBACEG,GAAIA,EACJX,KAAK,QACDD,GACAe,EAASF,EAAW,CACtBG,SAAAA,OAGJ,SAACN,EAAD,WACE,SAAC,IAAD,CAAcI,OAAQA,EAAQI,KAAML,QAvBf,C,8ECJ3B,IAKeM,EAJN,gBAIaC,EAHX,gD,sECAEpC,E,QAAaW,EAAAA,OAAH,+zBAsBZ,qBAAGP,MAAkBC,SAArB,IACW,qBAAGD,MAAkBK,gBAArB,IAEU,qBAAGL,MAAkBE,KAArB,IACV,qBAAGF,MAAkBE,KAArB,IACJ,qBAAGF,MAAkBE,KAArB,IAIM,qBAAGF,MAAkBc,QAArB,IAKX,qBAAGd,MAAkBG,SAArB,G,wFCtCA8B,EAAiB,SAAAC,GAC5B,OAAOC,OAAOC,QAAQF,GAAQG,QAC5B,SAACC,EAAD,sBAAOC,EAAP,KAAYC,EAAZ,WAAkC,KAAVA,GAAA,kBAAoBF,GAApB,cAA0BC,EAAMC,IAAUF,CAAlE,GACA,CAAC,EAEJ,C","sources":["shared/components/RandomButton/RandomButton.styled.jsx","shared/components/DotsLoader/DotsLoader.styled.jsx","shared/components/DotsLoader/DotsLoader.jsx","shared/components/RandomButton/RandomButton.jsx","shared/components/SearchInput/SearchInput.styled.jsx","shared/components/SearchInput/SearchInput.jsx","shared/constants/serchInput.js","shared/styles/components/BaseButton.styled.jsx","shared/utils/getCleanValues.js"],"sourcesContent":["import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled/macro';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\nimport { BaseButton } from 'shared/styles/components/BaseButton.styled';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n`;\n\nexport const Button = styled(BaseButton)`\n  position: relative;\n  padding: 14px 28px;\n  margin: 0 auto;\n  width: 230px;\n  height: 45px;\n\n  @media (min-width: ${tablet}) {\n    padding: 16px 23px;\n    width: 280px;\n    height: 60px;\n    font-size: 18px;\n  }\n\n  @media (min-width: ${desktop}) {\n    font-size: 20px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  fill: ${({ theme }) => theme.bgPrimary};\n  transition: fill 250ms ${({ theme }) => theme.cubic};\n\n  ${Button}:hover & {\n    animation: ${rotate} 0.7s ${({ theme }) => theme.cubic} both;\n    fill: ${({ theme }) => theme.secondary};\n  }\n`;\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst flashing = ({ theme }) => keyframes`\n  0% {\n    background-color: ${theme.paginationAccent};\n  }\n  50%, 100% {\n    background-color: rgba(152, 128, 255, 0.2);\n  }\n`;\n\nexport const ThreeDots = styled.div`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.paginationAccent};\n  color: ${({ theme }) => theme.paginationAccent};\n  animation: ${flashing} 1s infinite alternate;\n  animation-delay: 0.5s;\n\n  &::before,\n  &::after {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    top: 0;\n\n    width: 14px;\n    height: 14px;\n\n    background-color: ${({ theme }) => theme.paginationAccent};\n    color: ${({ theme }) => theme.paginationAccent};\n    border-radius: 50%;\n    animation: ${flashing} 1s infinite alternate;\n  }\n\n  &::before {\n    left: -25px;\n    animation-delay: 0s;\n  }\n\n  &::after {\n    left: 25px;\n    animation-delay: 1s;\n  }\n`;\n","import React from 'react';\nimport { ThreeDots } from './DotsLoader.styled';\n\nexport const DotsLoader = () => {\n  return <ThreeDots />;\n};\n","import PropTypes from 'prop-types';\nimport { Button, Svg } from './RandomButton.styled';\nimport sprite from 'shared/icons/sprite.svg';\nimport { DotsLoader } from '../DotsLoader';\n\nexport const RandomButton = ({ children, isLoading, ...rest }) => {\n  return (\n    <Button type=\"button\" disabled={isLoading} {...rest}>\n      {isLoading ? (\n        <DotsLoader />\n      ) : (\n        <>\n          {children}\n          <Svg width=\"20\" height=\"20\">\n            <use href={`${sprite}#icon-rotate-solid`} />\n          </Svg>\n        </>\n      )}\n    </Button>\n  );\n};\n\nRandomButton.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n","import styled from '@emotion/styled/macro';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const Label = styled.label`\n  position: relative;\n  background-color: #fff;\n  outline: none;\n  border: 2px solid ${({ theme }) => theme.paginationAccent};\n  border-right: none;\n  border-radius: 8px 0 0 8px;\n  color: #212121;\n  padding: 14px 25px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding: 20px 30px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n\n  fill: ${({ theme }) => theme.paginationAccent};\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: translate(-40%, -40%);\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n\n  &:hover ${Svg} {\n    transform: translate(-40%, -40%);\n  }\n`;\n\nexport const Input = styled.input`\n  background-color: #fff;\n  outline: none;\n  border: 2px solid ${({ theme }) => theme.paginationAccent};\n  border-left: none;\n  border-radius: 0 8px 8px 0;\n  color: #212121;\n  padding: 14px 10px 14px 0px;\n  width: 160px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding: 20px 10px 20px 0;\n    width: 300px;\n  }\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n    color: grey;\n  }\n`;\n\nexport const Error = styled.p`\n  position: absolute;\n  bottom: -15px;\n  left: 50%;\n  transform: translateX(-50%);\n\n  color: red;\n  font-size: 12px;\n  font-weight: 500;\n`;\n","import { ErrorMessage } from '@hookform/error-message';\nimport { Error, Input, Label, Svg, Wrap } from './SearchInput.styled';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const SearchInput = ({\n  id,\n  inputName,\n  errors,\n  register,\n  onChange,\n  ...rest\n}) => (\n  <Wrap>\n    <Label htmlFor={id}>\n      <Svg width=\"30\" height=\"30\">\n        <use href={`${sprite}#icon-search-Icon`} />\n      </Svg>\n    </Label>\n    <Input\n      id={id}\n      type=\"text\"\n      {...rest}\n      {...register(inputName, {\n        onChange,\n      })}\n    />\n    <Error>\n      <ErrorMessage errors={errors} name={inputName} />\n    </Error>\n  </Wrap>\n);\n","const SEARCH_INPUT_VALIDATION = {\n  regex: /^[a-zA-Z\\s]+$/,\n  message: 'The search term can contain latin letters only',\n};\n\nexport const { regex, message } = SEARCH_INPUT_VALIDATION;\n","import styled from '@emotion/styled';\n\nexport const BaseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 10px;\n\n  clip-path: polygon(\n    10% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    90% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.bgPrimary};\n  background-color: ${({ theme }) => theme.paginationAccent};\n  border-radius: 4px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:disabled {\n    cursor: default;\n    background-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:not(:disabled):hover {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n  }\n`;\n","export const getCleanValues = values => {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => (value !== '' ? { ...acc, [key]: value } : acc),\n    {}\n  );\n};\n"],"names":["rotate","keyframes","Button","BaseButton","tablet","desktop","Svg","theme","bgPrimary","cubic","secondary","flashing","paginationAccent","ThreeDots","styled","DotsLoader","RandomButton","children","isLoading","rest","type","disabled","width","height","href","sprite","Label","Wrap","Input","Error","SearchInput","id","inputName","errors","register","onChange","htmlFor","name","regex","message","getCleanValues","values","Object","entries","reduce","acc","key","value"],"sourceRoot":""}