{"version":3,"file":"static/js/864.8ef9284c.chunk.js","mappings":"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","sources":["modules/Locations/Locations.styled.jsx","redux/location/selectors.js","modules/Locations/components/LocationPicker/LocationPicker.styled.jsx","modules/Locations/components/LocationPicker/LocationPicker.jsx","shared/utils/getRandomLocation.js","redux/locations/selectors.js","modules/Locations/components/LocationCard/LocationCard.styled.jsx","modules/Locations/components/LocationCard/LocationCard.jsx","modules/Locations/components/LocationsList/LocationsList.styled.jsx","modules/Locations/components/LocationsList/LocationsList.jsx","modules/Locations/Locations.jsx","pages/LocationsPage/LocationsPage.jsx","shared/components/Pagination/Pagination.styled.jsx","shared/components/Pagination/Pagination.jsx","shared/utils/getPaginationLabels.js","shared/constants/characterStatus.js","shared/styles/components/Section.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  text-align: center;\n\n  font-size: 48px;\n`;\n","export const selectlocation = state => state.location.item;\nexport const selectlocationIsLoading = state => state.location.isLoading;\nexport const selectlocationError = state => state.location.error;\n","import styled from '@emotion/styled';\n\nimport locationPageChooseLocationBG_1 from '../../../../shared/images/locationPageChooseLocationBG_1.png';\nimport locationPageChooseLocationBG_2 from '../../../../shared/images/locationPageChooseLocationBG_2.png';\nimport locationPageChooseLocationBG_3 from '../../../../shared/images/locationPageChooseLocationBG_3.png';\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n\n  height: 300px;\n  width: 1000px;\n  border: solid 1px ${({ theme }) => theme.primary};\n  border-radius: 5px;\n\n  & .location-card1 {\n    background-image: url(${locationPageChooseLocationBG_1});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  & .location-card2 {\n    background-image: url(${locationPageChooseLocationBG_2});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  & .location-card3 {\n    background-image: url(${locationPageChooseLocationBG_3});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  & .location-card {\n    flex: 1;\n    height: 100%;\n    border-right: solid 1px ${({ theme }) => theme.primary};\n\n    & h2 {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      height: 75px;\n\n      border-bottom: solid 1px ${({ theme }) => theme.primary};\n\n      font-size: 30px;\n      font-weight: 600;\n      background-color: ${({ theme }) => theme.primary};\n    }\n\n    & h3 {\n      position: relative;\n      top: -15px;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      margin-left: auto;\n      margin-right: auto;\n      padding: 10px;\n\n      width: 400px;\n      height: 70px;\n\n      text-align: center;\n      font-size: 22px;\n      font-weight: 600;\n\n      background-color: #a3a3a3;\n      border-radius: 5px;\n    }\n\n    & .location-card__details {\n      margin-left: auto;\n      margin-right: auto;\n\n      width: 400px;\n      /* height: 225px; */\n\n      background-color: ${({ theme }) => theme.bgPrimaryTransparent};\n    }\n    & p {\n      padding: 10px;\n      font-size: 18px;\n      font-weight: 600;\n    }\n  }\n\n  & .location-choose {\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n\n    height: 100%;\n\n    background-color: ${({ theme }) => theme.primary};\n\n    & button {\n      width: 250px;\n      height: 70px;\n\n      font-size: 20px;\n      /* text-transform: uppercase; */\n\n      border-radius: 5px;\n    }\n\n    & p {\n      text-align: center;\n      font-size: 24px;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getLocationById } from 'redux/location/thunks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectlocation } from 'redux/location/selectors';\nimport { StyledDiv } from './LocationPicker.styled';\nimport { getRandomLocation } from 'shared/utils/getRandomLocation';\nimport sprite from '../../../../shared/icons/sprite.svg';\n\nexport const LocationPicker = () => {\n  const [locationID, setLocationID] = useState(1);\n  const [backgroundNum, setBackgroundNum] = useState(1);\n  const dispatch = useDispatch();\n  const location = useSelector(selectlocation);\n\n  // Random button click\n  const handleRandomBtn = () => {\n    const rndLocationID = getRandomLocation();\n    setLocationID(rndLocationID);\n\n    //   for card background\n    const rndbackgroundNum = Math.floor(Math.random() * 3) + 1;\n    setBackgroundNum(rndbackgroundNum);\n  };\n\n  useEffect(() => {\n    dispatch(getLocationById(locationID));\n  }, [dispatch, locationID]);\n\n  return (\n    <StyledDiv>\n      <div className={`location-card location-card${backgroundNum}`}>\n        <h2>Location Data</h2>\n        {location !== null && (\n          <div className=\"location-card__details\">\n            <h3>{location.name}</h3>\n\n            <p>Dimension: {location.dimension}</p>\n            <p>Type: {location.type}</p>\n            <p>Number of residents: {location.residents.length}</p>\n          </div>\n        )}\n      </div>\n      <div className=\"location-choose\">\n        <svg width=\"100\" height=\"100\">\n          <use href={`${sprite}#icons8-rick-sanchez`} />\n        </svg>\n        <p>Yeah, just go to the random location ...whatever</p>\n\n        <button type=\"button\" onClick={handleRandomBtn}>\n          Random location\n        </button>\n      </div>\n    </StyledDiv>\n  );\n};\n","export const getRandomLocation = () => {\n  const LOCATION_NUMBER = 126;\n  const rndLocationID = Math.floor(Math.random() * LOCATION_NUMBER) + 1;\n  return rndLocationID;\n};\n","export const selectLocationsInfo = state => state.locations.info;\nexport const selectLocationsItems = state => state.locations.items;\nexport const selectLocationsIsLoading = state => state.locations.isLoading;\nexport const selectLocationsError = state => state.locations.error;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nconst getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 26%;\n  left: 6%;\n\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n  height: 60px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.secondaryTransparent};\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  padding-left: 22px;\n\n  &.location-card__name {\n    font-size: 30px;\n  }\n`;\n\nexport const Description = styled.div`\n  display: flex;\n`;\n\nexport const Infobox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Number = styled.div`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Description,\n  Img,\n  Infobox,\n  Name,\n  Number,\n  StyledLink,\n  Wrap,\n} from './LocationCard.styled';\nimport { home } from 'shared/constants/routes';\nimport image from '../../../../shared/images/locationCard.jpg';\nimport { useDispatch } from 'react-redux';\n\nexport const LocationCard = ({ location, resident }) => {\n  const [residentImage, setResidentImage] = useState(image);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (resident) {\n      const residentID = resident.slice(42);\n      const img = `https://rickandmortyapi.com/api/character/avatar/${residentID}.jpeg`;\n      setResidentImage(img);\n    }\n  }, [dispatch, resident]);\n\n  return (\n    <StyledLink to={home}>\n      <Description>\n        <Img\n          src={residentImage}\n          width=\"289\"\n          height=\"289\"\n          alt=\"location\"\n          loading=\"lazy\"\n        />\n        <Infobox>\n          <Name className=\"location-card__name\">{location.name}</Name>\n          <Name>Type: {location.type}</Name>\n          <Name>Dimension: {location.dimension}</Name>\n          <Name>Number of residents: {location.residents.length}</Name>\n        </Infobox>\n      </Description>\n\n      <Wrap>\n        <Number>{location.id}</Number>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH2 = styled.h2`\n  margin-bottom: 30px;\n\n  text-align: center;\n  font-size: 40px;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  margin-bottom: 30px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLocationsInfo,\n  selectLocationsItems,\n} from 'redux/locations/selectors';\nimport { getLocations } from 'redux/locations/thunks';\nimport { LocationCard } from '../LocationCard/LocationCard';\nimport { Pagination } from 'shared/components/Pagination';\nimport { StyledH2, StyledUl } from './LocationsList.styled';\n\nexport const LocationsList = () => {\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n  const locations = useSelector(selectLocationsItems);\n  const locationsInfo = useSelector(selectLocationsInfo);\n\n  useEffect(() => {\n    dispatch(getLocations(page));\n  }, [dispatch, page]);\n\n  return (\n    <>\n      <StyledH2>All locations</StyledH2>\n      <StyledUl>\n        {locations !== null &&\n          locations.map(location => (\n            <li key={location.id}>\n              <LocationCard\n                location={location}\n                resident={location.residents[0]}\n              />\n            </li>\n          ))}\n      </StyledUl>\n      {locationsInfo && (\n        <Pagination\n          page={page}\n          totalPages={locationsInfo.pages}\n          onPageChange={setPage}\n        />\n      )}\n    </>\n  );\n};\n","import { Container } from 'shared/styles/components/Container.styled';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { StyledH1 } from './Locations.styled';\nimport { LocationPicker } from './components/LocationPicker/LocationPicker';\nimport { LocationsList } from './components/LocationsList/LocationsList';\n\nexport const Locations = () => {\n  return (\n    <>\n      <Section>\n        <Container>\n          <StyledH1>Locations</StyledH1>\n          <LocationPicker />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          <LocationsList />\n        </Container>\n      </Section>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { Locations } from 'modules/Locations';\n\nconst LocationPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Locations</title>\n      </Helmet>\n      <Locations />\n    </>\n  );\n};\n\nexport default LocationPage;\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const IconArrowButton = styled.button`\n  position: relative;\n\n  padding: 16px;\n\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.bgPrimary};\n  transition: backgrond-color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.bgcHoverFocus};\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    cursor: auto;\n    background-color: transparent;\n  }\n`;\n\nexport const LabelButton = styled.button`\n  position: relative;\n  z-index: 1;\n\n  background-color: transparent;\n  color: ${({ currentPage }) => (currentPage ? '#fff' : 'inherit')};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.bgPrimary};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: -1;\n\n    padding: 16px;\n\n    border-radius: 50%;\n    background-color: ${({ theme, currentPage }) =>\n      currentPage ? theme.paginationAccent : theme.bgPrimary};\n    transition: backgrond-color 250ms ${({ theme }) => theme.cubic};\n  }\n\n  &:hover::before,\n  &:focus::before {\n    background-color: ${({ theme }) => theme.bgcHoverFocus};\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 1px;\n\n  fill: transparent;\n  stroke: ${({ theme }) => theme.paginationAccent};\n  transition: stroke 100ms ${({ theme }) => theme.cubic};\n\n  ${IconArrowButton}:disabled & {\n    stroke: ${({ theme }) => theme.bgcHoverFocus};\n  }\n\n  ${IconArrowButton}:hover &, ${IconArrowButton}:focus  & {\n    stroke: ${({ theme }) => theme.bgPrimary};\n  }\n\n  ${IconArrowButton}:disabled:hover & ,${IconArrowButton}:disabled:focus {\n    stroke: ${({ theme }) => theme.bgcHoverFocus};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport sprite from 'shared/icons/sprite.svg';\nimport { IconArrowButton, LabelButton, List, Svg } from './Pagination.styled';\nimport { getPaginationLabels } from 'shared/utils/getPaginationLabels';\n\nexport const Pagination = ({ page, totalPages, onPageChange }) => {\n  const [labels, setLabels] = useState([]);\n\n  const handlePageSelectClick = selectedPage => {\n    if (selectedPage === page) return;\n    onPageChange(selectedPage);\n  };\n\n  useEffect(() => {\n    getPaginationLabels({ setLabels, totalPages, page });\n  }, [page, totalPages]);\n\n  return (\n    <List>\n      <li>\n        <IconArrowButton\n          onClick={() => handlePageSelectClick(page - 1)}\n          disabled={page === 1}\n          type=\"button\"\n        >\n          <Svg width=\"20\" height=\"20\">\n            <use href={`${sprite}#icon-arrow-left-small`} />\n          </Svg>\n        </IconArrowButton>\n      </li>\n      {labels.map((label, index) => (\n        <li key={index}>\n          {typeof label === 'number' ? (\n            <LabelButton\n              onClick={() => handlePageSelectClick(label)}\n              type=\"button\"\n              currentPage={page === label}\n            >\n              {label}\n            </LabelButton>\n          ) : (\n            <span>...</span>\n          )}\n        </li>\n      ))}\n      <li>\n        <IconArrowButton\n          onClick={() => handlePageSelectClick(page + 1)}\n          disabled={page === totalPages}\n          type=\"button\"\n        >\n          <Svg width=\"20\" height=\"20\">\n            <use href={`${sprite}#icon-arrow-right-small`} />\n          </Svg>\n        </IconArrowButton>\n      </li>\n    </List>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","export const getPaginationLabels = ({ setLabels, totalPages, page }) => {\n  if (totalPages <= 7)\n    return setLabels(Array.from({ length: totalPages }, (_, i) => i + 1));\n  if (page <= 4) {\n    return setLabels([\n      ...Array.from({ length: 5 }, (_, i) => i + 1),\n      '',\n      totalPages,\n    ]);\n  }\n  if (page > totalPages - 5) {\n    return setLabels([\n      1,\n      '',\n      ...Array.from({ length: 5 }, (_, i) => totalPages - i).reverse(),\n    ]);\n  }\n  setLabels([1, '', page - 1, page, page + 1, '', totalPages]);\n};\n","const CHARACTER_STATUS = {\n  alive: 'Alive',\n  dead: 'Dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","import styled from '@emotion/styled';\nimport locationPageBackground from '../../images/locationPageBackground.png';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  /* &.location-page {\n    background: url(${locationPageBackground});\n  } */\n`;\n"],"names":["StyledH1","styled","selectlocation","state","location","item","StyledDiv","theme","primary","locationPageChooseLocationBG_1","locationPageChooseLocationBG_2","locationPageChooseLocationBG_3","bgPrimaryTransparent","LocationPicker","useState","locationID","setLocationID","backgroundNum","setBackgroundNum","dispatch","useDispatch","useSelector","useEffect","getLocationById","className","name","dimension","type","residents","length","width","height","href","sprite","onClick","rndLocationID","Math","floor","random","rndbackgroundNum","selectLocationsInfo","locations","info","selectLocationsItems","items","getStatus","marker","alive","dead","unknown","StyledLink","Link","Img","Wrap","secondaryTransparent","Name","Description","Infobox","Number","LocationCard","resident","image","residentImage","setResidentImage","residentID","slice","img","to","home","src","alt","loading","id","StyledH2","StyledUl","LocationsList","page","setPage","locationsInfo","getLocations","map","Pagination","totalPages","pages","onPageChange","Locations","List","IconArrowButton","bgPrimary","cubic","bgcHoverFocus","LabelButton","currentPage","paginationAccent","Svg","labels","setLabels","handlePageSelectClick","selectedPage","Array","from","_","i","reverse","getPaginationLabels","disabled","label","index","Section","locationPageBackground"],"sourceRoot":""}