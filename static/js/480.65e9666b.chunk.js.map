{"version":3,"file":"static/js/480.65e9666b.chunk.js","mappings":"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","sources":["redux/locations/selectors.js","hooks/useLocations.js","redux/location/selectors.js","hooks/useOneLocation.js","modules/Locations/components/LocationCard/LocationCard.styled.jsx","modules/Locations/components/LocationCard/LocationCard.jsx","modules/Locations/Locations.styled.jsx","modules/Locations/components/LocationInfo/LocationInfo.styled.jsx","modules/Locations/components/LocationInfo/LocationInfo.jsx","modules/Locations/components/LocationPicker/LocationPicker.styled.jsx","modules/Locations/components/LocationPicker/LocationPicker.jsx","modules/Locations/components/LocationsList/LocationsList.styled.jsx","modules/Locations/components/LocationsList/LocationsList.jsx","modules/Locations/components/FilterLocation/schema.js","modules/Locations/components/FilterLocation/FilterLocation.styled.jsx","modules/Locations/components/FilterLocation/inputs.js","modules/Locations/components/FilterLocation/FilterLocation.jsx","modules/Locations/Locations.jsx","pages/LocationsPage/LocationsPage.jsx","shared/constants/characterStatus.js","shared/utils/getRandomLocation.js","shared/utils/getStatus.js"],"sourcesContent":["export const selectLocationsInfo = state => state.locations.info;\nexport const selectLocationsItems = state => state.locations.items;\nexport const selectLocationsIsLoading = state => state.locations.isLoading;\nexport const selectLocationsError = state => state.locations.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavLocationsIds } from 'redux/library/selectors';\nimport {\n  selectLocationsError,\n  selectLocationsInfo,\n  selectLocationsIsLoading,\n  selectLocationsItems,\n} from 'redux/locations/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectLocationsWithIsFav = createSelector(\n  [selectLocationsItems, selectFavLocationsIds],\n  addIsFavouriteToList\n);\n\nexport const useLocations = () => {\n  const info = useSelector(selectLocationsInfo);\n  const locations = useSelector(selectLocationsWithIsFav);\n  const isLoading = useSelector(selectLocationsIsLoading);\n  const error = useSelector(selectLocationsError);\n\n  return {\n    info,\n    locations,\n    isLoading,\n    error,\n  };\n};\n","export const selectLocation = state => state.location.item;\nexport const selectLocationIsLoading = state => state.location.isLoading;\nexport const selectLocationError = state => state.location.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavLocationsIds } from 'redux/library/selectors';\nimport {\n  selectLocation,\n  selectLocationError,\n  selectLocationIsLoading,\n} from 'redux/location/selectors';\nimport { addIsFavouriteToItem } from 'shared/utils/addIsFavourite';\n\nconst selectLocationWithIsFav = createSelector(\n  [selectLocation, selectFavLocationsIds],\n  addIsFavouriteToItem\n);\n\nexport const useOneLocation = () => {\n  const location = useSelector(selectLocationWithIsFav);\n  const isLoading = useSelector(selectLocationIsLoading);\n  const error = useSelector(selectLocationError);\n\n  return {\n    location,\n    isLoading,\n    error,\n  };\n};\n","import styled from '@emotion/styled';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\nimport { getStatus } from 'shared/utils/getStatus';\n\nexport const StyledDiv = styled.div`\n  position: relative;\n\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 26%;\n  left: 6%;\n\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  border-radius: 5px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 278px;\n    height: 278px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    width: 289px;\n    height: 289px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n\n  transition: ${({ theme }) => theme.cubic} 250ms;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media screen and (min-width: ${mobile}) {\n    position: relative;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    position: absolute;\n  }\n\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n  height: 60px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.secondaryTransparent};\n`;\n\nexport const Name = styled.p`\n  padding-left: 22px;\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n\n  @media screen and (min-width: ${mobile}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 20px;\n  }\n\n  & span {\n    display: inline;\n    margin-left: 7px;\n\n    font-weight: 900;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n\n    @media screen and (min-width: ${mobile}) {\n      font-size: 18px;\n    }\n\n    @media screen and (min-width: ${tablet}) {\n      font-size: 24px;\n    }\n  }\n\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.25px;\n\n  &.location-card__name {\n    font-size: 26px;\n    margin-bottom: 30px;\n    margin-top: 20px;\n    margin-right: 5px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: flex;\n\n  @media screen and (min-width: ${mobile}) {\n    flex-direction: column;\n    height: 530px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    height: 289px;\n  }\n`;\n\nexport const Infobox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Number = styled.div`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const ResidentsButton = styled.button`\n  position: absolute;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.bgPrimary};\n\n  background-color: ${({ theme }) => theme.crossThemeAccent};\n\n  border-radius: 5px;\n  transition: clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  clip-path: polygon(\n    12% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    88% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:hover {\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n    color: ${({ theme }) => theme.secondary};\n  }\n\n  @media screen and (min-width: ${mobile}) {\n    z-index: 1;\n    bottom: -15%;\n    left: 31%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 160px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    z-index: 1;\n    bottom: -7%;\n    left: 20%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 200px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    bottom: 35%;\n    left: 85%;\n    transform: translate(-50%, -50%);\n    height: 70px;\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport image from 'shared/images/locationCard.jpg';\nimport { useDispatch } from 'react-redux';\nimport { favlocations } from 'shared/constants/libaryListName';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  ImgWrap,\n  Infobox,\n  Name,\n  Number,\n  ResidentsButton,\n  StyledDiv,\n  Wrap,\n} from './LocationCard.styled';\n\nexport const LocationCard = ({ location, resident, showResidentsBtn }) => {\n  const [residentImage, setResidentImage] = useState(image);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (resident) {\n      const residentID = resident.slice(42);\n      const img = `https://rickandmortyapi.com/api/character/avatar/${residentID}.jpeg`;\n      setResidentImage(img);\n    }\n  }, [dispatch, resident]);\n\n  return (\n    <StyledDiv>\n      <Description>\n        <ImgWrap>\n          <Img\n            src={residentImage}\n            width=\"289\"\n            height=\"289\"\n            alt=\"location\"\n            loading=\"lazy\"\n          />\n        </ImgWrap>\n        <Infobox>\n          <Name className=\"location-card__name\">{location.name}</Name>\n          <Name>\n            Type: <span>{location.type}</span>\n          </Name>\n          <Name>\n            Dimension: <span>{location.dimension}</span>\n          </Name>\n          <Name>\n            Number of residents: <span>{location.residents.length}</span>\n          </Name>\n        </Infobox>\n        {showResidentsBtn && (\n          <ResidentsButton type=\"button\">Residents</ResidentsButton>\n        )}\n      </Description>\n      <Wrap>\n        <Number>#{location.id}</Number>\n      </Wrap>\n      <HeartWrap isFavourite={location.isFavourite}>\n        <Heart\n          id={location.id}\n          isFavourite={location.isFavourite}\n          libraryListName={favlocations}\n        />\n      </HeartWrap>\n    </StyledDiv>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import styled from '@emotion/styled/macro';\nimport { Svg } from 'shared/components/Heart/Heart.styled';\nimport { desktop, mobile } from 'shared/constants/deviceSizes';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const StyledH3 = styled.h3`\n  position: relative;\n  top: -15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n\n  width: 400px;\n  height: 70px;\n\n  text-align: center;\n  font-size: 22px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textPrimary};\n\n  background-color: #a3a3a3;\n  border-radius: 5px;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 250px;\n  }\n`;\n\nexport const Detail = styled.p`\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textPrimary};\n\n  & span {\n    display: inline;\n    font-weight: 900;\n    font-size: 20px;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: -19px;\n  right: -8px;\n\n  width: fit-content;\n  height: fit-content;\n\n  @media screen and (min-width: ${desktop}) {\n    top: 3px;\n    right: 0px;\n  }\n\n  & ${Svg} {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n\n    @media screen and (max-width: ${desktop}) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n","import { favlocations } from 'shared/constants/libaryListName';\nimport { Detail, HeartWrap, StyledH3 } from './LocationInfo.styled';\nimport { Heart } from 'shared/components/Heart';\n\nexport const LocationInfo = ({ location }) => {\n  const { id, name, dimension, type, residents, isFavourite } = location;\n\n  return (\n    <>\n      <StyledH3>{name}</StyledH3>\n      <Detail>\n        Dimension:\n        <span> {dimension}</span>\n      </Detail>\n      <Detail>\n        Type:<span> {type}</span>\n      </Detail>\n      <Detail>\n        Number of residents:\n        <span> {residents.length}</span>\n      </Detail>\n      <HeartWrap isFavourite={isFavourite}>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favlocations}\n        />\n      </HeartWrap>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\n\nimport locationPageChooseLocationBG_1 from '../../../../shared/images/locationPageChooseLocationBG_1.png';\nimport locationPageChooseLocationBG_2 from '../../../../shared/images/locationPageChooseLocationBG_2.png';\nimport locationPageChooseLocationBG_3 from '../../../../shared/images/locationPageChooseLocationBG_3.png';\nimport {\n  CardDecoration,\n  CardWrap,\n} from 'shared/styles/components/CardDecoration.styled';\n\nexport const LocationsDecor = styled(CardDecoration)`\n  @media screen and (min-width: ${mobile}) {\n    width: 100%;\n    height: 605px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    width: 707px;\n    height: 350px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    height: 330px;\n    width: 1000px;\n  }\n`;\n\nexport const StyledDiv = styled(CardWrap)`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column-reverse;\n\n  margin: 20px auto 0;\n\n  &.random-location {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n  }\n\n  background: ${({ theme }) => theme.bgCharacterCard};\n  clip-path: polygon(10% 0, 100% 0, 100% 95.4%, 90% 100%, 0 100%, 0 4.6%);\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    clip-path: polygon(4% 0, 100% 0, 100% 92.3%, 96.3% 100%, 0 100%, 0 8%);\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    clip-path: polygon(2.8% 0, 100% 0, 100% 91.4%, 97.2% 100%, 0 100%, 0 8.5%);\n  }\n`;\n\nexport const LocationCard = styled.div`\n  position: relative;\n\n  flex: 1;\n  width: 100%;\n  height: 100%;\n\n  border-right: solid 3px ${({ theme }) => theme.accentTransparent};\n\n  &.location-card1 {\n    background-image: url(${locationPageChooseLocationBG_1});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  &.location-card2 {\n    background-image: url(${locationPageChooseLocationBG_2});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  &.location-card3 {\n    background-image: url(${locationPageChooseLocationBG_3});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 75px;\n\n  border-bottom: solid 1px ${({ theme }) => theme.accentTransparent};\n\n  font-size: 30px;\n  font-weight: 600;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const LocationCardDetails = styled.div`\n  position: relative;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: ${({ theme }) => theme.bgPrimaryTransparent};\n\n  transition: transform 300ms ${({ theme }) => theme.cubic},\n    background-color 300ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${mobile}) {\n    width: 250px;\n    height: 250px;\n    &:hover {\n      background-color: ${({ theme }) => theme.bgPrimary};\n    }\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    border-radius: 10px;\n\n    &:hover {\n      transform: scale(1.02);\n      background-color: ${({ theme }) => theme.bgPrimary};\n    }\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    width: 400px;\n    height: 220px;\n  }\n`;\n\nexport const LocationChoose = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  @media screen and (max-width: ${tablet}) {\n    flex-basis: 230px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex: 1;\n    gap: 20px;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  text-align: center;\n  font-size: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 24px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { getLocationById } from 'redux/location/thunks';\nimport { useDispatch } from 'react-redux';\n\nimport { LocationInfo } from '../LocationInfo/LocationInfo';\nimport {\n  LocationCard,\n  LocationCardDetails,\n  StyledDiv,\n  StyledH2,\n  LocationChoose,\n  Paragraph,\n  LocationsDecor,\n} from './LocationPicker.styled';\nimport { getRandomLocation } from 'shared/utils/getRandomLocation';\nimport { RandomButton } from 'shared/components/RandomButton';\nimport { CardLoader } from 'shared/components/CardLoader/CardLoader';\nimport { useOneLocation } from 'hooks/useOneLocation';\nimport { Link, useLocation } from 'react-router-dom';\nimport { locations } from 'shared/constants/routes';\nimport { addToLibrary } from 'redux/library/slice';\nimport { randomlocations } from 'shared/constants/libaryListName';\nimport sprite from 'shared/icons/sprite.svg';\nimport randomSound from 'shared/audio/teleport-sound-2.mp3';\n\nconst audio = new Audio(randomSound);\n\nconst FIRST_LOCATION_ID = 1;\n\nexport const LocationPicker = () => {\n  const [backgroundNum, setBackgroundNum] = useState(1);\n  const dispatch = useDispatch();\n  const { location, isLoading, error } = useOneLocation();\n  const [locationID, setLocationID] = useState(\n    location?.id ?? FIRST_LOCATION_ID\n  );\n  const locationPath = useLocation();\n\n  // Random button click\n  const handleRandomBtn = () => {\n    audio.play();\n\n    const rndLocationID = getRandomLocation();\n    setLocationID(rndLocationID);\n\n    //   for card background\n    const rndbackgroundNum = Math.floor(Math.random() * 3) + 1;\n    setBackgroundNum(rndbackgroundNum);\n  };\n\n  useEffect(() => {\n    dispatch(getLocationById(locationID));\n    dispatch(\n      addToLibrary({ libraryListName: randomlocations, id: locationID })\n    );\n  }, [dispatch, locationID]);\n\n  const shouldShowLocation = location !== null && !isLoading && !error;\n\n  return (\n    <LocationsDecor>\n      <StyledDiv className=\"random-location\">\n        <LocationCard className={`location-card${backgroundNum}`}>\n          <StyledH2>Location Data</StyledH2>\n          {isLoading && <CardLoader />}\n          {shouldShowLocation && (\n            <LocationCardDetails>\n              <Link\n                to={`/${locations}/${location.id}`}\n                state={{ from: locationPath }}\n              >\n                <LocationInfo location={location} />\n              </Link>\n            </LocationCardDetails>\n          )}\n        </LocationCard>\n        <LocationChoose className=\"location-choose\">\n          <svg width=\"100\" height=\"100\">\n            <use href={`${sprite}#icons8-rick-sanchez`} />\n          </svg>\n          <Paragraph>\n            Yeah, just go to the random location ...whatever\n          </Paragraph>\n          <RandomButton\n            className=\"locationBtn\"\n            type=\"button\"\n            onClick={handleRandomBtn}\n            isLoading={isLoading}\n          >\n            Random location\n          </RandomButton>\n        </LocationChoose>\n      </StyledDiv>\n    </LocationsDecor>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledH2 = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  margin-bottom: 30px;\n  margin-top: 40px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: inherit;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getLocationsByFilter } from 'redux/locations/thunks';\nimport { LocationCard } from '../LocationCard/LocationCard';\nimport { Pagination } from 'shared/components/Pagination';\nimport { StyledH2, StyledLink, StyledUl } from './LocationsList.styled';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useLocations } from 'hooks/useLocations';\nimport { Loader } from 'shared/components/Loader';\nimport { getSearchValues } from 'shared/utils/getSearchValues';\nimport { locations as locationsRoute } from 'shared/constants/routes';\nimport { Error } from 'shared/components/Error';\nimport { notfound, oops } from 'shared/constants/errorText';\n\nexport const PARAMS_ARR = ['name', 'type', 'dimension'];\n\nexport const LocationsList = () => {\n  const [showList, setShowList] = useState(false);\n  const [searchParams] = useSearchParams();\n  const locationPath = useLocation();\n  const { info, locations, error, isLoading } = useLocations();\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n\n  const showResidentsBtn = true;\n\n  useEffect(() => {\n    setPage(1);\n  }, [searchParams]);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      await dispatch(\n        getLocationsByFilter({\n          page,\n          ...getSearchValues(PARAMS_ARR, searchParams),\n        })\n      ).unwrap();\n      setShowList(true);\n    };\n\n    getInfo();\n  }, [dispatch, page, searchParams]);\n\n  const shouldRenderList = locations.length > 0 && !error && showList;\n  const shouldShowError = !isLoading && error && error.status !== 404;\n  const shouldShowNotFoundError = !isLoading && error && error.status === 404;\n  const shouldRenderPagination =\n    !error && locations.length > 0 && info?.pages > 1;\n\n  return (\n    <>\n      <StyledH2>All locations</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList && (\n        <StyledUl>\n          {locations.map(location => (\n            <li key={location.id}>\n              <StyledLink\n                to={`/${locationsRoute}/${location.id}`}\n                state={{ from: locationPath }}\n              >\n                <LocationCard\n                  location={location}\n                  resident={location.residents[0]}\n                  showResidentsBtn={showResidentsBtn}\n                />\n              </StyledLink>\n            </li>\n          ))}\n        </StyledUl>\n      )}\n      {shouldRenderPagination && (\n        <Pagination\n          totalPages={info.pages}\n          onPageChange={setPage}\n          page={page}\n        />\n      )}\n      {shouldShowError && <Error text={oops} />}\n      {shouldShowNotFoundError && <Error text={notfound} />}\n    </>\n  );\n};\n","import { message, regex } from 'shared/constants/searchInput';\nimport * as Yup from 'yup';\n\nexport const schema = Yup.object({\n  name: Yup.string().matches(regex, {\n    message: message,\n    excludeEmptyString: true,\n  }),\n  type: Yup.string().matches(regex, {\n    message: message,\n    excludeEmptyString: true,\n  }),\n  dimension: Yup.string().matches(regex, {\n    message: message,\n    excludeEmptyString: true,\n  }),\n});\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const StyledDiv = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n\n  @media (min-width: ${tablet}) {\n    flex-direction: row;\n  }\n`;\n\nexport const Item = styled.li`\n  @media (min-width: ${tablet}) {\n    flex-basis: calc((100% - 2 * 10px) / 3);\n  }\n\n  & input {\n    @media (min-width: ${tablet}) and (max-width: ${desktop}) {\n      width: 100%;\n    }\n  }\n`;\n","const { nanoid } = require('@reduxjs/toolkit');\n\nexport const inputs = ['name', 'type', 'dimesion'];\n\nexport const filedsArr = [\n  { id: nanoid(), inputName: 'name', placeholder: 'Filter by name...' },\n  { id: nanoid(), inputName: 'type', placeholder: 'Filter by type...' },\n  { id: nanoid(), inputName: 'dimesion', placeholder: 'Filter by dimesion...' },\n];\n","import debounce from 'lodash.debounce';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useSearchParams } from 'react-router-dom';\nimport { schema } from './schema';\nimport { SearchInput } from 'shared/components/SearchInput';\nimport { Item, StyledDiv } from './FilterLocation.styled';\nimport { getSearchValues } from 'shared/utils/getSearchValues';\nimport { getCleanValues } from 'shared/utils/getCleanValues';\nimport { inputs, filedsArr } from './inputs';\n\nconst DELAY = 500;\n\nexport const FilterLocation = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {\n    register,\n    formState: { errors },\n  } = useForm({\n    defaultValues: getSearchValues(inputs, searchParams),\n    resolver: yupResolver(schema),\n    mode: 'onChange',\n  });\n\n  const handleSearch = debounce(async ({ target }) => {\n    if (target.value.trim() === '') {\n      searchParams.delete(target.name);\n      setSearchParams(searchParams);\n      return;\n    }\n    if (errors[target.name]) return;\n    setSearchParams({\n      ...getCleanValues(getSearchValues(inputs, searchParams)),\n      [target.name]: target.value,\n    });\n  }, DELAY);\n\n  return (\n    <StyledDiv>\n      {filedsArr.map(({ id, inputName, placeholder }) => (\n        <Item key={id}>\n          <SearchInput\n            id={id}\n            inputName={inputName}\n            register={register}\n            errors={errors}\n            onChange={handleSearch}\n            placeholder={placeholder}\n          />\n        </Item>\n      ))}\n    </StyledDiv>\n  );\n};\n","import { Container } from 'shared/styles/components/Container.styled';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { StyledH1 } from './Locations.styled';\nimport { LocationPicker } from './components/LocationPicker/LocationPicker';\nimport { LocationsList } from './components/LocationsList/LocationsList';\nimport { FilterLocation } from './components/FilterLocation/FilterLocation';\n\nexport const Locations = () => {\n  return (\n    <>\n      <Section>\n        <Container>\n          <StyledH1>Locations</StyledH1>\n          <LocationPicker />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          <FilterLocation />\n          <LocationsList />\n        </Container>\n      </Section>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { Locations } from 'modules/Locations';\n\nconst LocationPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Locations</title>\n      </Helmet>\n      <Locations />\n    </>\n  );\n};\n\nexport default LocationPage;\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","export const getRandomLocation = () => {\n  const LOCATION_NUMBER = 126;\n  const rndLocationID = Math.floor(Math.random() * LOCATION_NUMBER) + 1;\n  return rndLocationID;\n};\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n"],"names":["selectLocationsInfo","state","locations","info","selectLocationsIsLoading","isLoading","selectLocationsError","error","selectLocationsWithIsFav","createSelector","items","selectFavLocationsIds","addIsFavouriteToList","useLocations","useSelector","selectLocationIsLoading","location","selectLocationError","selectLocationWithIsFav","item","addIsFavouriteToItem","useOneLocation","StyledDiv","styled","theme","cubic","ImgWrap","getStatus","mobile","tablet","Img","Wrap","secondaryTransparent","Name","characterCardTextAccent","Description","Infobox","Number","ResidentsButton","bgPrimary","crossThemeAccent","disabled","secondary","desktop","HeartWrap","getHeartColor","LocationCard","resident","showResidentsBtn","useState","image","residentImage","setResidentImage","dispatch","useDispatch","useEffect","residentID","slice","img","src","width","height","alt","loading","className","name","type","dimension","residents","length","id","isFavourite","Heart","libraryListName","favlocations","StyledH1","StyledH3","textPrimary","Detail","Svg","LocationInfo","LocationsDecor","CardDecoration","CardWrap","bgCharacterCard","accentTransparent","locationPageChooseLocationBG_1","locationPageChooseLocationBG_2","locationPageChooseLocationBG_3","StyledH2","LocationCardDetails","bgPrimaryTransparent","LocationChoose","Paragraph","audio","Audio","randomSound","LocationPicker","backgroundNum","setBackgroundNum","locationID","setLocationID","locationPath","useLocation","getLocationById","addToLibrary","randomlocations","shouldShowLocation","CardLoader","to","from","href","sprite","RandomButton","onClick","play","rndLocationID","getRandomLocation","rndbackgroundNum","Math","floor","random","StyledUl","StyledLink","Link","PARAMS_ARR","LocationsList","showList","setShowList","useSearchParams","searchParams","page","setPage","getInfo","getLocationsByFilter","getSearchValues","unwrap","shouldRenderList","shouldShowError","status","shouldShowNotFoundError","shouldRenderPagination","pages","Loader","map","locationsRoute","Pagination","totalPages","onPageChange","Error","text","oops","notfound","schema","Yup","matches","regex","message","excludeEmptyString","Item","nanoid","require","inputs","filedsArr","inputName","placeholder","FilterLocation","setSearchParams","useForm","defaultValues","resolver","yupResolver","mode","register","errors","formState","handleSearch","debounce","target","value","trim","delete","getCleanValues","SearchInput","onChange","Locations","alive","dead","unknown","marker"],"sourceRoot":""}