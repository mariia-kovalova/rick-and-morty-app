{"version":3,"file":"static/js/206.247438b9.chunk.js","mappings":"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","sources":["redux/characters/selectors.js","hooks/useCharacters.js","redux/episode/selectors.js","hooks/useOneEpisode.js","shared/utils/spiecesNormalize.js","modules/Characters/components/CharacterCard/CharacterCard.styled.jsx","modules/Characters/components/CharacterCard/CharacterCard.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.styled.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.jsx","modules/Episodes/Episodes.styled.jsx","modules/Episodes/api.img/api.img.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.styled.jsx","shared/utils/episodeNameNormalize.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.jsx","modules/Episodes/components/Episode/Episode.style.jsx","modules/Episodes/components/Episode/Episode.jsx","pages/EpisodePage/EpisodePage.styled.jsx","pages/EpisodePage/EpisodePage.jsx","shared/components/CardLoader/CardLoader.styled.jsx","shared/components/CardLoader/CardLoader.jsx","shared/components/CardsList/CardsList.styled.jsx","shared/components/CardsList/CardsList.jsx","shared/components/Error/Error.styled.jsx","shared/components/Error/Error.jsx","shared/components/GoBackLink/GoBackLink.styled.jsx","shared/components/GoBackLink/GoBackLink.jsx","shared/components/Heart/Heart.styled.jsx","shared/components/Heart/Heart.jsx","shared/constants/characterStatus.js","shared/constants/errorText.js","shared/styles/components/CardDecoration.styled.jsx","shared/styles/components/Number.styled.jsx","shared/styles/components/Section.styled.jsx","shared/utils/addIsFavourite.js","shared/utils/getHeartColor.js","shared/utils/getRandomIndex.js","shared/utils/getStatus.js","shared/utils/nameNormalize.js"],"sourcesContent":["export const selectCharactersInfo = state => state.characters.info;\nexport const selectCharactersItems = state => state.characters.items;\nexport const selectCharactersIsLoading = state => state.characters.isLoading;\nexport const selectCharactersError = state => state.characters.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCharactersError,\n  selectCharactersInfo,\n  selectCharactersIsLoading,\n  selectCharactersItems,\n} from 'redux/characters/selectors';\nimport { selectFavCharactersIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectCharactersWithIsFav = createSelector(\n  [selectCharactersItems, selectFavCharactersIds],\n  addIsFavouriteToList\n);\n\nexport const useCharacters = () => {\n  const info = useSelector(selectCharactersInfo);\n  const characters = useSelector(selectCharactersWithIsFav);\n  const isLoading = useSelector(selectCharactersIsLoading);\n  const error = useSelector(selectCharactersError);\n\n  return {\n    info,\n    characters,\n    isLoading,\n    error,\n  };\n};\n","export const selectEpisode = state => state.episode.item;\nexport const selectEpisodeIsLoading = state => state.episode.isLoading;\nexport const selectEpisodeError = state => state.episode.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectEpisode,\n  selectEpisodeError,\n  selectEpisodeIsLoading,\n} from 'redux/episode/selectors';\nimport { selectFavEpisodesIds } from 'redux/library/selectors';\nimport { addIsFavouriteToItem } from 'shared/utils/addIsFavourite';\n\nconst selectEpisodeWithIsFav = createSelector(\n  [selectEpisode, selectFavEpisodesIds],\n  addIsFavouriteToItem\n);\n\nexport const useOneEpisode = () => {\n  const episode = useSelector(selectEpisodeWithIsFav);\n  const isLoading = useSelector(selectEpisodeIsLoading);\n  const error = useSelector(selectEpisodeError);\n\n  return {\n    episode,\n    isLoading,\n    error,\n  };\n};\n","export const spiecesNormalize = spieces => {\n  if (spieces.length <= 10) return spieces;\n  const start = spieces.slice(0, 5);\n  return `${start}...`;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Number } from 'shared/styles/components/Number.styled';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 0;\n\n  width: fit-content;\n  height: fit-content;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const Description = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-size: 35px;\n`;\n","import { characters } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { spiecesNormalize } from 'shared/utils/spiecesNormalize';\nimport { CharacterStatus } from '../CharacterStatus/CharacterStatus';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  MainInfo,\n  Name,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './CharacterCard.styled';\nimport { favcharacters } from 'shared/constants/libaryListName';\n\nexport const CharacterCard = props => {\n  const location = useLocation();\n  const { id, name, species, gender, status, image, isFavourite } = props;\n\n  return (\n    <StyledLink to={`/${characters}/${id}`} state={{ from: location }}>\n      <HeartWrap>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favcharacters}\n        />\n      </HeartWrap>\n      <Img src={image} width=\"289\" height=\"289\" alt={name} loading=\"lazy\" />\n      <Wrap>\n        <MainInfo>\n          <CharacterStatus status={status} />\n          <Name>{nameNormalize(name)}</Name>\n        </MainInfo>\n        <Description>\n          {spiecesNormalize(species)} | {gender}\n        </Description>\n        <StyledNumber>#{id}</StyledNumber>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { getStatus } from 'shared/utils/getStatus';\n\nconst beam = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Status = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n\n    animation: ${({ animate }) => (animate ? beam : 'none')} 1.5s ease-in-out\n      infinite;\n  }\n`;\n","import { Tooltip } from 'shared/components/ToolTip';\nimport { Status } from './CharacterStatus.styled';\n\nexport const CharacterStatus = ({ status, animate }) => {\n  return (\n    <Tooltip text={status}>\n      <Status marker={status} animate={animate} />\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const FlexUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextInfo = styled.div`\n  padding: 8px 10px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const BasicWrapper = styled.div`\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  width: 100%;\n`;\n","import epImg1 from '../../../shared/images/episode1.jpeg';\nimport epImg2 from '../../../shared/images/episode2.jpeg';\nimport epImg3 from '../../../shared/images/episode3.jpeg';\nimport epImg4 from '../../../shared/images/episode4.jpeg';\nimport epImg5 from '../../../shared/images/episode5.jpg';\nimport epImg6 from '../../../shared/images/episode6.jpeg';\nimport epImg7 from '../../../shared/images/episode7.jpeg';\nimport epImg8 from '../../../shared/images/episode8.jpeg';\nimport epImg9 from '../../../shared/images/episode9.jpeg';\nimport epImg10 from '../../../shared/images/episode10.jpg';\nimport epImg11 from '../../../shared/images/episode11.jpg';\nimport epImg12 from '../../../shared/images/episode12.jpg';\nimport epImg13 from '../../../shared/images/episode13.jpg';\nimport epImg14 from '../../../shared/images/episode14.jpg';\nimport epImg15 from '../../../shared/images/episode15.jpg';\nimport epImg16 from '../../../shared/images/episode16.jpg';\nimport epImg17 from '../../../shared/images/episode17.jpg';\n\nexport const images = [epImg1, epImg2, epImg3, epImg4, epImg5, epImg6, epImg7, epImg8, epImg9, epImg10, epImg11, epImg12, epImg13, epImg14, epImg15, epImg16, epImg17];\n","import styled from '@emotion/styled/macro';\nimport { FlexUl, TextInfo } from 'modules/Episodes/Episodes.styled';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const CradInfoText = styled(TextInfo)`\n  width: 230px;\n\n  color: ${({ theme }) => theme.characterCardTextAccent};\n  background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n  border: 2px solid ${({ theme }) => theme.characterCardTextAccent};\n  border-radius: 4px;\n\n  clip-path: polygon(\n    10% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    90% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.05);\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n  }\n`;\n\nexport const FlexInfo = styled(FlexUl)`\n  align-items: start;\n  gap: 10px;\n\n  & > li:first-of-type ${CradInfoText} {\n    width: 230px;\n    font-size: 18px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 270px;\n      font-size: 22px;\n    }\n  }\n\n  & > li:nth-of-type(2) ${CradInfoText} {\n    width: 200px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 230px;\n    }\n  }\n\n  & > li:last-of-type ${CradInfoText} {\n    width: 160px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 180px;\n    }\n  }\n`;\n","export const episodeNameNoramlize = episodeName => {\n  if (episodeName.length <= 15) return episodeName;\n  const start = episodeName.slice(0, 13);\n  return `${start}...`;\n};\n","import { useLocation } from 'react-router';\nimport { CradInfoText, FlexInfo } from './EpisodeCardInfo.styled';\nimport { episodeNameNoramlize } from 'shared/utils/episodeNameNormalize';\nimport { episodes } from 'shared/constants/routes';\n\nexport const EpisodeCardInfo = ({ episode }) => {\n  const location = useLocation();\n  const { id, name, episode: episodeCode, air_date } = episode;\n\n  const info = [\n    location.pathname === `/${episodes}/${id}`\n      ? name\n      : episodeNameNoramlize(name),\n    air_date,\n    episodeCode,\n  ];\n  return (\n    <FlexInfo className=\"random-episode episode-card episodes-page\">\n      {info.map(data => (\n        <li key={data}>\n          <CradInfoText>{data}</CradInfoText>\n        </li>\n      ))}\n    </FlexInfo>\n  );\n};\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\nimport { Number } from 'shared/styles/components/Number.styled';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nconst shine = keyframes`\n   0% {\n    background-position: -5px;\n  }\n  40%, 100% {\n    background-position: 208px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  z-index: 1;\n\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.1);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n\n    @media screen and (min-width: ${tablet}) {\n      left: -30%;\n      width: 585px;\n      height: 55px;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    z-index: -1;\n\n    width: 237px;\n    height: 133px;\n\n    background-color: rgba(81, 107, 107, 0.801);\n    border: 1px solid ${({ theme }) => theme.crossThemeAccent};\n    border-radius: 4px;\n    background: linear-gradient(\n        90deg,\n        rgba(255, 255, 255, 0) 20%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0) 70%\n      )\n      rgba(255, 255, 255, 0.384);\n    background-size: 200% 100%;\n    background-position-x: 180%;\n    animation: ${shine} 2s ${({ theme }) => theme.cubic} infinite;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 450px;\n      height: 253px;\n    }\n  }\n`;\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n\n  top: 53px;\n  left: 40px;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 75px;\n    left: 258px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    top: 0;\n    left: 123px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  top: 5px;\n  left: 10px;\n\n  font-size: 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  transition: color 250ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${tablet}) {\n    top: 5px;\n    left: -126px;\n    font-size: 30px;\n  }\n\n  a:hover & {\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 0;\n  right: 3%;\n  z-index: 1;\n\n  @media screen and (min-width: ${tablet}) {\n    top: 3%;\n    right: 3%;\n  }\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { useOneEpisode } from 'hooks/useOneEpisode';\nimport { EpisodeCardInfo } from '../EpisodCardInfo/EpisodeCardInfo';\nimport {\n  HeartWrap,\n  Img,\n  LoaderWrap,\n  StyledNumber,\n  Wrap,\n} from './Episode.style';\nimport { Heart } from 'shared/components/Heart';\nimport { favepisodes } from 'shared/constants/libaryListName';\nimport { CardLoader } from 'shared/components/CardLoader';\n\nexport const Episode = ({ image }) => {\n  const { episode, isLoading } = useOneEpisode();\n  const { id, isFavourite, name } = episode;\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderWrap>\n          <CardLoader />\n        </LoaderWrap>\n      ) : (\n        <Wrap>\n          <StyledNumber>\n            <span>Episode </span>#{id}\n          </StyledNumber>\n          <HeartWrap isFavourite={isFavourite}>\n            <Heart\n              id={id}\n              isFavourite={isFavourite}\n              libraryListName={favepisodes}\n            />\n          </HeartWrap>\n          <EpisodeCardInfo episode={episode} />\n          <Img src={image} alt={name} width=\"450\" height=\"200\" />\n        </Wrap>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport {\n  CardDecoration,\n  CardWrap,\n} from 'shared/styles/components/CardDecoration.styled';\n\nexport const EpisodeDecor = styled(CardDecoration)`\n  margin: 0 auto;\n`;\n\nexport const EpisodeWrap = styled(CardWrap)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: end;\n\n  @media screen and (min-width: ${tablet}) {\n    justify-content: center;\n  }\n\n  &::before {\n    top: -5px;\n    left: 13px;\n  }\n\n  &::after {\n    bottom: -5px;\n    right: 13px;\n  }\n\n  & + div::before {\n    @media screen and (min-width: ${tablet}) {\n      left: -11%;\n      width: 585px;\n      height: 55px;\n    }\n  }\n\n  & ul.episodes-page {\n    position: absolute;\n    top: 107%;\n    left: 0;\n\n    @media screen and (min-width: ${tablet}) {\n      top: 27%;\n      left: -30%;\n    }\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.characterCardTextAccent};\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 30px;\n  }\n`;\n","import { Helmet } from 'react-helmet-async';\nimport { useOneEpisode } from 'hooks/useOneEpisode';\nimport { useLocation, useParams } from 'react-router';\nimport { home } from 'shared/constants/routes';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\nimport { scrollUp } from 'shared/utils/scrollUp';\nimport { getEpisodeById } from 'redux/episode/thunks';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { GoBackLink } from 'shared/components/GoBackLink';\nimport { CardsList } from 'shared/components/CardsList';\nimport { CharacterCard } from 'modules/Characters/components/CharacterCard';\nimport { Episode } from 'modules/Episodes/components/Episode/Episode';\nimport { images } from 'modules/Episodes/api.img/api.img';\nimport { getRandomIndex } from 'shared/utils/getRandomIndex';\nimport { EpisodeDecor, EpisodeWrap, StyledH2 } from './EpisodePage.styled';\nimport { getCharactersByIds } from 'redux/characters/thunks';\nimport { useCharacters } from 'hooks/useCharacters';\nimport { notfound, oops } from 'shared/constants/errorText';\nimport { Error } from 'shared/components/Error';\n\nconst NUMBER_OF_CHARS_TO_SKIP = 42;\n\nconst EpisodePage = () => {\n  const randomId = useMemo(() => getRandomIndex(images.length), []);\n  const image = images[randomId];\n  const { episode, isLoading, error } = useOneEpisode();\n  const { characters } = useCharacters();\n  const { episodeId } = useParams();\n  const location = useLocation();\n  const path = location.state?.from ?? home;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    scrollUp(0);\n    dispatch(getEpisodeById(episodeId));\n  }, [dispatch, episodeId]);\n\n  useEffect(() => {\n    const charactersID = episode.characters.map(character =>\n      character.slice(NUMBER_OF_CHARS_TO_SKIP)\n    );\n    dispatch(getCharactersByIds(charactersID));\n  }, [dispatch, episode.characters]);\n\n  const shouldShowCard = episode !== null && !error;\n  const shouldShowError = !isLoading && error && error.status !== 404;\n  const shouldShowNotFoundError = !isLoading && error && error.status === 404;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {isLoading\n            ? error && 'Character'\n            : !error && nameNormalize(episode?.name)}\n        </title>\n      </Helmet>\n      <Section>\n        <Container>\n          <GoBackLink to={path} />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          {shouldShowCard && (\n            <EpisodeDecor>\n              <EpisodeWrap>\n                <Episode image={image} />\n              </EpisodeWrap>\n            </EpisodeDecor>\n          )}\n          {shouldShowError && <Error text={oops} />}\n          {shouldShowNotFoundError && <Error text={notfound} />}\n        </Container>\n      </Section>\n\n      {!error && (\n        <Section>\n          <Container>\n            <StyledH2>Characters from the episode</StyledH2>\n            <CardsList items={characters} element={CharacterCard} />\n          </Container>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default EpisodePage;\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { desktop } from 'shared/constants/deviceSizes';\n\nconst teleportDust = keyframes`\n  0% {\n      box-shadow: rgba(0, 0, 0, 0) 30px 30px, rgba(0, 0, 0, 0) 40px 40px,\n        #000 50px 75px, #000 55px 50px, #000 70px 100px, #000 80px 95px,\n        #000 110px 45px, #000 90px 35px;\n    }\n    25% {\n      box-shadow: #000 30px 45px, #000 40px 60px, #000 50px 90px, #000 55px 65px,\n        rgba(0, 0, 0, 0) 70px 120px, rgba(0, 0, 0, 0) 80px 120px,\n        #000 110px 70px, #000 90px 60px;\n    }\n    26% {\n      box-shadow: #000 30px 45px, #000 40px 60px, #000 50px 90px, #000 55px 65px,\n        rgba(0, 0, 0, 0) 70px 40px, rgba(0, 0, 0, 0) 80px 20px, #000 110px 70px,\n        #000 90px 60px;\n    }\n    50% {\n      box-shadow: #000 30px 70px, #000 40px 80px, rgba(0, 0, 0, 0) 50px 100px,\n        #000 55px 80px, #000 70px 60px, #000 80px 45px, #000 110px 95px,\n        #000 90px 85px;\n    }\n    51% {\n      box-shadow: #000 30px 70px, #000 40px 80px, rgba(0, 0, 0, 0) 50px 45px,\n        #000 55px 80px, #000 70px 60px, #000 80px 45px, #000 110px 95px,\n        #000 90px 85px;\n    }\n    75% {\n      box-shadow: #000 30px 95px, #000 40px 100px, #000 50px 60px,\n        rgba(0, 0, 0, 0) 55px 95px, #000 70px 80px, #000 80px 70px,\n        rgba(0, 0, 0, 0) 110px 120px, rgba(0, 0, 0, 0) 90px 110px;\n    }\n    76% {\n      box-shadow: #000 30px 95px, #000 40px 100px, #000 50px 60px,\n        rgba(0, 0, 0, 0) 55px 35px, #000 70px 80px, #000 80px 70px,\n        rgba(0, 0, 0, 0) 110px 25px, rgba(0, 0, 0, 0) 90px 15px;\n    }\n    100% {\n      box-shadow: rgba(0, 0, 0, 0) 30px 120px, rgba(0, 0, 0, 0) 40px 120px,\n        #000 50px 75px, #000 55px 50px, #000 70px 100px, #000 80px 95px,\n        #000 110px 45px, #000 90px 35px;\n    }\n`;\n\nexport const TeleportDust = styled.div`\n  position: absolute;\n  top: 28%;\n  left: 10%;\n  animation: ${teleportDust} 0.5s infinite linear;\n  background: transparent;\n  border-radius: 25%;\n  display: block;\n  height: 10px;\n  width: 2px;\n  opacity: 0.5;\n  transform: scale(1.4);\n\n  @media screen and (min-width: ${desktop}) {\n    top: 0%;\n    left: 15%;\n    transform: scale(2.5);\n  }\n`;\n","import { TeleportDust } from './CardLoader.styled';\n\nexport const CardLoader = () => {\n  return <TeleportDust />;\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${tablet}) {\n    flex-basis: 289px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 3 * 20px) / 4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, List } from './CardsList.styled';\nimport { memo } from 'react';\n\nexport const CardsList = ({ items, element: Element }) => {\n  const Component = props => {\n    return <Element {...props} />;\n  };\n\n  const MemoizedComponent = memo(Component);\n\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MemoizedComponent {...item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  element: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport imgErrorC1 from 'shared/images/404-c1.png';\n\nexport const Text = styled.p`\n  margin-top: 30px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-align: center;\n  color: ${({ theme }) => theme.textPrimary};\n`;\n\nexport const BgImg = styled.div`\n  height: 200px;\n  margin: 0 auto;\n  background-image: url(${imgErrorC1});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-width: ${tablet}) {\n    width: 400px;\n    height: 300px;\n  }\n`;\n","import { BgImg, Text } from './Error.styled';\n\nexport const Error = ({ text }) => {\n  return (\n    <>\n      <Text>{text}</Text>\n      <BgImg />\n    </>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  padding-left: 20px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textPrimary};\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.accent};\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n\n  padding: 1px;\n\n  fill: transparent;\n  stroke: ${({ theme }) => theme.textPrimary};\n  transition: stroke 100ms ${({ theme }) => theme.cubic};\n\n  ${StyledLink}:hover & {\n    stroke: ${({ theme }) => theme.accent};\n  }\n`;\n","import { StyledLink, Svg } from './GoBackLink.styled';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const GoBackLink = props => {\n  return (\n    <StyledLink {...props}>\n      <Svg width=\"20\" height=\"20\">\n        <use href={`${sprite}#icon-arrow-left-small`} />\n      </Svg>\n      Go back\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const IconBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  height: 40px;\n\n  background-color: transparent;\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${getHeartColor};\n  fill: ${getHeartColor};\n  transition: trasform 250ms ${({ theme }) => theme.cubic};\n\n  ${IconBtn}:hover & {\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tooltip } from '../ToolTip';\nimport { IconBtn, Svg } from './Heart.styled';\nimport { addToLibrary, removeFromLibrary } from 'redux/library/slice';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const Heart = ({ id, isFavourite, libraryListName }) => {\n  const [isFav, setIsFav] = useState(isFavourite);\n  const dispatch = useDispatch();\n\n  const hendleHeartClick = e => {\n    e.preventDefault();\n    if (!isFavourite) dispatch(addToLibrary({ id, libraryListName }));\n    if (isFavourite) dispatch(removeFromLibrary({ id, libraryListName }));\n    setIsFav(!isFav);\n  };\n\n  return (\n    <Tooltip text={isFav ? 'remove from my favourite' : 'add to my favourite'}>\n      <IconBtn onClick={hendleHeartClick}>\n        <Svg width=\"30\" height=\"30\" isFavourite={isFav}>\n          <use href={`${sprite}#icon-heart-icon`} />\n        </Svg>\n      </IconBtn>\n    </Tooltip>\n  );\n};\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","const ERROR_TEXT = {\n  oops: 'Oops, something went wrong',\n  notfound: \"Sorry, we couldn't find any results\",\n  nothingonlist: 'There is nothing on this list',\n};\n\nexport const { oops, notfound, nothingonlist } = ERROR_TEXT;\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const CardDecoration = styled.div`\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  min-height: fit-content;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${desktop}) {\n    width: 704px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    transform: rotate(-90deg);\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.crossThemeAccent};\n    border-width: 0 20px 20px 0;\n    background-color: transparent;\n\n    @media screen and (min-width: ${tablet}) {\n      right: -4px;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -4px;\n    left: -4px;\n    transform: rotate(90deg);\n    z-index: -1;\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.crossThemeAccent};\n    border-width: 0 20px 20px 0;\n    background-color: transparent;\n\n    @media screen and (min-width: ${tablet}) {\n      left: -4px;\n    }\n  }\n`;\n\nexport const CardWrap = styled.div`\n  padding: 60px 20px 20px 20px;\n  width: 280px;\n  height: 400px;\n\n  background: ${({ theme }) => theme.bgCharacterCard};\n  border: 3px solid ${({ theme }) => theme.crossThemeAccent};\n  border-radius: 4px;\n  clip-path: polygon(10% 0, 100% 0, 100% 93%, 90% 100%, 0 100%, 0 7%);\n\n  @media screen and (min-width: ${tablet}) {\n    width: 704px;\n    height: 416px;\n    padding: 60px 50px 30px 50px;\n    clip-path: polygon(3.8% 0, 100% 0, 100% 93.5%, 96.2% 100%, 0 100%, 0 6.5%);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -7px;\n    left: 10px;\n    transform: rotate(45deg);\n    z-index: 2;\n\n    width: 2px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.crossThemeAccent};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -7px;\n    right: 10px;\n    transform: rotate(-135deg);\n    z-index: 2;\n\n    width: 2px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.crossThemeAccent};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Number = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n","import styled from '@emotion/styled';\nimport locationPageBackground from '../../images/locationPageBackground.png';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  /* &.location-page {\n    background: url(${locationPageBackground});\n  } */\n`;\n","export const addIsFavouriteToItem = (item, ids) => {\n  if (!item) return null;\n  return {\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  };\n};\n\nexport const addIsFavouriteToList = (data, ids) => {\n  if (!Array.isArray(data)) {\n    return [\n      {\n        ...data,\n        isFavourite: ids ? ids.includes(data?.id) : false,\n      },\n    ];\n  }\n  return data.map(item => ({\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  }));\n};\n","export const getHeartColor = ({\n  isFavourite,\n  theme: { hightlight, bgcHeartTransparent },\n}) => (isFavourite ? hightlight : bgcHeartTransparent);\n","export const getRandomIndex = max => Math.floor(Math.random() * max);\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n","export const nameNormalize = name => {\n  if (name.length <= 13) return name;\n  const start = name.slice(0, 11);\n  return `${start}...`;\n};\n\nexport const characterNameNormalize = name => {\n  if (name.length <= 24) return name;\n  const start = name.slice(0, 22);\n  return `${start}...`;\n};\n"],"names":["selectCharactersInfo","state","characters","info","selectCharactersIsLoading","isLoading","selectCharactersError","error","selectCharactersWithIsFav","createSelector","items","selectFavCharactersIds","addIsFavouriteToList","useCharacters","useSelector","selectEpisodeIsLoading","episode","selectEpisodeError","selectEpisodeWithIsFav","item","selectFavEpisodesIds","addIsFavouriteToItem","useOneEpisode","spiecesNormalize","spieces","length","start","slice","StyledLink","styled","Link","theme","cubic","secondary","HeartWrap","Img","MainInfo","Name","Wrap","accentTransparent","Description","StyledNumber","Number","CharacterCard","props","location","useLocation","id","name","species","gender","status","image","isFavourite","to","from","Heart","libraryListName","favcharacters","src","width","height","alt","loading","CharacterStatus","nameNormalize","beam","keyframes","Status","getStatus","animate","text","marker","StyledH1","FlexUl","TextInfo","BasicWrapper","images","CradInfoText","characterCardTextAccent","bgEpisodesTransparent","FlexInfo","tablet","episodeNameNoramlize","episodeName","EpisodeCardInfo","episodeCode","air_date","pathname","episodes","className","map","data","shine","crossThemeAccent","LoaderWrap","desktop","textPrimary","getHeartColor","Episode","CardLoader","favepisodes","EpisodeDecor","CardDecoration","EpisodeWrap","CardWrap","StyledH2","randomId","useMemo","getRandomIndex","episodeId","useParams","path","home","dispatch","useDispatch","useEffect","scrollUp","getEpisodeById","charactersID","character","getCharactersByIds","shouldShowCard","shouldShowError","shouldShowNotFoundError","GoBackLink","Error","oops","notfound","CardsList","element","teleportDust","TeleportDust","List","Item","Element","Component","MemoizedComponent","memo","Text","BgImg","imgErrorC1","accent","Svg","href","sprite","IconBtn","useState","isFav","setIsFav","onClick","e","preventDefault","addToLibrary","removeFromLibrary","alive","dead","unknown","nothingonlist","bgCharacterCard","bgPrimary","Section","locationPageBackground","ids","includes","Array","isArray","hightlight","bgcHeartTransparent","max","Math","floor","random","characterNameNormalize"],"sourceRoot":""}