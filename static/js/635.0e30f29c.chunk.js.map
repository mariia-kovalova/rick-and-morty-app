{"version":3,"file":"static/js/635.0e30f29c.chunk.js","mappings":"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","sources":["redux/characters/selectors.js","hooks/useCharacters.js","redux/location/selectors.js","hooks/useOneLocation.js","shared/utils/spiecesNormalize.js","modules/Characters/components/CharacterCard/CharacterCard.styled.jsx","modules/Characters/components/CharacterCard/CharacterCard.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.styled.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.jsx","modules/Locations/components/LocationCard/LocationCard.styled.jsx","modules/Locations/components/LocationCard/LocationCard.jsx","modules/Locations/components/Residents/ResidentList.styled.jsx","modules/Locations/components/Residents/ResidentList.jsx","pages/LocationPage/LocationPage.jsx","shared/components/CardsList/CardsList.styled.jsx","shared/components/CardsList/CardsList.jsx","shared/components/Error/Error.styled.jsx","shared/components/Error/Error.jsx","shared/components/GoBackLink/GoBackLink.styled.jsx","shared/components/GoBackLink/GoBackLink.jsx","shared/components/Heart/Heart.styled.jsx","shared/components/Heart/Heart.jsx","shared/constants/characterStatus.js","shared/constants/errorText.js","shared/styles/components/Number.styled.jsx","shared/styles/components/Section.styled.jsx","shared/utils/addIsFavourite.js","shared/utils/getHeartColor.js","shared/utils/getStatus.js","shared/utils/nameNormalize.js"],"sourcesContent":["export const selectCharactersInfo = state => state.characters.info;\nexport const selectCharactersItems = state => state.characters.items;\nexport const selectCharactersIsLoading = state => state.characters.isLoading;\nexport const selectCharactersError = state => state.characters.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCharactersError,\n  selectCharactersInfo,\n  selectCharactersIsLoading,\n  selectCharactersItems,\n} from 'redux/characters/selectors';\nimport { selectFavCharactersIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectCharactersWithIsFav = createSelector(\n  [selectCharactersItems, selectFavCharactersIds],\n  addIsFavouriteToList\n);\n\nexport const useCharacters = () => {\n  const info = useSelector(selectCharactersInfo);\n  const characters = useSelector(selectCharactersWithIsFav);\n  const isLoading = useSelector(selectCharactersIsLoading);\n  const error = useSelector(selectCharactersError);\n\n  return {\n    info,\n    characters,\n    isLoading,\n    error,\n  };\n};\n","export const selectLocation = state => state.location.item;\nexport const selectLocationIsLoading = state => state.location.isLoading;\nexport const selectLocationError = state => state.location.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavLocationsIds } from 'redux/library/selectors';\nimport {\n  selectLocation,\n  selectLocationError,\n  selectLocationIsLoading,\n} from 'redux/location/selectors';\nimport { addIsFavouriteToItem } from 'shared/utils/addIsFavourite';\n\nconst selectLocationWithIsFav = createSelector(\n  [selectLocation, selectFavLocationsIds],\n  addIsFavouriteToItem\n);\n\nexport const useOneLocation = () => {\n  const location = useSelector(selectLocationWithIsFav);\n  const isLoading = useSelector(selectLocationIsLoading);\n  const error = useSelector(selectLocationError);\n\n  return {\n    location,\n    isLoading,\n    error,\n  };\n};\n","export const spiecesNormalize = spieces => {\n  if (spieces.length <= 10) return spieces;\n  const start = spieces.slice(0, 5);\n  return `${start}...`;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Number } from 'shared/styles/components/Number.styled';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 0;\n\n  width: fit-content;\n  height: fit-content;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const Description = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-size: 35px;\n`;\n","import { characters } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { spiecesNormalize } from 'shared/utils/spiecesNormalize';\nimport { CharacterStatus } from '../CharacterStatus/CharacterStatus';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  MainInfo,\n  Name,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './CharacterCard.styled';\nimport { favcharacters } from 'shared/constants/libaryListName';\n\nexport const CharacterCard = props => {\n  const location = useLocation();\n  const { id, name, species, gender, status, image, isFavourite } = props;\n\n  return (\n    <StyledLink to={`/${characters}/${id}`} state={{ from: location }}>\n      <HeartWrap>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favcharacters}\n        />\n      </HeartWrap>\n      <Img src={image} width=\"289\" height=\"289\" alt={name} loading=\"lazy\" />\n      <Wrap>\n        <MainInfo>\n          <CharacterStatus status={status} />\n          <Name>{nameNormalize(name)}</Name>\n        </MainInfo>\n        <Description>\n          {spiecesNormalize(species)} | {gender}\n        </Description>\n        <StyledNumber>#{id}</StyledNumber>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { getStatus } from 'shared/utils/getStatus';\n\nconst beam = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Status = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n\n    animation: ${({ animate }) => (animate ? beam : 'none')} 1.5s ease-in-out\n      infinite;\n  }\n`;\n","import { Tooltip } from 'shared/components/ToolTip';\nimport { Status } from './CharacterStatus.styled';\n\nexport const CharacterStatus = ({ status, animate }) => {\n  return (\n    <Tooltip text={status}>\n      <Status marker={status} animate={animate} />\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\nimport { getStatus } from 'shared/utils/getStatus';\n\nexport const StyledDiv = styled.div`\n  position: relative;\n\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 26%;\n  left: 6%;\n\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  border-radius: 5px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 278px;\n    height: 278px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    width: 289px;\n    height: 289px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n\n  transition: ${({ theme }) => theme.cubic} 250ms;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media screen and (min-width: ${mobile}) {\n    position: relative;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    position: absolute;\n  }\n\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n  height: 60px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.secondaryTransparent};\n`;\n\nexport const Name = styled.p`\n  padding-left: 22px;\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n\n  @media screen and (min-width: ${mobile}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 20px;\n  }\n\n  & span {\n    display: inline;\n    margin-left: 7px;\n\n    font-weight: 900;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n\n    @media screen and (min-width: ${mobile}) {\n      font-size: 18px;\n    }\n\n    @media screen and (min-width: ${tablet}) {\n      font-size: 24px;\n    }\n  }\n\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.25px;\n\n  &.location-card__name {\n    font-size: 26px;\n    margin-bottom: 30px;\n    margin-top: 20px;\n    margin-right: 5px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: flex;\n\n  @media screen and (min-width: ${mobile}) {\n    flex-direction: column;\n    height: 530px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    height: 289px;\n  }\n`;\n\nexport const Infobox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Number = styled.div`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const ResidentsButton = styled.button`\n  position: absolute;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.bgPrimary};\n\n  background-color: ${({ theme }) => theme.crossThemeAccent};\n\n  border-radius: 5px;\n  transition: clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  clip-path: polygon(\n    12% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    88% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:hover {\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n    color: ${({ theme }) => theme.secondary};\n  }\n\n  @media screen and (min-width: ${mobile}) {\n    z-index: 1;\n    bottom: -15%;\n    left: 31%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 160px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    z-index: 1;\n    bottom: -7%;\n    left: 20%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 200px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    bottom: 35%;\n    left: 85%;\n    transform: translate(-50%, -50%);\n    height: 70px;\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport image from 'shared/images/locationCard.jpg';\nimport { useDispatch } from 'react-redux';\nimport { favlocations } from 'shared/constants/libaryListName';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  ImgWrap,\n  Infobox,\n  Name,\n  Number,\n  ResidentsButton,\n  StyledDiv,\n  Wrap,\n} from './LocationCard.styled';\n\nexport const LocationCard = ({ location, resident, showResidentsBtn }) => {\n  const [residentImage, setResidentImage] = useState(image);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (resident) {\n      const residentID = resident.slice(42);\n      const img = `https://rickandmortyapi.com/api/character/avatar/${residentID}.jpeg`;\n      setResidentImage(img);\n    }\n  }, [dispatch, resident]);\n\n  return (\n    <StyledDiv>\n      <Description>\n        <ImgWrap>\n          <Img\n            src={residentImage}\n            width=\"289\"\n            height=\"289\"\n            alt=\"location\"\n            loading=\"lazy\"\n          />\n        </ImgWrap>\n        <Infobox>\n          <Name className=\"location-card__name\">{location.name}</Name>\n          <Name>\n            Type: <span>{location.type}</span>\n          </Name>\n          <Name>\n            Dimension: <span>{location.dimension}</span>\n          </Name>\n          <Name>\n            Number of residents: <span>{location.residents.length}</span>\n          </Name>\n        </Infobox>\n        {showResidentsBtn && (\n          <ResidentsButton type=\"button\">Residents</ResidentsButton>\n        )}\n      </Description>\n      <Wrap>\n        <Number>#{location.id}</Number>\n      </Wrap>\n      <HeartWrap isFavourite={location.isFavourite}>\n        <Heart\n          id={location.id}\n          isFavourite={location.isFavourite}\n          libraryListName={favlocations}\n        />\n      </HeartWrap>\n    </StyledDiv>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const StyledH2 = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.characterCardTextAccent};\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 30px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    font-size: 40px;\n  }\n`;\n","import { CharacterCard } from 'modules/Characters/components/CharacterCard';\nimport { CardsList } from 'shared/components/CardsList';\nimport { StyledH2 } from './ResidentList.styled';\nimport { useCharacters } from 'hooks/useCharacters';\n\nexport const ResidentList = () => {\n  const { characters } = useCharacters();\n\n  return (\n    <>\n      <StyledH2>Residents</StyledH2>\n      {characters.length > 0 ? (\n        <CardsList items={characters} element={CharacterCard} />\n      ) : (\n        <p>It seems like no one is here... Go back and try another location</p>\n      )}\n    </>\n  );\n};\n","import { useOneLocation } from 'hooks/useOneLocation';\nimport { LocationCard } from 'modules/Locations/components/LocationCard/LocationCard';\nimport { ResidentList } from 'modules/Locations/components/Residents/ResidentList';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useParams } from 'react-router';\nimport { getCharactersByIds } from 'redux/characters/thunks';\nimport { getLocationById } from 'redux/location/thunks';\nimport { Error } from 'shared/components/Error';\nimport { GoBackLink } from 'shared/components/GoBackLink/GoBackLink';\nimport { notfound, oops } from 'shared/constants/errorText';\nimport { home } from 'shared/constants/routes';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { scrollUp } from 'shared/utils/scrollUp';\n\nconst NUMBER_OF_LETTER_TO_SKIP = 42;\n\nconst LocationPage = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { location, isLoading, error } = useOneLocation();\n\n  const locationPath = useLocation();\n\n  const path = locationPath.state?.from ?? home;\n\n  useEffect(() => {\n    scrollUp(0);\n    dispatch(getLocationById(params.locationId));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    const residentsID = location.residents.map(resident =>\n      resident.slice(NUMBER_OF_LETTER_TO_SKIP)\n    );\n\n    dispatch(getCharactersByIds(residentsID));\n  }, [dispatch, location]);\n\n  const shouldShowCard = location !== null && !error;\n  const shouldShowError = !isLoading && error && error.status !== 404;\n  const shouldShowNotFoundError = !isLoading && error && error.status === 404;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {isLoading\n            ? error && 'Character'\n            : !error && nameNormalize(location?.name)}\n        </title>\n      </Helmet>\n      <Section>\n        <Container>\n          <GoBackLink to={path} />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          {shouldShowCard && (\n            <LocationCard\n              location={location}\n              resident={location.residents[0]}\n            />\n          )}\n          {shouldShowError && <Error text={oops} />}\n          {shouldShowNotFoundError && <Error text={notfound} />}\n        </Container>\n      </Section>\n\n      {!error && (\n        <Section>\n          <Container>\n            <ResidentList />\n          </Container>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default LocationPage;\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${tablet}) {\n    flex-basis: 289px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 3 * 20px) / 4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, List } from './CardsList.styled';\nimport { memo } from 'react';\n\nexport const CardsList = ({ items, element: Element }) => {\n  const Component = props => {\n    return <Element {...props} />;\n  };\n\n  const MemoizedComponent = memo(Component);\n\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MemoizedComponent {...item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  element: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport imgErrorC1 from 'shared/images/404-c1.png';\n\nexport const Text = styled.p`\n  margin-top: 30px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-align: center;\n  color: ${({ theme }) => theme.textPrimary};\n`;\n\nexport const BgImg = styled.div`\n  height: 200px;\n  margin: 0 auto;\n  background-image: url(${imgErrorC1});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-width: ${tablet}) {\n    width: 400px;\n    height: 300px;\n  }\n`;\n","import { BgImg, Text } from './Error.styled';\n\nexport const Error = ({ text }) => {\n  return (\n    <>\n      <Text>{text}</Text>\n      <BgImg />\n    </>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  padding-left: 20px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textPrimary};\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.accent};\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n\n  padding: 1px;\n\n  fill: transparent;\n  stroke: ${({ theme }) => theme.textPrimary};\n  transition: stroke 100ms ${({ theme }) => theme.cubic};\n\n  ${StyledLink}:hover & {\n    stroke: ${({ theme }) => theme.accent};\n  }\n`;\n","import { StyledLink, Svg } from './GoBackLink.styled';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const GoBackLink = props => {\n  return (\n    <StyledLink {...props}>\n      <Svg width=\"20\" height=\"20\">\n        <use href={`${sprite}#icon-arrow-left-small`} />\n      </Svg>\n      Go back\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const IconBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  height: 40px;\n\n  background-color: transparent;\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${getHeartColor};\n  fill: ${getHeartColor};\n  transition: trasform 250ms ${({ theme }) => theme.cubic};\n\n  ${IconBtn}:hover & {\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tooltip } from '../ToolTip';\nimport { IconBtn, Svg } from './Heart.styled';\nimport { addToLibrary, removeFromLibrary } from 'redux/library/slice';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const Heart = ({ id, isFavourite, libraryListName }) => {\n  const [isFav, setIsFav] = useState(isFavourite);\n  const dispatch = useDispatch();\n\n  const hendleHeartClick = e => {\n    e.preventDefault();\n    if (!isFavourite) dispatch(addToLibrary({ id, libraryListName }));\n    if (isFavourite) dispatch(removeFromLibrary({ id, libraryListName }));\n    setIsFav(!isFav);\n  };\n\n  return (\n    <Tooltip text={isFav ? 'remove from my favourite' : 'add to my favourite'}>\n      <IconBtn onClick={hendleHeartClick}>\n        <Svg width=\"30\" height=\"30\" isFavourite={isFav}>\n          <use href={`${sprite}#icon-heart-icon`} />\n        </Svg>\n      </IconBtn>\n    </Tooltip>\n  );\n};\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","const ERROR_TEXT = {\n  oops: 'Oops, something went wrong',\n  notfound: \"Sorry, we couldn't find any results\",\n  nothingonlist: 'There is nothing on this list',\n};\n\nexport const { oops, notfound, nothingonlist } = ERROR_TEXT;\n","import styled from '@emotion/styled';\n\nexport const Number = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n","import styled from '@emotion/styled';\nimport locationPageBackground from '../../images/locationPageBackground.png';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  /* &.location-page {\n    background: url(${locationPageBackground});\n  } */\n`;\n","export const addIsFavouriteToItem = (item, ids) => {\n  if (!item) return null;\n  return {\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  };\n};\n\nexport const addIsFavouriteToList = (data, ids) => {\n  if (!Array.isArray(data)) {\n    return [\n      {\n        ...data,\n        isFavourite: ids ? ids.includes(data?.id) : false,\n      },\n    ];\n  }\n  return data.map(item => ({\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  }));\n};\n","export const getHeartColor = ({\n  isFavourite,\n  theme: { hightlight, bgcHeartTransparent },\n}) => (isFavourite ? hightlight : bgcHeartTransparent);\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n","export const nameNormalize = name => {\n  if (name.length <= 13) return name;\n  const start = name.slice(0, 11);\n  return `${start}...`;\n};\n\nexport const characterNameNormalize = name => {\n  if (name.length <= 24) return name;\n  const start = name.slice(0, 22);\n  return `${start}...`;\n};\n"],"names":["selectCharactersInfo","state","characters","info","selectCharactersIsLoading","isLoading","selectCharactersError","error","selectCharactersWithIsFav","createSelector","items","selectFavCharactersIds","addIsFavouriteToList","useCharacters","useSelector","selectLocationIsLoading","location","selectLocationError","selectLocationWithIsFav","item","selectFavLocationsIds","addIsFavouriteToItem","useOneLocation","spiecesNormalize","spieces","length","start","slice","StyledLink","styled","Link","theme","cubic","secondary","HeartWrap","Img","MainInfo","Name","Wrap","accentTransparent","Description","StyledNumber","Number","CharacterCard","props","useLocation","id","name","species","gender","status","image","isFavourite","to","from","Heart","libraryListName","favcharacters","src","width","height","alt","loading","CharacterStatus","nameNormalize","beam","keyframes","Status","getStatus","animate","text","marker","StyledDiv","ImgWrap","mobile","tablet","secondaryTransparent","characterCardTextAccent","Infobox","ResidentsButton","bgPrimary","crossThemeAccent","disabled","desktop","getHeartColor","LocationCard","resident","showResidentsBtn","useState","residentImage","setResidentImage","dispatch","useDispatch","useEffect","residentID","img","className","type","dimension","residents","favlocations","StyledH2","ResidentList","CardsList","element","params","useParams","path","home","scrollUp","getLocationById","locationId","residentsID","map","getCharactersByIds","shouldShowCard","shouldShowError","shouldShowNotFoundError","GoBackLink","Error","oops","notfound","List","Item","Element","Component","MemoizedComponent","memo","Text","textPrimary","BgImg","imgErrorC1","accent","Svg","href","sprite","IconBtn","isFav","setIsFav","onClick","e","preventDefault","addToLibrary","removeFromLibrary","alive","dead","unknown","nothingonlist","Section","locationPageBackground","ids","includes","data","Array","isArray","hightlight","bgcHeartTransparent","characterNameNormalize"],"sourceRoot":""}