{"version":3,"file":"static/js/515.bd84f6d3.chunk.js","mappings":"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","sources":["shared/components/CardLoader/CardLoader.styled.jsx","shared/components/CardLoader/CardLoader.jsx","shared/components/Heart/Heart.styled.jsx","shared/components/Heart/Heart.jsx","shared/components/Loader/Loader.styled.jsx","shared/components/Loader/Loader.jsx","shared/components/Pagination/Pagination.styled.jsx","shared/components/Pagination/Pagination.jsx","shared/utils/getPaginationLabels.js","shared/components/ResultsNotFound/ResultsNotFound.jsx","shared/styles/components/CardDecoration.styled.jsx","shared/styles/components/Section.styled.jsx","shared/utils/addIsFavourite.js","shared/utils/getHeartColor.js","shared/utils/getSearchValues.js","shared/utils/scrollUp.js"],"sourcesContent":["import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { desktop } from 'shared/constants/deviceSizes';\n\nconst teleportDust = keyframes`\n  0% {\n      box-shadow: rgba(0, 0, 0, 0) 30px 30px, rgba(0, 0, 0, 0) 40px 40px,\n        #000 50px 75px, #000 55px 50px, #000 70px 100px, #000 80px 95px,\n        #000 110px 45px, #000 90px 35px;\n    }\n    25% {\n      box-shadow: #000 30px 45px, #000 40px 60px, #000 50px 90px, #000 55px 65px,\n        rgba(0, 0, 0, 0) 70px 120px, rgba(0, 0, 0, 0) 80px 120px,\n        #000 110px 70px, #000 90px 60px;\n    }\n    26% {\n      box-shadow: #000 30px 45px, #000 40px 60px, #000 50px 90px, #000 55px 65px,\n        rgba(0, 0, 0, 0) 70px 40px, rgba(0, 0, 0, 0) 80px 20px, #000 110px 70px,\n        #000 90px 60px;\n    }\n    50% {\n      box-shadow: #000 30px 70px, #000 40px 80px, rgba(0, 0, 0, 0) 50px 100px,\n        #000 55px 80px, #000 70px 60px, #000 80px 45px, #000 110px 95px,\n        #000 90px 85px;\n    }\n    51% {\n      box-shadow: #000 30px 70px, #000 40px 80px, rgba(0, 0, 0, 0) 50px 45px,\n        #000 55px 80px, #000 70px 60px, #000 80px 45px, #000 110px 95px,\n        #000 90px 85px;\n    }\n    75% {\n      box-shadow: #000 30px 95px, #000 40px 100px, #000 50px 60px,\n        rgba(0, 0, 0, 0) 55px 95px, #000 70px 80px, #000 80px 70px,\n        rgba(0, 0, 0, 0) 110px 120px, rgba(0, 0, 0, 0) 90px 110px;\n    }\n    76% {\n      box-shadow: #000 30px 95px, #000 40px 100px, #000 50px 60px,\n        rgba(0, 0, 0, 0) 55px 35px, #000 70px 80px, #000 80px 70px,\n        rgba(0, 0, 0, 0) 110px 25px, rgba(0, 0, 0, 0) 90px 15px;\n    }\n    100% {\n      box-shadow: rgba(0, 0, 0, 0) 30px 120px, rgba(0, 0, 0, 0) 40px 120px,\n        #000 50px 75px, #000 55px 50px, #000 70px 100px, #000 80px 95px,\n        #000 110px 45px, #000 90px 35px;\n    }\n`;\n\nexport const TeleportDust = styled.div`\n  position: absolute;\n  top: 28%;\n  left: 10%;\n  animation: ${teleportDust} 0.5s infinite linear;\n  background: transparent;\n  border-radius: 25%;\n  display: block;\n  height: 10px;\n  width: 2px;\n  opacity: 0.5;\n  transform: scale(1.4);\n\n  @media screen and (min-width: ${desktop}) {\n    top: 0%;\n    left: 15%;\n    transform: scale(2.5);\n  }\n`;\n","import { TeleportDust } from './CardLoader.styled';\n\nexport const CardLoader = () => {\n  return <TeleportDust />;\n};\n","import styled from '@emotion/styled/macro';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const IconBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  height: 40px;\n\n  background-color: transparent;\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${getHeartColor};\n  fill: ${getHeartColor};\n  transition: trasform 250ms ${({ theme }) => theme.cubic};\n\n  ${IconBtn}:hover & {\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tooltip } from '../ToolTip';\nimport { IconBtn, Svg } from './Heart.styled';\nimport { addToLibrary, removeFromLibrary } from 'redux/library/slice';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const Heart = ({ id, isFavourite, libraryListName }) => {\n  const [isFav, setIsFav] = useState(isFavourite);\n  const dispatch = useDispatch();\n\n  const hendleHeartClick = e => {\n    e.preventDefault();\n    if (!isFavourite) dispatch(addToLibrary({ id, libraryListName }));\n    if (isFavourite) dispatch(removeFromLibrary({ id, libraryListName }));\n    setIsFav(!isFav);\n  };\n\n  return (\n    <Tooltip text={isFav ? 'remove from my favourite' : 'add to my favourite'}>\n      <IconBtn onClick={hendleHeartClick}>\n        <Svg width=\"30\" height=\"30\" isFavourite={isFav}>\n          <use href={`${sprite}#icon-heart-icon`} />\n        </Svg>\n      </IconBtn>\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1200;\n`;\n\nexport const StyledLoader = styled.p`\n  font-size: 40px;\n`;\n","import { Overlay, StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Overlay>\n      <StyledLoader>Loader</StyledLoader>\n    </Overlay>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n\n  @media screen and (min-width: ${tablet}) {\n    gap: 16px;\n  }\n`;\n\nexport const IconArrowButton = styled.button`\n  position: relative;\n  padding: 12px;\n\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.bgPrimary};\n  transition: backgrond-color 250ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${tablet}) {\n    padding: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.bgcHoverFocus};\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    cursor: auto;\n    background-color: transparent;\n  }\n`;\n\nexport const LabelButton = styled.button`\n  position: relative;\n  z-index: 1;\n\n  background-color: transparent;\n  color: ${({ currentPage }) => (currentPage ? '#fff' : 'inherit')};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.bgPrimary};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: -1;\n\n    padding: 16px;\n\n    border-radius: 50%;\n    background-color: ${({ theme, currentPage }) =>\n      currentPage ? theme.crossThemeAccent : theme.bgPrimary};\n    transition: backgrond-color 250ms ${({ theme }) => theme.cubic};\n  }\n\n  &:hover::before,\n  &:focus::before {\n    background-color: ${({ theme }) => theme.bgcHoverFocus};\n  }\n`;\n\nexport const Svg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 1px;\n\n  fill: transparent;\n  stroke: ${({ theme }) => theme.crossThemeAccent};\n  transition: stroke 100ms ${({ theme }) => theme.cubic};\n\n  ${IconArrowButton}:disabled & {\n    stroke: ${({ theme }) => theme.bgcHoverFocus};\n  }\n\n  ${IconArrowButton}:hover &, ${IconArrowButton}:focus  & {\n    stroke: ${({ theme }) => theme.bgPrimary};\n  }\n\n  ${IconArrowButton}:disabled:hover & ,${IconArrowButton}:disabled:focus {\n    stroke: ${({ theme }) => theme.bgcHoverFocus};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport sprite from 'shared/icons/sprite.svg';\nimport { IconArrowButton, LabelButton, List, Svg } from './Pagination.styled';\nimport { getPaginationLabels } from 'shared/utils/getPaginationLabels';\nimport { scrollUp } from 'shared/utils/scrollUp';\n\nexport const Pagination = ({ page, totalPages, onPageChange }) => {\n  const [labels, setLabels] = useState([]);\n\n  const handlePageSelectClick = selectedPage => {\n    if (selectedPage === page) return;\n    onPageChange(selectedPage);\n    scrollUp(300);\n  };\n\n  useEffect(() => {\n    getPaginationLabels({ setLabels, totalPages, page });\n  }, [page, totalPages]);\n\n  return (\n    <List>\n      <li>\n        <IconArrowButton\n          onClick={() => handlePageSelectClick(page - 1)}\n          disabled={page === 1}\n          type=\"button\"\n        >\n          <Svg width=\"20\" height=\"20\">\n            <use href={`${sprite}#icon-arrow-left-small`} />\n          </Svg>\n        </IconArrowButton>\n      </li>\n      {labels.map((label, index) => (\n        <li key={index}>\n          {typeof label === 'number' ? (\n            <LabelButton\n              onClick={() => handlePageSelectClick(label)}\n              type=\"button\"\n              currentPage={page === label}\n            >\n              {label}\n            </LabelButton>\n          ) : (\n            <span>...</span>\n          )}\n        </li>\n      ))}\n      <li>\n        <IconArrowButton\n          onClick={() => handlePageSelectClick(page + 1)}\n          disabled={page === totalPages}\n          type=\"button\"\n        >\n          <Svg width=\"20\" height=\"20\">\n            <use href={`${sprite}#icon-arrow-right-small`} />\n          </Svg>\n        </IconArrowButton>\n      </li>\n    </List>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","export const getPaginationLabels = ({ setLabels, totalPages, page }) => {\n  if (totalPages <= 7)\n    return setLabels(Array.from({ length: totalPages }, (_, i) => i + 1));\n  if (page <= 4) {\n    return setLabels([\n      ...Array.from({ length: 5 }, (_, i) => i + 1),\n      '',\n      totalPages,\n    ]);\n  }\n  if (page > totalPages - 5) {\n    return setLabels([\n      1,\n      '',\n      ...Array.from({ length: 5 }, (_, i) => totalPages - i).reverse(),\n    ]);\n  }\n  setLabels([1, '', page - 1, page, page + 1, '', totalPages]);\n};\n","export const ResultsNotFound = () => {\n  return <div>ResultsNotFound</div>;\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const CardDecoration = styled.div`\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  min-height: fit-content;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${desktop}) {\n    width: 704px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    transform: rotate(-90deg);\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.crossThemeAccent};\n    border-width: 0 20px 20px 0;\n    background-color: transparent;\n\n    @media screen and (min-width: ${tablet}) {\n      right: -4px;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -4px;\n    left: -4px;\n    transform: rotate(90deg);\n    z-index: -1;\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.crossThemeAccent};\n    border-width: 0 20px 20px 0;\n    background-color: transparent;\n\n    @media screen and (min-width: ${tablet}) {\n      left: -4px;\n    }\n  }\n`;\n\nexport const CardWrap = styled.div`\n  padding: 60px 20px 20px 20px;\n  width: 280px;\n  height: 400px;\n\n  background: ${({ theme }) => theme.bgCharacterCard};\n  border: 3px solid ${({ theme }) => theme.crossThemeAccent};\n  border-radius: 4px;\n  clip-path: polygon(10% 0, 100% 0, 100% 93%, 90% 100%, 0 100%, 0 7%);\n\n  @media screen and (min-width: ${tablet}) {\n    width: 704px;\n    height: 416px;\n    padding: 60px 50px 30px 50px;\n    clip-path: polygon(3.8% 0, 100% 0, 100% 93.5%, 96.2% 100%, 0 100%, 0 6.5%);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -7px;\n    left: 10px;\n    transform: rotate(45deg);\n    z-index: 2;\n\n    width: 2px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.crossThemeAccent};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -7px;\n    right: 10px;\n    transform: rotate(-135deg);\n    z-index: 2;\n\n    width: 2px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.crossThemeAccent};\n  }\n`;\n","import styled from '@emotion/styled';\nimport locationPageBackground from '../../images/locationPageBackground.png';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  /* &.location-page {\n    background: url(${locationPageBackground});\n  } */\n`;\n","export const addIsFavouriteToItem = (item, ids) => {\n  if (!item) return null;\n  return {\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  };\n};\n\nexport const addIsFavouriteToList = (data, ids) => {\n  if (!Array.isArray(data)) {\n    return [\n      {\n        ...data,\n        isFavourite: ids ? ids.includes(data?.id) : false,\n      },\n    ];\n  }\n  return data.map(item => ({\n    ...item,\n    isFavourite: ids ? ids.includes(item?.id) : false,\n  }));\n};\n","export const getHeartColor = ({\n  isFavourite,\n  theme: { hightlight, bgcHeartTransparent },\n}) => (isFavourite ? hightlight : bgcHeartTransparent);\n","export const getSearchValues = (fieldsArr, searchParams) =>\n  fieldsArr.reduce(\n    (acc, inputName) => ({\n      ...acc,\n      [inputName]: searchParams.get(inputName) || '',\n    }),\n    {}\n  );\n","export const scrollUp = top =>\n  window.scrollTo({\n    top: top,\n    behavior: 'smooth',\n  });\n"],"names":["teleportDust","keyframes","TeleportDust","styled","desktop","CardLoader","IconBtn","Svg","getHeartColor","theme","cubic","Heart","id","isFavourite","libraryListName","useState","isFav","setIsFav","dispatch","useDispatch","text","onClick","e","preventDefault","addToLibrary","removeFromLibrary","width","height","href","sprite","Overlay","StyledLoader","Loader","List","tablet","IconArrowButton","bgPrimary","bgcHoverFocus","LabelButton","currentPage","crossThemeAccent","Pagination","page","totalPages","onPageChange","labels","setLabels","handlePageSelectClick","selectedPage","scrollUp","useEffect","Array","from","length","_","i","reverse","getPaginationLabels","disabled","type","map","label","index","ResultsNotFound","CardDecoration","CardWrap","bgCharacterCard","Section","locationPageBackground","addIsFavouriteToItem","item","ids","includes","addIsFavouriteToList","data","isArray","hightlight","bgcHeartTransparent","getSearchValues","fieldsArr","searchParams","reduce","acc","inputName","get","top","window","scrollTo","behavior"],"sourceRoot":""}