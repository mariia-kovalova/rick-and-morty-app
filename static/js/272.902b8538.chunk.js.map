{"version":3,"file":"static/js/272.902b8538.chunk.js","mappings":"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","sources":["redux/locations/selectors.js","hooks/useLocations.js","redux/location/selectors.js","hooks/useOneLocation.js","modules/Locations/components/LocationCard/LocationCard.styled.jsx","modules/Locations/components/LocationCard/LocationCard.jsx","modules/Locations/Locations.styled.jsx","modules/Locations/components/LocationPicker/LocationPicker.styled.jsx","modules/Locations/components/LocationPicker/LocationPicker.jsx","modules/Locations/components/LocationsList/LocationsList.styled.jsx","modules/Locations/components/LocationsList/LocationsList.jsx","modules/Locations/components/FilterLocation/schema.js","modules/Locations/components/FilterLocation/FilterLocation.styled.jsx","modules/Locations/components/FilterLocation/inputs.js","modules/Locations/components/FilterLocation/FilterLocation.jsx","modules/Locations/Locations.jsx","pages/LocationsPage/LocationsPage.jsx","shared/constants/characterStatus.js","shared/utils/getRandomLocation.js","shared/utils/getStatus.js"],"sourcesContent":["export const selectLocationsInfo = state => state.locations.info;\nexport const selectLocationsItems = state => state.locations.items;\nexport const selectLocationsIsLoading = state => state.locations.isLoading;\nexport const selectLocationsError = state => state.locations.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavLocationsIds } from 'redux/library/selectors';\nimport {\n  selectLocationsError,\n  selectLocationsInfo,\n  selectLocationsIsLoading,\n  selectLocationsItems,\n} from 'redux/locations/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectLocationsWithIsFav = createSelector(\n  [selectLocationsItems, selectFavLocationsIds],\n  addIsFavouriteToList\n);\n\nexport const useLocations = () => {\n  const info = useSelector(selectLocationsInfo);\n  const locations = useSelector(selectLocationsWithIsFav);\n  const isLoading = useSelector(selectLocationsIsLoading);\n  const error = useSelector(selectLocationsError);\n\n  return {\n    info,\n    locations,\n    isLoading,\n    error,\n  };\n};\n","export const selectLocation = state => state.location.item;\nexport const selectLocationIsLoading = state => state.location.isLoading;\nexport const selectLocationError = state => state.location.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavEpisodesIds } from 'redux/library/selectors';\nimport {\n  selectLocation,\n  selectLocationError,\n  selectLocationIsLoading,\n} from 'redux/location/selectors';\nimport { addIsFavouriteToItem } from 'shared/utils/addIsFavourite';\n\nconst selectLocationWithIsFav = createSelector(\n  [selectLocation, selectFavEpisodesIds],\n  addIsFavouriteToItem\n);\n\nexport const useOneLocation = () => {\n  const location = useSelector(selectLocationWithIsFav);\n  const isLoading = useSelector(selectLocationIsLoading);\n  const error = useSelector(selectLocationError);\n\n  return {\n    location,\n    isLoading,\n    error,\n  };\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\nimport { getStatus } from 'shared/utils/getStatus';\n\nexport const StyledDiv = styled.div`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 26%;\n  left: 6%;\n\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  border-radius: 5px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 278px;\n    height: 278px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    width: 289px;\n    height: 289px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n\n  transition: ${({ theme }) => theme.cubic} 250ms;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media screen and (min-width: ${mobile}) {\n    position: relative;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    position: absolute;\n  }\n\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n  height: 60px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.secondaryTransparent};\n`;\n\nexport const Name = styled.p`\n  padding-left: 22px;\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n\n  @media screen and (min-width: ${mobile}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 20px;\n  }\n\n  & span {\n    display: inline;\n    margin-left: 7px;\n\n    font-weight: 900;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n\n    @media screen and (min-width: ${mobile}) {\n      font-size: 18px;\n    }\n\n    @media screen and (min-width: ${tablet}) {\n      font-size: 24px;\n    }\n  }\n\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.25px;\n\n  &.location-card__name {\n    font-size: 26px;\n    margin-bottom: 30px;\n    margin-top: 20px;\n    margin-right: 5px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: flex;\n\n  @media screen and (min-width: ${mobile}) {\n    flex-direction: column;\n    height: 530px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    height: 289px;\n  }\n`;\n\nexport const Infobox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Number = styled.div`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const ResidentsButton = styled(Link)`\n  position: absolute;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.bgPrimary};\n\n  background-color: ${({ theme }) => theme.paginationAccent};\n\n  border-radius: 5px;\n  transition: clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  clip-path: polygon(\n    12% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    88% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:hover {\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n    color: ${({ theme }) => theme.secondary};\n  }\n\n  @media screen and (min-width: ${mobile}) {\n    z-index: 1;\n    bottom: -15%;\n    left: 31%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 160px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    z-index: 1;\n    bottom: -7%;\n    left: 20%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 200px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    bottom: 35%;\n    left: 85%;\n    transform: translate(-50%, -50%);\n    height: 70px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Description,\n  Img,\n  ImgWrap,\n  Infobox,\n  Name,\n  Number,\n  ResidentsButton,\n  StyledDiv,\n  Wrap,\n} from './LocationCard.styled';\nimport { locations } from 'shared/constants/routes';\nimport image from '../../../../shared/images/locationCard.jpg';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\n\nexport const LocationCard = ({ location, resident, showResidentsBtn }) => {\n  const [residentImage, setResidentImage] = useState(image);\n  const dispatch = useDispatch();\n  const locationPath = useLocation();\n\n  useEffect(() => {\n    if (resident) {\n      const residentID = resident.slice(42);\n      const img = `https://rickandmortyapi.com/api/character/avatar/${residentID}.jpeg`;\n      setResidentImage(img);\n    }\n  }, [dispatch, resident]);\n\n  return (\n    <StyledDiv>\n      <Description>\n        <ImgWrap>\n          <Img\n            src={residentImage}\n            width=\"289\"\n            height=\"289\"\n            alt=\"location\"\n            loading=\"lazy\"\n          />\n        </ImgWrap>\n        <Infobox>\n          <Name className=\"location-card__name\">{location.name}</Name>\n          <Name>\n            Type: <span>{location.type}</span>\n          </Name>\n          <Name>\n            Dimension: <span>{location.dimension}</span>\n          </Name>\n          <Name>\n            Number of residents: <span>{location.residents.length}</span>\n          </Name>\n        </Infobox>\n        {showResidentsBtn && (\n          <ResidentsButton\n            to={`/${locations}/${location.id}`}\n            state={{ from: locationPath }}\n          >\n            Residents\n          </ResidentsButton>\n        )}\n      </Description>\n      <Wrap>\n        <Number>#{location.id}</Number>\n      </Wrap>\n    </StyledDiv>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import styled from '@emotion/styled';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\n\nimport locationPageChooseLocationBG_1 from '../../../../shared/images/locationPageChooseLocationBG_1.png';\nimport locationPageChooseLocationBG_2 from '../../../../shared/images/locationPageChooseLocationBG_2.png';\nimport locationPageChooseLocationBG_3 from '../../../../shared/images/locationPageChooseLocationBG_3.png';\n\nexport const StyledDiv = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n\n  /* height: 330px;\n  width: 1000px; */\n\n  @media screen and (min-width: ${mobile}) {\n    flex-direction: column-reverse;\n    width: 255px;\n    height: 605px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    width: 700px;\n    height: 350px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    height: 330px;\n    width: 1000px;\n  }\n\n  border: 3px solid ${({ theme }) => theme.paginationAccent};\n\n  background: ${({ theme }) => theme.bgCharacterCard};\n`;\n\nexport const LocationCard = styled.div`\n  position: relative;\n\n  flex: 1;\n  height: 100%;\n\n  border-right: solid 3px ${({ theme }) => theme.accentTransparent};\n\n  &.location-card1 {\n    background-image: url(${locationPageChooseLocationBG_1});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  &.location-card2 {\n    background-image: url(${locationPageChooseLocationBG_2});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  &.location-card3 {\n    background-image: url(${locationPageChooseLocationBG_3});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n  &::before {\n    display: none;\n\n    @media screen and (min-width: ${tablet}) {\n      display: block;\n      content: '';\n      position: absolute;\n      top: -21px;\n      left: -20.6px;\n      transform: rotate(45deg);\n\n      width: 40px;\n      height: 40px;\n\n      background-color: ${({ theme }) => theme.bgPrimary};\n      border-right: 3px solid ${({ theme }) => theme.paginationAccent};\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -7px;\n    left: -7px;\n    transform: rotate(90deg);\n    /* z-index: -1; */\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.paginationAccent};\n    border-width: 0 6px 6px 0;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 75px;\n\n  border-bottom: solid 1px ${({ theme }) => theme.accentTransparent};\n\n  font-size: 30px;\n  font-weight: 600;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const LocationCardDetails = styled.div`\n  position: relative;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: ${({ theme }) => theme.bgPrimaryTransparent};\n\n  transition: transform 300ms ${({ theme }) => theme.cubic},\n    background-color 300ms ${({ theme }) => theme.cubic};\n\n  @media screen and (min-width: ${mobile}) {\n    width: 250px;\n    height: 250px;\n    &:hover {\n      background-color: ${({ theme }) => theme.bgPrimary};\n    }\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    border-radius: 10px;\n\n    &:hover {\n      transform: scale(1.02);\n      background-color: ${({ theme }) => theme.bgPrimary};\n    }\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    width: 400px;\n    height: 220px;\n  }\n`;\n\nexport const StyledH3 = styled.h3`\n  position: relative;\n  top: -15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n\n  width: 400px;\n  height: 70px;\n\n  text-align: center;\n  font-size: 22px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textPrimary};\n\n  background-color: #a3a3a3;\n  border-radius: 5px;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 250px;\n  }\n`;\n\nexport const Detail = styled.p`\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textPrimary};\n\n  & span {\n    display: inline;\n    font-weight: 900;\n    font-size: 20px;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const LocationChoose = styled.div`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  height: 100%;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -21px;\n    right: -20.6px;\n    transform: rotate(-135deg);\n\n    width: 40px;\n    height: 40px;\n\n    background-color: ${({ theme }) => theme.bgPrimary};\n    border-right: 3px solid ${({ theme }) => theme.paginationAccent};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -7px;\n    right: -7px;\n    transform: rotate(-90deg);\n\n    display: inline-block;\n    padding: 40px;\n\n    border: solid ${({ theme }) => theme.paginationAccent};\n    border-width: 0 6px 6px 0;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  height: 70px;\n\n  font-size: 20px;\n\n  border-radius: 5px;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 200px;\n\n    margin-bottom: 10px;\n    margin-top: 10px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    margin-bottom: 0;\n    margin-top: 0;\n    width: 250px;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  text-align: center;\n  font-size: 24px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getLocationById } from 'redux/location/thunks';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  LocationCard,\n  LocationCardDetails,\n  StyledDiv,\n  StyledH2,\n  StyledH3,\n  Detail,\n  LocationChoose,\n  Paragraph,\n} from './LocationPicker.styled';\nimport { getRandomLocation } from 'shared/utils/getRandomLocation';\nimport sprite from '../../../../shared/icons/sprite.svg';\nimport { RandomButton } from 'shared/components/RandomButton';\nimport { CardLoader } from 'shared/components/CardLoader/CardLoader';\nimport { useOneLocation } from 'hooks/useOneLocation';\nimport { Link, useLocation } from 'react-router-dom';\nimport { locations } from 'shared/constants/routes';\nimport { addToLibrary } from 'redux/library/slice';\nimport { randomlocations } from 'shared/constants/libaryListName';\n\nconst FIRST_LOCATION_ID = 1;\n\nexport const LocationPicker = () => {\n  const [backgroundNum, setBackgroundNum] = useState(1);\n  const dispatch = useDispatch();\n  const { location, isLoading, error } = useOneLocation();\n  const [locationID, setLocationID] = useState(\n    location?.id ?? FIRST_LOCATION_ID\n  );\n  const locationPath = useLocation();\n\n  // Random button click\n  const handleRandomBtn = () => {\n    const rndLocationID = getRandomLocation();\n    setLocationID(rndLocationID);\n\n    //   for card background\n    const rndbackgroundNum = Math.floor(Math.random() * 3) + 1;\n    setBackgroundNum(rndbackgroundNum);\n  };\n\n  useEffect(() => {\n    dispatch(getLocationById(locationID));\n    dispatch(\n      addToLibrary({ libraryListName: randomlocations, id: locationID })\n    );\n  }, [dispatch, locationID]);\n\n  const shouldShowLocation = location !== null && !isLoading && !error;\n\n  return (\n    <StyledDiv>\n      <LocationCard className={`location-card${backgroundNum}`}>\n        <StyledH2>Location Data</StyledH2>\n        {isLoading && <CardLoader />}\n        {shouldShowLocation && (\n          <LocationCardDetails>\n            <Link\n              to={`/${locations}/${location.id}`}\n              state={{ from: locationPath }}\n            >\n              <StyledH3>{location.name}</StyledH3>\n              <Detail>\n                Dimension:\n                <span> {location.dimension}</span>\n              </Detail>\n              <Detail>\n                Type:<span> {location.type}</span>\n              </Detail>\n              <Detail>\n                Number of residents:\n                <span> {location.residents.length}</span>\n              </Detail>\n            </Link>\n          </LocationCardDetails>\n        )}\n      </LocationCard>\n      <LocationChoose className=\"location-choose\">\n        <svg width=\"100\" height=\"100\">\n          <use href={`${sprite}#icons8-rick-sanchez`} />\n        </svg>\n        <Paragraph>Yeah, just go to the random location ...whatever</Paragraph>\n\n        <RandomButton\n          className=\"locationBtn\"\n          type=\"button\"\n          onClick={handleRandomBtn}\n          isLoading={isLoading}\n        >\n          Random location\n        </RandomButton>\n      </LocationChoose>\n    </StyledDiv>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH2 = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  margin-bottom: 30px;\n  margin-top: 40px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getLocationsByFilter } from 'redux/locations/thunks';\nimport { LocationCard } from '../LocationCard/LocationCard';\nimport { Pagination } from 'shared/components/Pagination';\nimport { StyledH2, StyledUl } from './LocationsList.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useLocations } from 'hooks/useLocations';\nimport { Loader } from 'shared/components/Loader';\nimport { ResultsNotFound } from 'shared/components/ResultsNotFound';\nimport { getSearchValues } from 'shared/utils/getSearchValues';\n\nexport const PARAMS_ARR = ['name', 'type', 'dimension'];\n\nexport const LocationsList = () => {\n  const [searchParams] = useSearchParams();\n  const { info, locations, error, isLoading } = useLocations();\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n\n  const showResidentsBtn = true;\n\n  useEffect(() => {\n    setPage(1);\n  }, [searchParams]);\n\n  useEffect(() => {\n    dispatch(\n      getLocationsByFilter({\n        page,\n        ...getSearchValues(PARAMS_ARR, searchParams),\n      })\n    );\n  }, [dispatch, page, searchParams]);\n\n  const shouldRenderList = locations.length > 0 && !error;\n  const shouldShowError = !isLoading && error && error.status !== 404;\n  const shouldShowNotFoundError = !isLoading && error && error.status === 404;\n  const shouldRenderPagination =\n    !error && locations.length > 0 && info?.pages > 1;\n\n  return (\n    <>\n      <StyledH2>All locations</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList && (\n        <StyledUl>\n          {locations.map(location => (\n            <li key={location.id}>\n              <LocationCard\n                location={location}\n                resident={location.residents[0]}\n                showResidentsBtn={showResidentsBtn}\n              />\n            </li>\n          ))}\n        </StyledUl>\n      )}\n      {shouldRenderPagination && (\n        <Pagination\n          totalPages={info.pages}\n          onPageChange={setPage}\n          page={page}\n        />\n      )}\n      {shouldShowError && <div>Oops, something went wrong </div>}\n      {shouldShowNotFoundError && <ResultsNotFound />}\n    </>\n  );\n};\n","import { message, regex } from 'shared/constants/searchInput';\nimport * as Yup from 'yup';\n\nexport const schema = Yup.object({\n  name: Yup.string().matches(regex, {\n    message: message,\n    excludeEmptyString: true,\n  }),\n  type: Yup.string().matches(regex, {\n    message: message,\n    excludeEmptyString: true,\n  }),\n  dimension: Yup.string().matches(regex, {\n    message: message,\n    excludeEmptyString: true,\n  }),\n});\n","import styled from '@emotion/styled';\nimport { desktop } from 'shared/constants/deviceSizes';\n\nexport const StyledDiv = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n\n  @media (min-width: ${desktop}) {\n    flex-direction: row;\n  }\n`;\n","const { nanoid } = require('@reduxjs/toolkit');\n\nexport const inputs = ['name', 'type', 'dimesion'];\n\nexport const filedsArr = [\n  { id: nanoid(), inputName: 'name', placeholder: 'Filter by name...' },\n  { id: nanoid(), inputName: 'type', placeholder: 'Filter by type...' },\n  { id: nanoid(), inputName: 'dimesion', placeholder: 'Filter by dimesion...' },\n];\n","import debounce from 'lodash.debounce';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useSearchParams } from 'react-router-dom';\nimport { schema } from './schema';\nimport { SearchInput } from 'shared/components/SearchInput';\nimport { StyledDiv } from './FilterLocation.styled';\nimport { getSearchValues } from 'shared/utils/getSearchValues';\nimport { getCleanValues } from 'shared/utils/getCleanValues';\nimport { inputs, filedsArr } from './inputs';\n\nconst DELAY = 500;\n\nexport const FilterLocation = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {\n    register,\n    formState: { errors },\n  } = useForm({\n    defaultValues: getSearchValues(inputs, searchParams),\n    resolver: yupResolver(schema),\n    mode: 'onChange',\n  });\n\n  const handleSearch = debounce(async ({ target }) => {\n    if (target.value.trim() === '') {\n      searchParams.delete(target.name);\n      setSearchParams(searchParams);\n      return;\n    }\n    if (errors[target.name]) return;\n    setSearchParams({\n      ...getCleanValues(getSearchValues(inputs, searchParams)),\n      [target.name]: target.value,\n    });\n  }, DELAY);\n\n  return (\n    <StyledDiv>\n      {filedsArr.map(({ id, inputName, placeholder }) => (\n        <li key={id}>\n          <SearchInput\n            id={id}\n            inputName={inputName}\n            register={register}\n            errors={errors}\n            onChange={handleSearch}\n            placeholder={placeholder}\n          />\n        </li>\n      ))}\n    </StyledDiv>\n  );\n};\n","import { Container } from 'shared/styles/components/Container.styled';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { StyledH1 } from './Locations.styled';\nimport { LocationPicker } from './components/LocationPicker/LocationPicker';\nimport { LocationsList } from './components/LocationsList/LocationsList';\nimport { FilterLocation } from './components/FilterLocation/FilterLocation';\n\nexport const Locations = () => {\n  return (\n    <>\n      <Section>\n        <Container>\n          <StyledH1>Locations</StyledH1>\n          <LocationPicker />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          <FilterLocation />\n          <LocationsList />\n        </Container>\n      </Section>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { Locations } from 'modules/Locations';\n\nconst LocationPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Locations</title>\n      </Helmet>\n      <Locations />\n    </>\n  );\n};\n\nexport default LocationPage;\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","export const getRandomLocation = () => {\n  const LOCATION_NUMBER = 126;\n  const rndLocationID = Math.floor(Math.random() * LOCATION_NUMBER) + 1;\n  return rndLocationID;\n};\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n"],"names":["selectLocationsInfo","state","locations","info","selectLocationsIsLoading","isLoading","selectLocationsError","error","selectLocationsWithIsFav","createSelector","items","selectFavLocationsIds","addIsFavouriteToList","useLocations","useSelector","selectLocationIsLoading","location","selectLocationError","selectLocationWithIsFav","item","selectFavEpisodesIds","addIsFavouriteToItem","useOneLocation","StyledDiv","styled","theme","cubic","ImgWrap","getStatus","mobile","tablet","Img","Wrap","secondaryTransparent","Name","characterCardTextAccent","Description","Infobox","Number","ResidentsButton","Link","bgPrimary","paginationAccent","disabled","secondary","desktop","LocationCard","resident","showResidentsBtn","useState","image","residentImage","setResidentImage","dispatch","useDispatch","locationPath","useLocation","useEffect","residentID","slice","img","src","width","height","alt","loading","className","name","type","dimension","residents","length","to","id","from","StyledH1","bgCharacterCard","accentTransparent","locationPageChooseLocationBG_1","locationPageChooseLocationBG_2","locationPageChooseLocationBG_3","StyledH2","LocationCardDetails","bgPrimaryTransparent","StyledH3","textPrimary","Detail","LocationChoose","Paragraph","LocationPicker","backgroundNum","setBackgroundNum","locationID","setLocationID","getLocationById","addToLibrary","libraryListName","randomlocations","shouldShowLocation","CardLoader","href","sprite","RandomButton","onClick","rndLocationID","getRandomLocation","rndbackgroundNum","Math","floor","random","StyledUl","PARAMS_ARR","LocationsList","useSearchParams","searchParams","page","setPage","getLocationsByFilter","getSearchValues","shouldRenderList","shouldShowError","status","shouldShowNotFoundError","shouldRenderPagination","pages","Loader","map","Pagination","totalPages","onPageChange","ResultsNotFound","schema","Yup","matches","regex","message","excludeEmptyString","nanoid","require","inputs","filedsArr","inputName","placeholder","FilterLocation","setSearchParams","useForm","defaultValues","resolver","yupResolver","mode","register","errors","formState","handleSearch","debounce","target","value","trim","delete","getCleanValues","SearchInput","onChange","Locations","alive","dead","unknown","marker"],"sourceRoot":""}