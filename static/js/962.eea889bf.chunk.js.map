{"version":3,"file":"static/js/962.eea889bf.chunk.js","mappings":"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","sources":["redux/characters/selectors.js","hooks/useCharacters.js","redux/locations/selectors.js","hooks/useLocations.js","shared/utils/spiecesNormalize.js","modules/Characters/components/CharacterCard/CharacterCard.styled.jsx","modules/Characters/components/CharacterCard/CharacterCard.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.styled.jsx","modules/Characters/components/CharacterStatus/CharacterStatus.jsx","modules/Locations/components/LocationCard/LocationCard.styled.jsx","modules/Locations/components/LocationCard/LocationCard.jsx","modules/Library/Library.styled.jsx","modules/Library/components/CharactersList/CharactersList.jsx","modules/Library/components/EpisodeCardList/EpisodeCardList.styled.jsx","modules/Library/components/EpisodeCardList/EpisodeCardList.jsx","modules/Library/components/LocationsList/LocationsList.styled.jsx","modules/Library/components/LocationsList/LocationsList.jsx","pages/FavouritePage/FavouritePage.jsx","hooks/useLibrary.js","shared/components/CardsList/CardsList.styled.jsx","shared/components/CardsList/CardsList.jsx","shared/components/Loader/Loader.styled.jsx","shared/components/Loader/Loader.jsx","shared/constants/characterStatus.js","shared/utils/getStatus.js","shared/utils/nameNormalize.js"],"sourcesContent":["export const selectCharactersInfo = state => state.characters.info;\nexport const selectCharactersItems = state => state.characters.items;\nexport const selectCharactersIsLoading = state => state.characters.isLoading;\nexport const selectCharactersError = state => state.characters.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCharactersError,\n  selectCharactersInfo,\n  selectCharactersIsLoading,\n  selectCharactersItems,\n} from 'redux/characters/selectors';\nimport { selectFavCharactersIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectCharactersWithIsFav = createSelector(\n  [selectCharactersItems, selectFavCharactersIds],\n  addIsFavouriteToList\n);\n\nexport const useCharacters = () => {\n  const info = useSelector(selectCharactersInfo);\n  const characters = useSelector(selectCharactersWithIsFav);\n  const isLoading = useSelector(selectCharactersIsLoading);\n  const error = useSelector(selectCharactersError);\n\n  return {\n    info,\n    characters,\n    isLoading,\n    error,\n  };\n};\n","export const selectLocationsInfo = state => state.locations.info;\nexport const selectLocationsItems = state => state.locations.items;\nexport const selectLocationsIsLoading = state => state.locations.isLoading;\nexport const selectLocationsError = state => state.locations.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectFavLocationsIds } from 'redux/library/selectors';\nimport {\n  selectLocationsError,\n  selectLocationsInfo,\n  selectLocationsIsLoading,\n  selectLocationsItems,\n} from 'redux/locations/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectLocationsWithIsFav = createSelector(\n  [selectLocationsItems, selectFavLocationsIds],\n  addIsFavouriteToList\n);\n\nexport const useLocations = () => {\n  const info = useSelector(selectLocationsInfo);\n  const locations = useSelector(selectLocationsWithIsFav);\n  const isLoading = useSelector(selectLocationsIsLoading);\n  const error = useSelector(selectLocationsError);\n\n  return {\n    info,\n    locations,\n    isLoading,\n    error,\n  };\n};\n","export const spiecesNormalize = spieces => {\n  if (spieces.length <= 10) return spieces;\n  const start = spieces.slice(0, 5);\n  return `${start}...`;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Number } from 'shared/styles/components/Number.styled';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const Wrap = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.accentTransparent};\n`;\n\nexport const Description = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-size: 35px;\n`;\n","import { characters } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\nimport { nameNormalize } from 'shared/utils/nameNormalize';\nimport { spiecesNormalize } from 'shared/utils/spiecesNormalize';\nimport { CharacterStatus } from '../CharacterStatus/CharacterStatus';\nimport { Heart } from 'shared/components/Heart';\nimport {\n  Description,\n  HeartWrap,\n  Img,\n  MainInfo,\n  Name,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './CharacterCard.styled';\nimport { favcharacters } from 'shared/constants/libaryListName';\n\nexport const CharacterCard = props => {\n  const location = useLocation();\n  const { id, name, species, gender, status, image, isFavourite } = props;\n\n  return (\n    <StyledLink to={`/${characters}/${id}`} state={{ from: location }}>\n      <HeartWrap>\n        <Heart\n          id={id}\n          isFavourite={isFavourite}\n          libraryListName={favcharacters}\n        />\n      </HeartWrap>\n      <Img src={image} width=\"289\" height=\"289\" alt={name} loading=\"lazy\" />\n      <Wrap>\n        <MainInfo>\n          <CharacterStatus status={status} />\n          <Name>{nameNormalize(name)}</Name>\n        </MainInfo>\n        <Description>\n          {spiecesNormalize(species)} | {gender}\n        </Description>\n        <StyledNumber>#{id}</StyledNumber>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { getStatus } from 'shared/utils/getStatus';\n\nconst beam = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Status = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n\n    animation: ${({ animate }) => (animate ? beam : 'none')} 1.5s ease-in-out\n      infinite;\n  }\n`;\n","import { Tooltip } from 'shared/components/ToolTip';\nimport { Status } from './CharacterStatus.styled';\n\nexport const CharacterStatus = ({ status, animate }) => {\n  return (\n    <Tooltip text={status}>\n      <Status marker={status} animate={animate} />\n    </Tooltip>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { desktop, mobile, tablet } from 'shared/constants/deviceSizes';\nimport { getStatus } from 'shared/utils/getStatus';\n\nexport const StyledDiv = styled.div`\n  position: relative;\n\n  display: block;\n\n  color: inherit;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 6px;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 26%;\n  left: 6%;\n\n  width: 12px;\n  height: 12px;\n\n  border-radius: 50%;\n  background-color: ${getStatus};\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n    background-color: ${getStatus};\n    opacity: 0.5;\n    border-radius: 50%;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  border-radius: 5px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: ${mobile}) {\n    width: 278px;\n    height: 278px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    width: 289px;\n    height: 289px;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n\n  transition: ${({ theme }) => theme.cubic} 250ms;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media screen and (min-width: ${mobile}) {\n    position: relative;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    position: absolute;\n  }\n\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 12px 16px;\n  height: 60px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: ${({ theme }) => theme.secondaryTransparent};\n`;\n\nexport const Name = styled.p`\n  padding-left: 22px;\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n\n  @media screen and (min-width: ${mobile}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 20px;\n  }\n\n  & span {\n    display: inline;\n    margin-left: 7px;\n\n    font-weight: 900;\n    line-height: 1;\n    letter-spacing: 0.25px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n\n    @media screen and (min-width: ${mobile}) {\n      font-size: 18px;\n    }\n\n    @media screen and (min-width: ${tablet}) {\n      font-size: 24px;\n    }\n  }\n\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.25px;\n\n  &.location-card__name {\n    font-size: 26px;\n    margin-bottom: 30px;\n    margin-top: 20px;\n    margin-right: 5px;\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: flex;\n\n  @media screen and (min-width: ${mobile}) {\n    flex-direction: column;\n    height: 530px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    flex-direction: row;\n    height: 289px;\n  }\n`;\n\nexport const Infobox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Number = styled.div`\n  position: absolute;\n  right: 5%;\n  bottom: 7%;\n  z-index: 1;\n\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const ResidentsButton = styled(Link)`\n  position: absolute;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.bgPrimary};\n\n  background-color: ${({ theme }) => theme.paginationAccent};\n\n  border-radius: 5px;\n  transition: clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  clip-path: polygon(\n    12% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    88% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:hover {\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n    color: ${({ theme }) => theme.secondary};\n  }\n\n  @media screen and (min-width: ${mobile}) {\n    z-index: 1;\n    bottom: -15%;\n    left: 31%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 160px;\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    z-index: 1;\n    bottom: -7%;\n    left: 20%;\n    transform: translate(-50%, -50%);\n    height: 50px;\n    width: 200px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    bottom: 35%;\n    left: 85%;\n    transform: translate(-50%, -50%);\n    height: 70px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Description,\n  Img,\n  ImgWrap,\n  Infobox,\n  Name,\n  Number,\n  ResidentsButton,\n  StyledDiv,\n  Wrap,\n} from './LocationCard.styled';\nimport { locations } from 'shared/constants/routes';\nimport image from '../../../../shared/images/locationCard.jpg';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\n\nexport const LocationCard = ({ location, resident, showResidentsBtn }) => {\n  const [residentImage, setResidentImage] = useState(image);\n  const dispatch = useDispatch();\n  const locationPath = useLocation();\n\n  useEffect(() => {\n    if (resident) {\n      const residentID = resident.slice(42);\n      const img = `https://rickandmortyapi.com/api/character/avatar/${residentID}.jpeg`;\n      setResidentImage(img);\n    }\n  }, [dispatch, resident]);\n\n  return (\n    <StyledDiv>\n      <Description>\n        <ImgWrap>\n          <Img\n            src={residentImage}\n            width=\"289\"\n            height=\"289\"\n            alt=\"location\"\n            loading=\"lazy\"\n          />\n        </ImgWrap>\n        <Infobox>\n          <Name className=\"location-card__name\">{location.name}</Name>\n          <Name>\n            Type: <span>{location.type}</span>\n          </Name>\n          <Name>\n            Dimension: <span>{location.dimension}</span>\n          </Name>\n          <Name>\n            Number of residents: <span>{location.residents.length}</span>\n          </Name>\n        </Infobox>\n        {showResidentsBtn && (\n          <ResidentsButton\n            to={`/${locations}/${location.id}`}\n            state={{ from: locationPath }}\n          >\n            Residents\n          </ResidentsButton>\n        )}\n      </Description>\n      <Wrap>\n        <Number>#{location.id}</Number>\n      </Wrap>\n    </StyledDiv>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH2 = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { useCharacters } from 'hooks/useCharacters';\nimport { CharacterCard } from 'modules/Characters/components/CharacterCard';\nimport { StyledH2 } from 'modules/Library/Library.styled';\nimport { CardsList } from 'shared/components/CardsList';\nimport { Loader } from 'shared/components/Loader';\n\nexport const CharactersList = () => {\n  const { characters, isLoading, error } = useCharacters();\n  const shouldRenderList = characters.length > 0 && !error;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <StyledH2>Favourite characters</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList ? (\n        <CardsList items={characters} element={CharacterCard} />\n      ) : (\n        <div>There is nothing on this list</div>\n      )}\n      {shouldShowError && <div>Oops, something went wrong </div>}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n`;\n","import { useEpisodes } from 'hooks/useEpisodes';\nimport { Loader } from 'shared/components/Loader';\nimport { Item, List } from './EpisodeCardList.styled';\nimport { EpisodeCard } from 'modules/Episodes/components/EpisodeCard/EpisodeCard';\nimport { StyledH2 } from 'modules/Library/Library.styled';\n\nexport const EpisodeCardList = () => {\n  const { episodes, error, isLoading } = useEpisodes();\n  const shouldRenderList = episodes.length > 0 && !error;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <StyledH2>Favourite episodes</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList ? (\n        <List>\n          {episodes.map(episode => (\n            <Item key={episode.id}>\n              <EpisodeCard episode={episode} />\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <div>There is nothing on this list</div>\n      )}\n      {shouldShowError && <div>Oops, something went wrong </div>}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  margin-bottom: 30px;\n  margin-top: 40px;\n`;\n","import { useLocations } from 'hooks/useLocations';\nimport { StyledH2 } from 'modules/Library/Library.styled';\nimport { Loader } from 'shared/components/Loader';\nimport { StyledUl } from './LocationsList.styled';\nimport { LocationCard } from 'modules/Locations/components/LocationCard/LocationCard';\n\nexport const LocationsList = () => {\n  const { locations, error, isLoading } = useLocations();\n  const showResidentsBtn = true;\n\n  const shouldRenderList = locations.length > 0 && !error;\n  const shouldShowError = !isLoading && error;\n\n  return (\n    <>\n      <StyledH2>Favourite locations</StyledH2>\n      {isLoading && <Loader />}\n      {shouldRenderList ? (\n        <StyledUl>\n          {locations.map(location => (\n            <li key={location.id}>\n              <LocationCard\n                location={location}\n                resident={location.residents[0]}\n                showResidentsBtn={showResidentsBtn}\n              />\n            </li>\n          ))}\n        </StyledUl>\n      ) : (\n        <div>There is nothing on this list</div>\n      )}\n      {shouldShowError && <div>Oops, something went wrong </div>}\n    </>\n  );\n};\n","import { useLibrary } from 'hooks/useLibrary';\nimport { CharactersList } from 'modules/Library/components/CharactersList/CharactersList';\nimport { EpisodeCardList } from 'modules/Library/components/EpisodeCardList/EpisodeCardList';\nimport { LocationsList } from 'modules/Library/components/LocationsList/LocationsList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getCharactersByIds } from 'redux/characters/thunks';\nimport { getEpisodesByIds } from 'redux/episodes/thunks';\nimport { getLocationsByIds } from 'redux/locations/thunks';\nimport {\n  favcharacters,\n  favepisodes,\n  favlocations,\n} from 'shared/constants/libaryListName';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { Section } from 'shared/styles/components/Section.styled';\n\nconst FavouritePage = () => {\n  const { listName } = useParams();\n  const { favCharactersIds, favEpisodesIds, favLocationsIds } = useLibrary();\n  const dispatch = useDispatch();\n\n  const isCharacters = listName === favcharacters;\n  const isEpisodes = listName === favepisodes;\n  const isLocations = listName === favlocations;\n\n  useEffect(() => {\n    if (favCharactersIds.length > 0)\n      dispatch(getCharactersByIds(favCharactersIds));\n    if (favEpisodesIds.length > 0) dispatch(getEpisodesByIds(favEpisodesIds));\n    if (favLocationsIds.length > 0)\n      dispatch(getLocationsByIds(favLocationsIds));\n  }, [dispatch, favCharactersIds, favEpisodesIds, favLocationsIds]);\n\n  return (\n    <Section>\n      <Container>\n        <>\n          {isCharacters && <CharactersList />}\n          {isEpisodes && <EpisodeCardList />}\n          {isLocations && <LocationsList />}\n        </>\n      </Container>\n    </Section>\n  );\n};\n\nexport default FavouritePage;\n","import { useSelector } from 'react-redux';\nimport {\n  selectFavCharactersIds,\n  selectFavEpisodesIds,\n  selectFavLocationsIds,\n  selectRandomCharactersIds,\n  selectRandomEpisodesIds,\n  selectRandomLocationsIds,\n} from 'redux/library/selectors';\n\nexport const useLibrary = () => {\n  const favCharactersIds = useSelector(selectFavCharactersIds);\n  const favEpisodesIds = useSelector(selectFavEpisodesIds);\n  const favLocationsIds = useSelector(selectFavLocationsIds);\n  const randomCharactersIds = useSelector(selectRandomCharactersIds);\n  const randomEpisodesIds = useSelector(selectRandomEpisodesIds);\n  const randomLocationsIds = useSelector(selectRandomLocationsIds);\n\n  return {\n    favCharactersIds,\n    favEpisodesIds,\n    favLocationsIds,\n    randomCharactersIds,\n    randomEpisodesIds,\n    randomLocationsIds,\n  };\n};\n","import styled from '@emotion/styled';\nimport { desktop, tablet } from 'shared/constants/deviceSizes';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: ${tablet}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${tablet}) {\n    flex-basis: 289px;\n  }\n\n  @media screen and (min-width: ${desktop}) {\n    flex-basis: calc((100% - 3 * 20px) / 4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, List } from './CardsList.styled';\nimport { memo } from 'react';\n\nexport const CardsList = ({ items, element: Element }) => {\n  const Component = props => {\n    return <Element {...props} />;\n  };\n\n  const MemoizedComponent = memo(Component);\n\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MemoizedComponent {...item} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  element: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1200;\n`;\n\nexport const StyledLoader = styled.p`\n  font-size: 40px;\n`;\n","import { Overlay, StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Overlay>\n      <StyledLoader>Loader</StyledLoader>\n    </Overlay>\n  );\n};\n","const CHARACTER_STATUS = {\n  alive: 'alive',\n  dead: 'dead',\n  unknown: 'unknown',\n};\n\nexport const { alive, dead, unknown } = CHARACTER_STATUS;\n","import { alive, dead, unknown } from 'shared/constants/characterStatus';\n\nexport const getStatus = ({ theme, marker }) => {\n  switch (marker) {\n    case alive:\n      return theme.alive;\n    case dead:\n      return theme.dead;\n    case unknown:\n      return theme.unknown;\n    default:\n      return theme.unknown;\n  }\n};\n","export const nameNormalize = name => {\n  if (name.length <= 13) return name;\n  const start = name.slice(0, 11);\n  return `${start}...`;\n};\n\nexport const characterNameNormalize = name => {\n  if (name.length <= 24) return name;\n  const start = name.slice(0, 22);\n  return `${start}...`;\n};\n"],"names":["selectCharactersInfo","state","characters","info","selectCharactersIsLoading","isLoading","selectCharactersError","error","selectCharactersWithIsFav","createSelector","items","selectFavCharactersIds","addIsFavouriteToList","useCharacters","useSelector","selectLocationsInfo","locations","selectLocationsIsLoading","selectLocationsError","selectLocationsWithIsFav","selectFavLocationsIds","useLocations","spiecesNormalize","spieces","length","start","slice","StyledLink","styled","Link","theme","cubic","secondary","HeartWrap","Img","MainInfo","Name","Wrap","accentTransparent","Description","StyledNumber","Number","CharacterCard","props","location","useLocation","id","name","species","gender","status","image","isFavourite","to","from","Heart","libraryListName","favcharacters","src","width","height","alt","loading","CharacterStatus","nameNormalize","beam","keyframes","Status","getStatus","animate","text","marker","StyledDiv","ImgWrap","mobile","tablet","secondaryTransparent","characterCardTextAccent","Infobox","ResidentsButton","bgPrimary","paginationAccent","disabled","desktop","LocationCard","resident","showResidentsBtn","useState","residentImage","setResidentImage","dispatch","useDispatch","locationPath","useEffect","residentID","img","className","type","dimension","residents","StyledH2","CharactersList","shouldRenderList","shouldShowError","Loader","CardsList","element","List","Item","EpisodeCardList","useEpisodes","episodes","map","episode","EpisodeCard","StyledUl","LocationsList","listName","useParams","favCharactersIds","favEpisodesIds","selectFavEpisodesIds","favLocationsIds","randomCharactersIds","selectRandomCharactersIds","randomEpisodesIds","selectRandomEpisodesIds","randomLocationsIds","selectRandomLocationsIds","isCharacters","isEpisodes","favepisodes","isLocations","favlocations","getCharactersByIds","getEpisodesByIds","getLocationsByIds","Element","Component","MemoizedComponent","memo","item","Overlay","StyledLoader","alive","dead","unknown","characterNameNormalize"],"sourceRoot":""}