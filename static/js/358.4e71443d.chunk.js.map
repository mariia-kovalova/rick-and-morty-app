{"version":3,"file":"static/js/358.4e71443d.chunk.js","mappings":"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","sources":["redux/episodes/selectors.js","hooks/useEpisodes.js","modules/Episodes/Episodes.styled.jsx","modules/Episodes/api.img/api.img.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.styled.jsx","shared/utils/episodeNameNormalize.js","modules/Episodes/components/EpisodCardInfo/EpisodeCardInfo.jsx","modules/Episodes/components/EpisodeCard/EpisodeCard.styled.jsx","modules/Episodes/components/EpisodeCard/EpisodeCard.jsx","shared/styles/components/Number.styled.jsx","shared/utils/getRandomIndex.js"],"sourcesContent":["export const selectEpisodessInfo = state => state.episodes.info;\nexport const selectEpisodesItems = state => state.episodes.items;\nexport const selectEpisodesIsLoading = state => state.episodes.isLoading;\nexport const selectEpisodesError = state => state.episodes.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport {\n  selectEpisodesError,\n  selectEpisodesIsLoading,\n  selectEpisodesItems,\n  selectEpisodessInfo,\n} from 'redux/episodes/selectors';\nimport { selectFavEpisodesIds } from 'redux/library/selectors';\nimport { addIsFavouriteToList } from 'shared/utils/addIsFavourite';\n\nconst selectEpisodesWithIsFav = createSelector(\n  [selectEpisodesItems, selectFavEpisodesIds],\n  addIsFavouriteToList\n);\n\nexport const useEpisodes = () => {\n  const info = useSelector(selectEpisodessInfo);\n  const episodes = useSelector(selectEpisodesWithIsFav);\n  const isLoading = useSelector(selectEpisodesIsLoading);\n  const error = useSelector(selectEpisodesError);\n\n  return {\n    info,\n    episodes,\n    isLoading,\n    error,\n  };\n};\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const FlexUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextInfo = styled.div`\n  padding: 8px 10px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const BasicWrapper = styled.div`\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  width: 100%;\n`;\n","import epImg1 from '../../../shared/images/episode1.jpeg';\nimport epImg2 from '../../../shared/images/episode2.jpeg';\nimport epImg3 from '../../../shared/images/episode3.jpeg';\nimport epImg4 from '../../../shared/images/episode4.jpeg';\nimport epImg5 from '../../../shared/images/episode5.jpg';\nimport epImg6 from '../../../shared/images/episode6.jpeg';\nimport epImg7 from '../../../shared/images/episode7.jpeg';\nimport epImg8 from '../../../shared/images/episode8.jpeg';\nimport epImg9 from '../../../shared/images/episode9.jpeg';\nimport epImg10 from '../../../shared/images/episode10.jpg';\nimport epImg11 from '../../../shared/images/episode11.jpg';\nimport epImg12 from '../../../shared/images/episode12.jpg';\nimport epImg13 from '../../../shared/images/episode13.jpg';\nimport epImg14 from '../../../shared/images/episode14.jpg';\nimport epImg15 from '../../../shared/images/episode15.jpg';\nimport epImg16 from '../../../shared/images/episode16.jpg';\nimport epImg17 from '../../../shared/images/episode17.jpg';\n\nexport const images = [epImg1, epImg2, epImg3, epImg4, epImg5, epImg6, epImg7, epImg8, epImg9, epImg10, epImg11, epImg12, epImg13, epImg14, epImg15, epImg16, epImg17];\n","import styled from '@emotion/styled/macro';\nimport { FlexUl, TextInfo } from 'modules/Episodes/Episodes.styled';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const CradInfoText = styled(TextInfo)`\n  width: 230px;\n\n  color: ${({ theme }) => theme.characterCardTextAccent};\n  background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n  border: 2px solid ${({ theme }) => theme.characterCardTextAccent};\n  border-radius: 4px;\n\n  clip-path: polygon(\n    10% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    90% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    clip-path 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic};\n\n  a:hover &,\n  a:focus & {\n    transform: scale(1.05);\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n  }\n`;\n\nexport const FlexInfo = styled(FlexUl)`\n  align-items: start;\n  gap: 10px;\n\n  & > li:first-of-type ${CradInfoText} {\n    width: 230px;\n    font-size: 18px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 270px;\n      font-size: 22px;\n    }\n  }\n\n  & > li:nth-of-type(2) ${CradInfoText} {\n    width: 200px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 230px;\n    }\n  }\n\n  & > li:last-of-type ${CradInfoText} {\n    width: 160px;\n\n    @media screen and (min-width: ${tablet}) {\n      width: 180px;\n    }\n  }\n`;\n","export const episodeNameNoramlize = episodeName => {\n  if (episodeName.length <= 15) return episodeName;\n  const start = episodeName.slice(0, 13);\n  return `${start}...`;\n};\n","import { useLocation } from 'react-router';\nimport { CradInfoText, FlexInfo } from './EpisodeCardInfo.styled';\nimport { episodeNameNoramlize } from 'shared/utils/episodeNameNormalize';\nimport { episodes } from 'shared/constants/routes';\n\nexport const EpisodeCardInfo = ({ episode }) => {\n  const location = useLocation();\n  const { id, name, episode: episodeCode, air_date } = episode;\n\n  const info = [\n    location.pathname === `/${episodes}/${id}`\n      ? name\n      : episodeNameNoramlize(name),\n    air_date,\n    episodeCode,\n  ];\n  return (\n    <FlexInfo className=\"random-episode episode-card episodes-page\">\n      {info.map(data => (\n        <li key={data}>\n          <CradInfoText>{data}</CradInfoText>\n        </li>\n      ))}\n    </FlexInfo>\n  );\n};\n","import styled from '@emotion/styled/macro';\nimport { BasicWrapper } from 'modules/Episodes/Episodes.styled';\nimport { Link } from 'react-router-dom';\nimport { tablet } from 'shared/constants/deviceSizes';\nimport { Number } from 'shared/styles/components/Number.styled';\nimport { getHeartColor } from 'shared/utils/getHeartColor';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  width: 100%;\n  color: inherit;\n  transition: transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Wrap = styled(BasicWrapper)`\n  position: relative;\n  height: 159px;\n\n  background-color: ${({ theme }) => theme.bgPrimary};\n  border: 3px solid ${({ theme }) => theme.crossThemeAccent};\n\n  @media screen and (min-width: ${tablet}) {\n    height: 247px;\n  }\n\n  & ul.episode-card {\n    position: absolute;\n    top: 107px;\n    left: 41px;\n\n    @media screen and (min-width: ${tablet}) {\n      top: 23px;\n      left: 66px;\n    }\n  }\n\n  & ul.episode-card > li:not(:first-of-type) {\n    @media screen and (max-width: ${tablet}) {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      border: 0;\n      padding: 0;\n\n      white-space: nowrap;\n      clip-path: inset(100%);\n      clip: rect(0 0 0 0);\n      overflow: hidden;\n    }\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n\n    width: 100%;\n    height: 50px;\n\n    background-color: ${({ theme }) => theme.bgEpisodesTransparent};\n\n    @media screen and (max-width: ${tablet}) {\n      display: none;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  margin-left: auto;\n\n  border-radius: 4px;\n\n  @media screen and (min-width: ${tablet}) {\n    border-radius: 0 4px 4px 0;\n  }\n`;\n\nexport const StyledNumber = styled(Number)`\n  position: absolute;\n  bottom: 5px;\n  right: 20px;\n\n  font-size: 24px;\n  transition: color 250ms ${({ theme }) => theme.cubic};\n\n  ${StyledLink}:hover & {\n    color: ${({ theme }) => theme.characterCardTextAccent};\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    font-size: 30px;\n  }\n`;\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  width: 30px;\n  height: 30px;\n\n  & svg {\n    stroke: ${getHeartColor};\n    fill: ${getHeartColor};\n  }\n`;\n","import { images } from 'modules/Episodes/api.img/api.img';\nimport { getRandomIndex } from 'shared/utils/getRandomIndex';\nimport { EpisodeCardInfo } from '../EpisodCardInfo/EpisodeCardInfo';\nimport {\n  HeartWrap,\n  Img,\n  StyledLink,\n  StyledNumber,\n  Wrap,\n} from './EpisodeCard.styled';\nimport { Heart } from 'shared/components/Heart';\nimport { favepisodes } from 'shared/constants/libaryListName';\nimport { useMemo } from 'react';\nimport { episodes } from 'shared/constants/routes';\nimport { useLocation } from 'react-router';\n\nexport const EpisodeCard = ({ episode }) => {\n  const location = useLocation();\n  const randomId = useMemo(() => getRandomIndex(images.length), []);\n  const image = images[randomId];\n\n  const { id, name, isFavourite } = episode;\n\n  return (\n    <StyledLink to={`/${episodes}/${id}`} state={{ from: location }}>\n      <Wrap>\n        <Img\n          src={image}\n          alt={`episode ${name}`}\n          width=\"430\"\n          height=\"242\"\n          loading=\"lazy\"\n        />\n        <EpisodeCardInfo episode={episode} />\n        <StyledNumber>#{id}</StyledNumber>\n        <HeartWrap isFavourite={isFavourite}>\n          <Heart\n            id={id}\n            isFavourite={isFavourite}\n            libraryListName={favepisodes}\n          />\n        </HeartWrap>\n      </Wrap>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Number = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n","export const getRandomIndex = max => Math.floor(Math.random() * max);\n"],"names":["selectEpisodessInfo","state","episodes","info","selectEpisodesIsLoading","isLoading","selectEpisodesError","error","selectEpisodesWithIsFav","createSelector","items","selectFavEpisodesIds","addIsFavouriteToList","useEpisodes","useSelector","StyledH1","styled","FlexUl","TextInfo","BasicWrapper","images","CradInfoText","theme","characterCardTextAccent","bgEpisodesTransparent","cubic","FlexInfo","tablet","episodeNameNoramlize","episodeName","length","start","slice","EpisodeCardInfo","episode","location","useLocation","id","name","episodeCode","air_date","pathname","className","map","data","StyledLink","Link","Wrap","bgPrimary","crossThemeAccent","Img","StyledNumber","Number","HeartWrap","getHeartColor","EpisodeCard","randomId","useMemo","getRandomIndex","image","isFavourite","to","from","src","alt","width","height","loading","Heart","libraryListName","favepisodes","max","Math","floor","random"],"sourceRoot":""}